-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Server version:               5.5.24-log - MySQL Community Server (GPL)
-- Server OS:                    Win32
-- HeidiSQL Version:             8.0.0.4396
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- Dumping database structure for cobalt_cascade
CREATE DATABASE IF NOT EXISTS `cobalt_cascade` /*!40100 DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci */;
USE `cobalt_cascade`;


-- Dumping structure for table cobalt_cascade.cat
CREATE TABLE IF NOT EXISTS `cat` (
  `cat_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(64) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`cat_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Unique category and tag names';

-- Dumping data for table cobalt_cascade.cat: ~31 rows (approximately)
/*!40000 ALTER TABLE `cat` DISABLE KEYS */;
INSERT INTO `cat` (`cat_id`, `name`) VALUES
	(25, 'adfsd'),
	(21, 'as'),
	(20, 'asd'),
	(18, 'asdas'),
	(28, 'asdasd'),
	(9, 'asdf'),
	(14, 'asdfas'),
	(19, 'asdsad'),
	(27, 'asfdasd'),
	(15, 'df'),
	(23, 'dfs'),
	(12, 'f'),
	(22, 'fa'),
	(5, 'fith item'),
	(4, 'fourth item'),
	(16, 'fsdafsdf'),
	(8, 'fsdfad'),
	(7, 'g'),
	(24, 'gs'),
	(6, 'private'),
	(31, 's'),
	(11, 'sad'),
	(10, 'sadf'),
	(13, 'sadgf'),
	(30, 'sdf'),
	(2, 'second item'),
	(29, 'sfsad'),
	(26, 'ssdfsdfa'),
	(1, 'test item'),
	(3, 'third item'),
	(17, 'undefined');
/*!40000 ALTER TABLE `cat` ENABLE KEYS */;


-- Dumping structure for procedure cobalt_cascade.generic_tree
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `generic_tree`(IN `edge_table` CHAR(64), IN `edge_id_col` CHAR(64), IN `edge_parent_id_col` CHAR(64), IN `ancestor_id` INT
)
BEGIN
  DECLARE r INT DEFAULT 0;
  DROP TABLE IF EXISTS _subtree;
  SET @sql = Concat( 'CREATE TABLE _subtree ENGINE=MyISAM SELECT ',
                     edge_id_col,' AS child_id, ',
                     edge_parent_id_col, ' AS parent_id,',
                     '0 AS level FROM ',
                     edge_table, ' WHERE ', edge_parent_id_col, '=', ancestor_id );
  PREPARE stmt FROM @sql;
  EXECUTE stmt;
  DROP PREPARE stmt;
  ALTER TABLE _subtree ADD PRIMARY KEY(child_id,parent_id);
  REPEAT
    SET @sql = Concat( 'INSERT IGNORE INTO _subtree SELECT DISTINCT a.', edge_id_col,
                       ',a.',edge_parent_id_col, ',b.level+1 FROM ',
                       edge_table, ' AS a JOIN _subtree AS b ON a.',edge_parent_id_col, '=b.child_id' );
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    SET r=Row_Count();  -- save row_count() result before DROP PREPARE loses the value
    DROP PREPARE stmt;
  UNTIL r < 1 END REPEAT;
END//
DELIMITER ;


-- Dumping structure for table cobalt_cascade.invitation
CREATE TABLE IF NOT EXISTS `invitation` (
  `invitation_id` int(11) NOT NULL AUTO_INCREMENT,
  `from_user_id` int(11) NOT NULL,
  `to_user_id` int(11) NOT NULL,
  `ring_id` int(11) NOT NULL,
  `type` int(11) NOT NULL COMMENT 'see lookup table',
  PRIMARY KEY (`invitation_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='stores invitations from users';

-- Dumping data for table cobalt_cascade.invitation: ~0 rows (approximately)
/*!40000 ALTER TABLE `invitation` DISABLE KEYS */;
/*!40000 ALTER TABLE `invitation` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.js_error
CREATE TABLE IF NOT EXISTS `js_error` (
  `js_error_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `create_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `location` int(11) unsigned NOT NULL COMMENT 'see lookup table for options',
  `type` varchar(255) COLLATE utf8_unicode_ci NOT NULL COMMENT 'see js_error_codes table for options',
  `message` text COLLATE utf8_unicode_ci NOT NULL,
  `data` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`js_error_id`),
  KEY `location` (`location`),
  KEY `type` (`type`),
  KEY `create_date` (`create_date`)
) ENGINE=InnoDB AUTO_INCREMENT=3362 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Log of javascript errors.';

-- Dumping data for table cobalt_cascade.js_error: ~1,651 rows (approximately)
/*!40000 ALTER TABLE `js_error` DISABLE KEYS */;
INSERT INTO `js_error` (`js_error_id`, `create_date`, `location`, `type`, `message`, `data`) VALUES
	(1424, '2013-10-28 11:00:17', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10332"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10332/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"BA2C1EBB-393F-4EA3-BFBF-292C9B2E07B2"}'),
	(1425, '2013-10-28 11:00:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : E2212048-7575-4E38-AB95-2B49A95F24C3', '{"domain":"cobaltcascade.localhost","post_id":"10332"}'),
	(1426, '2013-10-28 11:10:16', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"CF15C79B-48C9-4E21-8196-F6F458AB0F65"}'),
	(1427, '2013-10-28 11:10:16', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"8772E870-A81F-44E7-B640-AD8E39FF92B7"}'),
	(1428, '2013-10-28 12:42:35', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382964153,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"8A528D46-99A6-4E8B-AAD4-D3D9845E13F1"}'),
	(1429, '2013-10-28 12:42:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : C9C60755-3F83-4F6E-8F3A-7E8F17DE4096', '{}'),
	(1430, '2013-10-28 12:42:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : C9C60755-3F83-4F6E-8F3A-7E8F17DE4096', '{}'),
	(1431, '2013-10-28 12:42:45', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382964164,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"BB4F0C22-B211-4650-A3AB-3BA39F0AFCDD"}'),
	(1432, '2013-10-28 12:43:10', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 90834DF7-B6A9-47E1-9EDA-E6BA441B8467', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1433, '2013-10-28 12:43:10', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 59D71714-0B0A-41A1-9F50-B3B433978942', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1434, '2013-10-28 12:43:25', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382964205,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"1B5CE024-C6C3-4325-B35C-F2BD316AEDF6"}'),
	(1435, '2013-10-28 12:43:26', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382964205,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"0610BAFF-802E-4747-A60E-91EA941A4C20"}'),
	(1436, '2013-10-28 12:43:41', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382964221,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"4531E21E-CADA-4C9A-8C05-43EB59253B62"}'),
	(1437, '2013-10-28 12:44:39', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382964278,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"D4833F6F-73BE-459D-A3B4-C817A0A9263D"}'),
	(1438, '2013-10-28 12:45:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4246DDF6-EB81-4C11-8C08-0CD4C304CD66', '{}'),
	(1439, '2013-10-28 12:45:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4246DDF6-EB81-4C11-8C08-0CD4C304CD66', '{}'),
	(1440, '2013-10-28 12:45:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4246DDF6-EB81-4C11-8C08-0CD4C304CD66', '{}'),
	(1441, '2013-10-28 12:46:02', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B66AFC72-24AF-4C9C-A1E3-1950FB17605A', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1442, '2013-10-28 12:46:02', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1F3C9A71-344F-4C45-8A74-DAC4F3796C98', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1443, '2013-10-28 12:46:04', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 22DFE7DB-451D-4766-B9A9-17BA48296443', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1444, '2013-10-28 12:55:35', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"local_all","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"CD4DA226-1990-411D-A9DD-FDFA2E44AF67"},"request_guid":"F198B63D-0DF3-46D0-92F4-49259A6CA317"}'),
	(1445, '2013-10-28 12:55:35', 67, 'client_timeout', 'A timeout occoured when calling an action: SetWaitingPostCount. GUID : EFC2C2CB-3AB5-43BD-A113-AD22D4CC9987', '{"global":false,"time_viewed":1382964901,"type":"private"}'),
	(1446, '2013-10-28 12:55:35', 67, 'client_timeout', 'A timeout occoured when calling an action: SetWaitingPostCount. GUID : F1CCA330-CCF4-48FF-B2E0-561935E2181F', '{"global":false,"time_viewed":1382964901,"type":"public"}'),
	(1447, '2013-10-28 12:55:36', 67, 'domus_action_error', 'Callback object not found for returning_guid : F1CCA330-CCF4-48FF-B2E0-561935E2181F', '{}'),
	(1448, '2013-10-28 12:55:36', 67, 'domus_action_error', 'Callback object not found for returning_guid : EFC2C2CB-3AB5-43BD-A113-AD22D4CC9987', '{}'),
	(1449, '2013-10-28 12:55:37', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"B6FFD03A-1D8E-4E0C-AF70-A28E0417C792"}'),
	(1450, '2013-10-28 12:55:37', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"CD4DA226-1990-411D-A9DD-FDFA2E44AF67"}'),
	(1451, '2013-10-28 12:55:38', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"},"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"08DAC3AE-3EA1-4EF4-AF8D-4F711398C850"}'),
	(1452, '2013-10-28 12:55:38', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"CD4DA226-1990-411D-A9DD-FDFA2E44AF67"}'),
	(1453, '2013-10-28 12:55:39', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382964901,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"EFC2C2CB-3AB5-43BD-A113-AD22D4CC9987"}'),
	(1454, '2013-10-28 12:55:39', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382964901,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"F1CCA330-CCF4-48FF-B2E0-561935E2181F"}'),
	(1455, '2013-10-28 12:55:54', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382964947,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"1A574E66-1F60-4958-91EC-224C5E3183F5"}'),
	(1456, '2013-10-28 12:55:54', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382964947,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"A82D5A33-A0A6-44AD-9EE9-64348C9A4EC9"}'),
	(1457, '2013-10-28 12:56:00', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382964956,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"6F6A6BE0-1C28-47D1-A542-FA6E4A862817"}'),
	(1458, '2013-10-28 12:56:01', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382964956,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"10529E94-1DC0-4101-8166-A5FC24291510"}'),
	(1459, '2013-10-28 13:05:57', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"98BB6776-A4F4-4B86-A25F-2234F8DDFC16"}'),
	(1460, '2013-10-28 13:05:57', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"BDFA1068-45A1-4AF6-A97A-7761B80BC0FB"}'),
	(1461, '2013-10-28 14:31:45', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382970703,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"A1A57238-CFFB-4914-8170-40318BC8AD1B"}'),
	(1462, '2013-10-28 14:31:45', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382970703,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"DB2DF17B-C79E-4921-96A0-CD3BCA2DFC4D"}'),
	(1463, '2013-10-28 14:37:07', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382971023,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"60FC2C63-34A9-4089-A177-689B2ADB1F28"}'),
	(1464, '2013-10-28 14:37:08', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382971023,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"1B62D780-A30B-4495-9414-5C4EFD325EE8"}'),
	(1465, '2013-10-28 14:37:33', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382971044,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"1E3EC489-378F-430B-BC02-F645292CEEB1"}'),
	(1466, '2013-10-28 14:37:33', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":true,"time_viewed":1382971044,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"F8806110-DDF1-4920-978E-B3EF224ED5EF"}'),
	(1467, '2013-10-28 14:44:51', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6E28ACDE-6505-417A-971C-4A4E62DB1669', '{}'),
	(1468, '2013-10-28 14:44:51', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6E28ACDE-6505-417A-971C-4A4E62DB1669', '{}'),
	(1469, '2013-10-28 14:45:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C1818F81-4F21-4546-8E5D-052848372178', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1470, '2013-10-28 14:45:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6D8749BC-21F0-4B82-A936-6640135BD77A', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1471, '2013-10-28 14:52:31', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382971950,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"D43A7E1A-6E31-4E67-9F4A-A680125FDE24"}'),
	(1472, '2013-10-28 14:52:32', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382971950,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"AF83AA97-B413-4ED7-BBAD-E2F9B4C4EFA3"}'),
	(1473, '2013-10-28 14:54:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : E3279050-5803-4E3E-B597-DD4FDEE2B6E7', '{}'),
	(1474, '2013-10-28 14:54:40', 67, 'domus_action_error', 'Callback object not found for returning_guid : D32C6D99-ECBC-428C-99E5-41C6CB6BE71B', '{}'),
	(1475, '2013-10-28 14:55:26', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972124,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"4D9AA54F-6A6B-47A5-943C-55B74E479B0F"}'),
	(1476, '2013-10-28 14:55:26', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972124,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"9777F14E-2BB6-4E8A-9FBF-A1C2F422CB76"}'),
	(1477, '2013-10-28 14:55:33', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972128,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"07531356-7A2F-4DEA-ADF5-A86AA0F794F0"}'),
	(1478, '2013-10-28 14:55:33', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972128,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"DB6FB4DA-4354-48DA-9CD3-818C21B9AE49"}'),
	(1479, '2013-10-28 14:57:25', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972241,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"3DE98093-0800-45BD-90FA-AA5610A76AD1"}'),
	(1480, '2013-10-28 14:57:25', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972241,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"0612FDFB-812D-467F-9708-525C796903A3"}'),
	(1481, '2013-10-28 14:57:37', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"local_all","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"D0DBA307-74B3-4B46-B613-18C44AC42D8C"},"request_guid":"E81402BD-56CD-4070-9514-BF359BE72A5B"}'),
	(1482, '2013-10-28 14:57:40', 66, 'GetTakes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetTakesForPost","request_data":{"post_id":"27","post_domain":"cobaltcascade.localhost","post_creation_timestamp":"1321877220"},"error_code":"GetTakes_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/data/getposttakes Domain : domus.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"FDA1D2A3-F7A1-4730-AE5F-06CA67BBD648"}'),
	(1483, '2013-10-28 14:57:40', 66, 'GetTakes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetTakesForPost","request_data":{"post_id":"33","post_domain":"cobaltcascade.localhost","post_creation_timestamp":"1321877580"},"error_code":"GetTakes_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/data/getposttakes Domain : domus.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"059C3439-5C6F-4FCE-B6EF-CE2ECEEB5C5F"}'),
	(1484, '2013-10-28 14:57:41', 66, 'GetTakes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetTakesForPost","request_data":{"post_id":"31","post_domain":"cobaltcascade.localhost","post_creation_timestamp":"1321877460"},"error_code":"GetTakes_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/data/getposttakes Domain : domus.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"36E5233A-310F-4F4B-8A14-26A496970B4B"}'),
	(1485, '2013-10-28 14:57:41', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"D0DBA307-74B3-4B46-B613-18C44AC42D8C"}'),
	(1486, '2013-10-28 14:57:41', 66, 'GetTakes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetTakesForPost","request_data":{"post_id":"69","post_domain":"cobaltcascade.localhost","post_creation_timestamp":"1321876800"},"error_code":"GetTakes_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/data/getposttakes Domain : domus.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"2041172C-7103-40D5-8954-85105150B1C1"}'),
	(1487, '2013-10-28 14:57:42', 66, 'GetTakes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetTakesForPost","request_data":{"post_id":"26","post_domain":"cobaltcascade.localhost","post_creation_timestamp":"1321877160"},"error_code":"GetTakes_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/data/getposttakes Domain : domus.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"CD3D4999-8857-4BF5-ADB2-A6DA7802D48B"}'),
	(1488, '2013-10-28 14:57:42', 66, 'GetTakes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetTakesForPost","request_data":{"post_id":"68","post_domain":"cobaltcascade.localhost","post_creation_timestamp":"1321876800"},"error_code":"GetTakes_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/data/getposttakes Domain : domus.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"BD5A2B33-6E7C-4029-8790-1014A2115E46"}'),
	(1489, '2013-10-28 14:57:47', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972258,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"F195B9BF-3C91-490D-B7F4-AFC1731E380B"}'),
	(1490, '2013-10-28 14:57:47', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972258,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"09A09735-3415-471F-80A5-C9E118CE1679"}'),
	(1491, '2013-10-28 14:57:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 7CEA6E3D-2C2C-43AD-8CBE-A2C91481C51C', '{}'),
	(1492, '2013-10-28 14:57:59', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972278,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"E94F4D9B-171F-4992-9F0C-54FD63AD46D2"}'),
	(1493, '2013-10-28 14:57:59', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972278,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"C527D758-2283-4D3F-AD31-B8AB1F664FE2"}'),
	(1494, '2013-10-28 14:58:05', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972280,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"221AE4CF-D2E8-4B16-B829-3A319408C779"}'),
	(1495, '2013-10-28 14:58:05', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972280,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"7468A84C-C183-4BFA-B417-1C2060C3EE36"}'),
	(1496, '2013-10-28 14:59:43', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972379,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"D01B549D-7F30-4240-A845-6BFF21F6F8FC"}'),
	(1497, '2013-10-28 14:59:44', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382972379,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"1B9A057E-9979-4C99-899D-83F47617A05A"}'),
	(1498, '2013-10-28 15:12:30', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382973146,"type":"private"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"0C3D7E33-60E1-40B6-9C36-78B9A5D2CFBB"}'),
	(1499, '2013-10-28 15:12:31', 66, 'server_SetWaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SetWaitingPostCount","request_data":{"global":false,"time_viewed":1382973146,"type":"public"},"error_code":"server_SetWaitingPostCount_failed","error_data":"default_ajax_error","request_guid":"C07269A4-801E-4CB7-B239-16785934B16F"}'),
	(1500, '2013-10-28 15:19:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : F6BFB172-3A6E-4724-9402-02BAF5A58D9D', '{}'),
	(1501, '2013-10-28 15:20:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 61A66193-6FBC-4A4F-A245-9848ADB2F13F', '{"sort_request":{"type":"global_sent_private","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1502, '2013-10-28 15:20:48', 67, 'domus_action_error', 'Callback object not found for returning_guid : B4214D64-44A3-41B6-A4A2-005B8297F9BA', '{}'),
	(1503, '2013-10-28 15:21:15', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BF76AB60-F84C-45A2-998B-6D2608DE5433', '{"sort_request":{"type":"global_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1504, '2013-10-28 15:30:36', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D1663C71-2BE8-46B8-AE5A-111E73A157BB"}'),
	(1505, '2013-10-28 15:30:37', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"3B8E6727-99E3-43F5-9064-5632DB89005A"}'),
	(1506, '2013-10-28 15:36:49', 67, 'domus_action_error', 'Callback object not found for returning_guid : E965CA8D-FE12-43A7-98F2-253FAFE1D485', '{}'),
	(1507, '2013-10-28 15:37:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A763D8E0-84CD-4398-AE12-877876C54830', '{"sort_request":{"type":"local_sent_private","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1508, '2013-10-28 15:47:31', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"60136A77-CFBC-4C8A-B339-3D594D4709E4"}'),
	(1509, '2013-10-28 15:47:32', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"5982FFE1-E2EE-47A3-8612-4C320121612F"}'),
	(1510, '2013-10-28 16:01:30', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D320986D-4CC3-4E95-9B74-239BC82440AF"}'),
	(1511, '2013-10-28 16:01:30', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"AF0B7C20-A5DF-4783-B942-DC39DDE3F611"}'),
	(1512, '2013-10-28 16:19:28', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"8D077AFB-15AD-460E-B3C7-06DCA9C08ED7"}'),
	(1513, '2013-10-28 16:19:28', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"global_sent_private","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"8D077AFB-15AD-460E-B3C7-06DCA9C08ED7"},"request_guid":"39B061F2-A1BF-4033-BCD4-1499C8463504"}'),
	(1514, '2013-10-28 16:19:28', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"global_sent_private","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"},"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"A6C241C9-55C9-4A8E-BAB1-2E9F7066F87A"}'),
	(1515, '2013-10-28 16:21:28', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"3E9A2090-AC07-4666-917E-C9CBED1C56E5"}'),
	(1516, '2013-10-28 16:21:28', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"global_sent_private","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"3E9A2090-AC07-4666-917E-C9CBED1C56E5"},"request_guid":"F6FB0ADB-7D00-41D3-BEDE-094F731B3D99"}'),
	(1517, '2013-10-28 16:21:28', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"global_sent_private","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"},"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"466792E2-BE30-490A-AE29-078FF5A5DB25"}'),
	(1518, '2013-10-28 16:26:28', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"2B01EC70-0FF0-49F6-B695-B65DFC1381D3"}'),
	(1519, '2013-10-28 16:30:50', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"124"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/124/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"7A948FA2-E138-4857-9AFA-B23852F95366"}'),
	(1520, '2013-10-28 16:31:19', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : E264CBDA-C1C6-4463-BC6C-9EBE89DA3322', '{"domain":"cobaltcascade.localhost","post_id":"124"}'),
	(1521, '2013-10-28 16:40:23', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"999B1422-03DA-42CC-94DB-F6E54857480B"}'),
	(1522, '2013-10-28 16:40:23', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"2D210516-3D17-4B66-BF5B-7CB2DB383F56"}'),
	(1523, '2013-10-28 16:48:10', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"124"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/124/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"286D9AF2-F580-40BA-937B-7630E592656D"}'),
	(1524, '2013-10-28 16:48:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 74704BAB-9437-41C5-963D-7C4EBA7A5311', '{"domain":"cobaltcascade.localhost","post_id":"124"}'),
	(1525, '2013-10-28 16:54:00', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"124"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/124/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"94462D73-ED09-4C25-B541-90D68653E03C"}'),
	(1526, '2013-10-28 16:54:30', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : FA1B3EEA-79E7-4197-BFFA-40B78F916CBF', '{"domain":"cobaltcascade.localhost","post_id":"124"}'),
	(1527, '2013-10-28 16:54:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : AF57377F-AD97-4EA3-8FE6-1D5494311776', '{}'),
	(1528, '2013-10-28 16:54:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : AF57377F-AD97-4EA3-8FE6-1D5494311776', '{}'),
	(1529, '2013-10-28 16:55:21', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6CB2AACB-48A0-4286-8B4B-067F194225F7', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1530, '2013-10-28 16:55:22', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : D9588267-E0D4-435B-B1DA-E64064386588', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1531, '2013-10-29 05:07:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : C10800D3-00BE-46C7-817B-E80EC3E3E9EB', '{}'),
	(1532, '2013-10-29 05:07:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : C10800D3-00BE-46C7-817B-E80EC3E3E9EB', '{}'),
	(1533, '2013-10-29 05:08:01', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9F4232F7-D532-43C8-9A26-3015AEA8CD29', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(1534, '2013-10-29 05:08:01', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8F58C4C6-1321-45CA-9CC4-6EF4DCD9C261', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":10,"name":"test reverse datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(1535, '2013-10-29 05:17:31', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"AB567F6A-E41F-4A77-8FD9-FE4760AED3A2"}'),
	(1536, '2013-10-29 05:17:31', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"F618DCD4-2268-41EC-9ACD-C7FE08AAB28B"}'),
	(1537, '2013-10-29 05:48:40', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"B32834A0-3C47-4DB1-BEB4-18E5416B4EFA"}'),
	(1538, '2013-10-29 05:48:40', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"local_all","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"B32834A0-3C47-4DB1-BEB4-18E5416B4EFA"},"request_guid":"959C6F43-996C-4E59-8C19-8B6390A59595"}'),
	(1539, '2013-10-29 05:48:40', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"},"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"FA3BC5B3-2A05-47D0-A5ED-DACC0D5743E5"}'),
	(1540, '2013-10-29 05:49:11', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DCF2E8F5-539C-49FF-BBAD-62C037C23855', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1541, '2013-10-29 05:51:45', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 75684AC2-A767-40AB-9F1F-29D2B5844EA0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1542, '2013-10-29 06:01:16', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"1B98BEA2-3C8A-4F77-B761-5484D6141237"}'),
	(1543, '2013-10-29 06:01:16', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"AF6534A7-9881-479B-9438-D25099F48B5A"}'),
	(1544, '2013-10-29 06:05:25', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 9334A29D-BCFC-42B7-9C17-F2B8651C3BD7', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1545, '2013-10-29 06:05:26', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : ADC65A5A-8E21-477E-86ED-7B0507B4E7A6', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1546, '2013-10-29 06:05:26', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 5A803B71-CC2D-4BBE-A021-255850A6A33F', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1547, '2013-10-29 06:05:30', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 93C4CB8B-7055-4F65-B5C2-32F9DEEB52CD', '{"domain":"cobaltcascade.localhost","post_id":"10325","revision":"1"}'),
	(1548, '2013-10-29 06:05:30', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 9A449214-6F93-4FFE-84BC-66B2F34BA48B', '{"domain":"cobaltcascade.localhost","post_id":"10324","revision":"1"}'),
	(1549, '2013-10-29 06:05:30', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : CB16ACED-B7AB-46AB-BE69-EF5B0205E90E', '{"domain":"cobaltcascade.localhost","post_id":"10323","revision":"1"}'),
	(1550, '2013-10-29 06:05:30', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 457BE05F-25CC-40AA-852A-1B2F323BEF9B', '{"domain":"cobaltcascade.localhost","post_id":"10322","revision":"1"}'),
	(1551, '2013-10-29 06:05:30', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 2182C631-8004-4C27-9C39-7823C689AD43', '{"domain":"cobaltcascade.localhost","post_id":"10321","revision":"1"}'),
	(1552, '2013-10-29 06:05:30', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : E1B31F6B-7B1C-413F-AEFD-9323D6132722', '{"domain":"cobaltcascade.localhost","post_id":"10320","revision":"1"}'),
	(1553, '2013-10-29 06:05:31', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 4FE8D518-9FA6-43EC-8497-C0224A54F21E', '{"domain":"cobaltcascade.localhost","post_id":"10318","revision":"1"}'),
	(1554, '2013-10-29 06:05:31', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 0F004DEC-FB62-43D8-9723-AB2326783DA2', '{"domain":"cobaltcascade.localhost","post_id":"10317","revision":"1"}'),
	(1555, '2013-10-29 06:05:31', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 75ECC17E-10A1-47FA-A5DF-35FAB2465792', '{"domain":"cobaltcascade.localhost","post_id":"10316","revision":"1"}'),
	(1556, '2013-10-29 06:05:31', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 21D9DA94-2FCF-419E-BF39-6E1F7A9AC71A', '{"domain":"cobaltcascade.localhost","post_id":"10315","revision":"1"}'),
	(1557, '2013-10-29 06:05:31', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 46FB06AC-989D-4D06-86F9-F642BAD2DF24', '{"domain":"cobaltcascade.localhost","post_id":"10314","revision":"1"}'),
	(1558, '2013-10-29 06:05:31', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : A476F588-392C-4331-8D42-C15506A32AD9', '{"domain":"cobaltcascade.localhost","post_id":"10313","revision":"1"}'),
	(1559, '2013-10-29 06:05:31', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 74B1357E-46B8-4749-AA22-20042D4DD4B6', '{"domain":"cobaltcascade.localhost","post_id":"10312","revision":"1"}'),
	(1560, '2013-10-29 06:05:31', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 5D7D46C1-8415-44F3-B240-7756C670FCF8', '{"domain":"cobaltcascade.localhost","post_id":"10311","revision":"1"}'),
	(1561, '2013-10-29 06:05:31', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 6CD1BEAF-69D3-4D17-9971-CD669FD2692C', '{"domain":"cobaltcascade.localhost","post_id":"10310","revision":"1"}'),
	(1562, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : A2FFE4DF-6DF7-46FC-95B9-C28C375D9C21', '{"domain":"cobaltcascade.localhost","post_id":"10309","revision":"1"}'),
	(1563, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 1B942AAD-61B4-48F8-BA94-CCE63D416016', '{"domain":"cobaltcascade.localhost","post_id":"37","revision":"2"}'),
	(1564, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 88679710-99E0-419B-A804-B0A9C8857947', '{"domain":"cobaltcascade.localhost","post_id":"36","revision":"1"}'),
	(1565, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : C1D42DBD-DB81-4DAB-93A1-683783F6C166', '{"domain":"cobaltcascade.localhost","post_id":"35","revision":"1"}'),
	(1566, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 0676771B-369F-4E62-ACF8-EF847C83EDEC', '{"domain":"cobaltcascade.localhost","post_id":"34","revision":"1"}'),
	(1567, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 963485A8-1DFE-4AB6-93D1-C7A50FCA94C5', '{"domain":"cobaltcascade.localhost","post_id":"33","revision":"1"}'),
	(1568, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 58780886-DF45-4073-B4EB-87AF9150701A', '{"domain":"cobaltcascade.localhost","post_id":"32","revision":"1"}'),
	(1569, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 423DE93B-5DE9-416C-B598-09E5954AA1A2', '{"domain":"cobaltcascade.localhost","post_id":"31","revision":"1"}'),
	(1570, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 03827AFB-8616-447B-82E7-1A18E32F5058', '{"domain":"cobaltcascade.localhost","post_id":"30","revision":"1"}'),
	(1571, '2013-10-29 06:05:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 1B5EDE6B-498A-4480-B9EB-97034EBA37C0', '{"domain":"cobaltcascade.localhost","post_id":"29","revision":"1"}'),
	(1572, '2013-10-29 06:05:33', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 5D5B9D25-5957-49DB-8D40-92CDCB640D99', '{"domain":"cobaltcascade.localhost","post_id":"28","revision":"1"}'),
	(1573, '2013-10-29 06:05:33', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 3C6F3D33-C80E-4D54-8C97-CBCE331D73B6', '{"domain":"cobaltcascade.localhost","post_id":"27","revision":"1"}'),
	(1574, '2013-10-29 06:05:33', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 4C643A9C-34CD-4DDF-A30D-0A0A294531C7', '{"domain":"cobaltcascade.localhost","post_id":"26","revision":"1"}'),
	(1575, '2013-10-29 06:05:33', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : DA93AAEF-B236-4005-B16B-A1C5C9C0C030', '{"domain":"cobaltcascade.localhost","post_id":"25","revision":"1"}'),
	(1576, '2013-10-29 06:05:33', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : F96184D3-B25A-47CB-977F-83DBD2FD6DE8', '{"domain":"cobaltcascade.localhost","post_id":"24","revision":"1"}'),
	(1577, '2013-10-29 06:05:33', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 9721A996-59FD-40BA-A75D-757ACC15ABBB', '{"domain":"cobaltcascade.localhost","post_id":"22","revision":"1"}'),
	(1578, '2013-10-29 06:05:33', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 4D0A727D-8C72-4007-97C2-13BDFBD5C039', '{"domain":"cobaltcascade.localhost","post_id":"62","revision":"1"}'),
	(1579, '2013-10-29 06:09:44', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10327","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"C5743B87-7161-4CF5-A3DB-73C049DB6264"}'),
	(1580, '2013-10-29 06:09:44', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10326","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"5C4E5968-D931-4B70-8CB3-8D34BC1551A3"}'),
	(1581, '2013-10-29 06:09:45', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10322","revision":"1"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10322/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"38EFFC75-61FF-499C-A926-346EDD05363F"}'),
	(1582, '2013-10-29 06:09:45', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10325","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"234CD8B9-CFB2-4582-B531-4B607812972E"}'),
	(1583, '2013-10-29 06:09:45', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10323","revision":"1"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10323/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"525E8D78-F07E-427D-82D2-24C33C366684"}'),
	(1584, '2013-10-29 06:09:45', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10324","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"A8C60256-F6E1-49FD-8ADA-06725F0FA74A"}'),
	(1585, '2013-10-29 06:10:17', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : C023E785-0DEE-4F9E-B12F-ECB9386296B5', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1586, '2013-10-29 06:10:17', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 905D567F-CE7C-4813-A9CB-C8E4B7B07E20', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1587, '2013-10-29 06:10:17', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 979392D8-F1B7-4A9C-B81C-B48B3B7CD747', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1588, '2013-10-29 06:10:18', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : FAF8D811-794D-439D-A4E3-315245A8B349', '{"domain":"cobaltcascade.localhost","post_id":"10324","revision":"1"}'),
	(1589, '2013-10-29 06:10:18', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : FA486995-2283-4F45-BF31-60E405DA7F4B', '{"domain":"cobaltcascade.localhost","post_id":"10323","revision":"1"}'),
	(1590, '2013-10-29 06:10:18', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 7AF5FA08-5C85-4A34-9DF3-D84D1EB294B2', '{"domain":"cobaltcascade.localhost","post_id":"10322","revision":"1"}'),
	(1591, '2013-10-29 06:10:18', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 8A8CB214-82A6-4E2F-961D-8F232E022D2C', '{"domain":"cobaltcascade.localhost","post_id":"10321","revision":"1"}'),
	(1592, '2013-10-29 06:10:18', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : C3A2002E-D59E-4D0F-BFE2-98AAB0E9EDE6', '{"domain":"cobaltcascade.localhost","post_id":"10320","revision":"1"}'),
	(1593, '2013-10-29 06:11:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3BBBC1C9-CDEE-4A59-9222-F7421E0D899C', '{}'),
	(1594, '2013-10-29 06:11:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3BBBC1C9-CDEE-4A59-9222-F7421E0D899C', '{}'),
	(1595, '2013-10-29 06:11:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A98C8F1-3030-44DD-BA1E-0C9526BC0A75', '{}'),
	(1596, '2013-10-29 06:11:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A98C8F1-3030-44DD-BA1E-0C9526BC0A75', '{}'),
	(1597, '2013-10-29 06:11:34', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FDBC5A49-7D6F-476D-9530-924C42C86433', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1598, '2013-10-29 06:11:34', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 38D798AB-5AC7-4095-AFEB-6AA466D3110C', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1599, '2013-10-29 06:13:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3035855D-368C-4969-A049-B5791C457CE0', '{}'),
	(1600, '2013-10-29 06:13:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3035855D-368C-4969-A049-B5791C457CE0', '{}'),
	(1601, '2013-10-29 06:13:40', 67, 'domus_action_error', 'Callback object not found for returning_guid : 012A57B4-E611-4B54-A2CF-E5A3B2E048EA', '{}'),
	(1602, '2013-10-29 06:13:40', 67, 'domus_action_error', 'Callback object not found for returning_guid : 012A57B4-E611-4B54-A2CF-E5A3B2E048EA', '{}'),
	(1603, '2013-10-29 06:14:06', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2D838CC1-D40A-4939-82CC-D81B4D8CE07D', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1604, '2013-10-29 06:14:06', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 504C6925-8904-4B67-9398-E829AB66C776', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1605, '2013-10-29 06:14:47', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 0DDDEA36-7438-45A7-A8B7-1961AD6AD715', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1606, '2013-10-29 06:16:35', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"70224203-1AE9-463D-A9F3-43DE0D6AAD33"}'),
	(1607, '2013-10-29 06:16:35', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"70224203-1AE9-463D-A9F3-43DE0D6AAD33"},"request_guid":"8E7353D9-1B3E-4F1B-A496-3E6F87B02885"}'),
	(1608, '2013-10-29 06:16:36', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":20,"update":true,"block_numbers":[0,"2",1],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"FCEF68DE-3D5F-4525-A249-A3B5A26E9BD0"}'),
	(1609, '2013-10-29 06:16:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : 889985B2-61DD-4A70-84EF-558979FECC40', '{}'),
	(1610, '2013-10-29 06:16:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : 889985B2-61DD-4A70-84EF-558979FECC40', '{}'),
	(1611, '2013-10-29 06:17:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 95E55037-4EE1-431D-883B-63DA6C7F4575', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1612, '2013-10-29 06:17:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 98D38C30-28FF-487F-97B9-AF037614B0E8', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1613, '2013-10-29 06:17:32', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : FACF19B5-0A70-4896-AB59-82EDBE8E861B', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1614, '2013-10-29 06:25:24', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 352AC26F-873A-4FDE-A1F2-858DF8CF61B9', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1615, '2013-10-29 06:25:24', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 280DA1BD-6715-4AFE-80A9-B5BD1D071FB0', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1616, '2013-10-29 06:25:24', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 58DF21E7-FD24-4657-A6D7-060E218B5076', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1617, '2013-10-29 06:26:09', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 8A1E4E45-496E-499C-87E0-E68C51AC02A7', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1618, '2013-10-29 06:26:10', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 15BA58E7-1862-43E0-BD13-C175E7841C9D', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1619, '2013-10-29 06:26:10', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 17D1CB58-C99B-47A6-9FEF-1BD506B465DF', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1620, '2013-10-29 06:27:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : 138C929C-94AA-4D0A-9424-ACFB33528BE1', '{}'),
	(1621, '2013-10-29 06:27:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : 138C929C-94AA-4D0A-9424-ACFB33528BE1', '{}'),
	(1622, '2013-10-29 06:27:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : E982104A-866A-49D3-8A98-8B3C49E685C2', '{}'),
	(1623, '2013-10-29 06:27:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : E982104A-866A-49D3-8A98-8B3C49E685C2', '{}'),
	(1624, '2013-10-29 06:28:16', 67, 'domus_action_error', 'Callback object not found for returning_guid : E1B63167-28C3-4B31-8706-805DA7A88502', '{}'),
	(1625, '2013-10-29 06:28:16', 67, 'domus_action_error', 'Callback object not found for returning_guid : E1B63167-28C3-4B31-8706-805DA7A88502', '{}'),
	(1626, '2013-10-29 06:28:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1FC25A90-9879-4AA3-8E16-E968A70A4235', '{}'),
	(1627, '2013-10-29 06:28:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1FC25A90-9879-4AA3-8E16-E968A70A4235', '{}'),
	(1628, '2013-10-29 06:28:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1FC25A90-9879-4AA3-8E16-E968A70A4235', '{}'),
	(1629, '2013-10-29 06:28:36', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10320"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10320/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"8423E5F0-3840-4834-A133-1F70EFA85A55"}'),
	(1630, '2013-10-29 06:28:36', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10321"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10321/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"A5C0BAAB-4B46-4002-B822-EA514662934D"}'),
	(1631, '2013-10-29 06:28:36', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10323"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"D6BB51C7-EB54-458A-8BB1-307709C9C781"}'),
	(1632, '2013-10-29 06:28:36', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10316"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10316/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"858748C5-2739-45C8-B0E7-DA73AD3D9D9F"}'),
	(1633, '2013-10-29 06:28:36', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10324"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"0F332454-FBA3-42C2-9FED-CB48954E7C4D"}'),
	(1634, '2013-10-29 06:28:37', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10317"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10317/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"BE235A84-9F61-48DF-803A-5CB884247054"}'),
	(1635, '2013-10-29 06:28:37', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10314"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10314/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"AE5F1C08-B58B-470A-BEA5-FD46E67FE15A"}'),
	(1636, '2013-10-29 06:28:37', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10318"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10318/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"64A5AC79-BA4D-4218-BAB8-D334087CAB59"}'),
	(1637, '2013-10-29 06:28:37', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10315"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10315/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"F2C681F6-E173-4D32-BDD5-6CA1EF940CFB"}'),
	(1638, '2013-10-29 06:28:37', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10319"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10319/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"616821BD-B38B-42DA-AB9A-5C9C00B839F3"}'),
	(1639, '2013-10-29 06:28:37', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10322"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10322/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"127EA84C-5DD8-4989-8AC0-600A31A966CB"}'),
	(1640, '2013-10-29 06:28:37', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10313"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10313/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"23198594-A93A-4CB5-B453-49DEEB3570A4"}'),
	(1641, '2013-10-29 06:29:11', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 6C77807F-5DFF-43D2-A213-C29D73C6298F', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1642, '2013-10-29 06:29:11', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 4CD2822A-0C1F-4732-83BB-5520C392E020', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1643, '2013-10-29 06:29:12', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 9CD1B684-8BD8-4773-B277-60A51249DD55', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1644, '2013-10-29 06:30:52', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10331","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"ABC221B7-D582-4E34-8735-FBB4FAC12720"}'),
	(1645, '2013-10-29 06:30:52', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"447B8BCA-FB38-4CDD-A0EC-2F844C9910C1"}'),
	(1646, '2013-10-29 06:30:52', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10327","revision":"1"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10327/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"B788FE13-CC48-439C-98FC-E76C0DDF82E1"}'),
	(1647, '2013-10-29 06:30:52', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"37928AD7-DF47-4496-8CB1-6A1FC6972C01"}'),
	(1648, '2013-10-29 06:34:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : 540F89F1-0EF9-4866-8AF6-1E876792CE8E', '{}'),
	(1649, '2013-10-29 06:34:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : 540F89F1-0EF9-4866-8AF6-1E876792CE8E', '{}'),
	(1650, '2013-10-29 06:35:08', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 34A080D9-68EB-4FF3-A54D-5E7BC2075B7A', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1651, '2013-10-29 06:35:08', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 2372C290-863B-4167-A9BA-4BF7AEDB88F1', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1652, '2013-10-29 06:35:08', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : C9C8830A-B61C-4F05-8B9C-82E812C5A3BB', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1653, '2013-10-29 06:35:52', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 29EAC9C2-1A82-4E85-8A83-F9E0BB31522B', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1654, '2013-10-29 06:35:53', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 11F3F8E5-3B94-4514-AE69-6C381BB0482C', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1655, '2013-10-29 06:35:53', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : F93B2A32-DB7A-4887-A36D-AC26A38A3EE2', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1656, '2013-10-29 06:38:04', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B807C888-12CC-4D26-ABD1-33DAFEB051FB', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1657, '2013-10-29 06:38:04', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : BBB61A44-7E57-4B94-9753-EBC1BF1252A9', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1658, '2013-10-29 06:38:04', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B6152425-71D6-4D03-B7C4-8DFD5D5D760D', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1659, '2013-10-29 06:39:04', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10327","revision":"1"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10327/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"5410147C-0CC8-4560-8150-EE5B44E9C7DC"}'),
	(1660, '2013-10-29 06:39:05', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10332"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"FFFAEADF-285F-4C9F-93CE-6C2FCBBA451F"}'),
	(1661, '2013-10-29 06:39:05', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10331","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"9A75E47E-589C-47DB-8729-BC0DE76D3402"}'),
	(1662, '2013-10-29 06:39:05', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10329","revision":"1"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10329/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"6F144413-5B35-4398-9543-59C9D00E3815"}'),
	(1663, '2013-10-29 06:39:05', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10330","revision":"1"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10330/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"A50FA360-C006-46A4-B5BF-BC544EC10CD4"}'),
	(1664, '2013-10-29 06:39:39', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 7D0C55CB-3F0D-4DDD-BD57-651E1BB01592', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1665, '2013-10-29 06:39:39', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : D1C52F22-EB6A-4887-BACE-46D56235695D', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1666, '2013-10-29 06:39:39', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : A70F6912-C25B-43E9-B125-19D02AB6DCE3', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1667, '2013-10-29 06:39:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B8B02E7D-37AE-425B-8344-56BD20AE0EFE', '{"domain":"cobaltcascade.localhost","post_id":"10325","revision":"1"}'),
	(1668, '2013-10-29 06:39:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 009BB5F7-00EA-40CE-AC53-A9F1DE693C94', '{"domain":"cobaltcascade.localhost","post_id":"10324","revision":"1"}'),
	(1669, '2013-10-29 06:39:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B4879BDF-4EB9-4DDC-BAAD-FF3EB3AC697C', '{"domain":"cobaltcascade.localhost","post_id":"10323","revision":"1"}'),
	(1670, '2013-10-29 06:39:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 215F8F8C-CC87-4EF7-855C-48C03CC41182', '{"domain":"cobaltcascade.localhost","post_id":"10322","revision":"1"}'),
	(1671, '2013-10-29 06:39:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : D1590C57-3C50-48C9-8865-1A22575F638F', '{"domain":"cobaltcascade.localhost","post_id":"10321","revision":"1"}'),
	(1672, '2013-10-29 06:39:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B5F34559-85DB-4246-8FB6-E6178B9BE03A', '{"domain":"cobaltcascade.localhost","post_id":"10320","revision":"1"}'),
	(1673, '2013-10-29 06:39:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : CD4C882C-DABF-4919-A230-9606405E7CE9', '{"domain":"cobaltcascade.localhost","post_id":"10318","revision":"1"}'),
	(1674, '2013-10-29 06:39:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : FBAB33E3-3DAB-44A9-B2D1-9483CF853B57', '{"domain":"cobaltcascade.localhost","post_id":"10317","revision":"1"}'),
	(1675, '2013-10-29 06:39:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 506DB443-CBC3-45D4-BF98-ACF394296AF2', '{"domain":"cobaltcascade.localhost","post_id":"10316","revision":"1"}'),
	(1676, '2013-10-29 06:39:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : EC7CEF5A-8C4C-495D-BFEA-535523B1DFCD', '{"domain":"cobaltcascade.localhost","post_id":"10315","revision":"1"}'),
	(1677, '2013-10-29 06:39:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : EB121158-21A5-4691-B3AF-4E27DDA4C3E4', '{"domain":"cobaltcascade.localhost","post_id":"10314","revision":"1"}'),
	(1678, '2013-10-29 06:39:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 8279F097-99FB-4026-AD63-B9C802AA6EF5', '{"domain":"cobaltcascade.localhost","post_id":"10313","revision":"1"}'),
	(1679, '2013-10-29 06:39:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 4A5C8DCD-968E-4C39-99B6-F56BF5DDE370', '{"domain":"cobaltcascade.localhost","post_id":"10312","revision":"1"}'),
	(1680, '2013-10-29 06:39:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 4384C919-996E-447F-B4D7-86224B60B6CE', '{"domain":"cobaltcascade.localhost","post_id":"10311","revision":"1"}'),
	(1681, '2013-10-29 06:39:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 40EDCF67-DE81-4A84-AB32-A155F8FFDE85', '{"domain":"cobaltcascade.localhost","post_id":"10310","revision":"1"}'),
	(1682, '2013-10-29 06:39:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : AB38C5C7-B1F9-4B74-A152-D7B440FA9EC2', '{"domain":"cobaltcascade.localhost","post_id":"10309","revision":"1"}'),
	(1683, '2013-10-29 06:39:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 9B0FC757-91A6-43C6-B37C-1A0645C67585', '{"domain":"cobaltcascade.localhost","post_id":"37","revision":"2"}'),
	(1684, '2013-10-29 06:39:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 3D7E1421-1B60-4608-A67F-F1F085CBB288', '{"domain":"cobaltcascade.localhost","post_id":"36","revision":"1"}'),
	(1685, '2013-10-29 06:39:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 7357925C-5E26-4BCC-AC1B-A6164DFD5F0A', '{"domain":"cobaltcascade.localhost","post_id":"35","revision":"1"}'),
	(1686, '2013-10-29 06:39:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 9B9C86D5-9D4D-4002-B4AD-2F1E31B8D74F', '{"domain":"cobaltcascade.localhost","post_id":"34","revision":"1"}'),
	(1687, '2013-10-29 06:39:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 0A527079-80A0-4A56-B8F4-617C673CD6AA', '{"domain":"cobaltcascade.localhost","post_id":"33","revision":"1"}'),
	(1688, '2013-10-29 06:39:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 9A373981-132E-44E9-8476-0A25AB3474EC', '{"domain":"cobaltcascade.localhost","post_id":"32","revision":"1"}'),
	(1689, '2013-10-29 06:39:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 0FE018F5-630A-4A3F-82C7-02D0EEBE2681', '{"domain":"cobaltcascade.localhost","post_id":"31","revision":"1"}'),
	(1690, '2013-10-29 06:39:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 6D4F4FFB-B270-4944-8B53-2AE8035A1437', '{"domain":"cobaltcascade.localhost","post_id":"30","revision":"1"}'),
	(1691, '2013-10-29 06:39:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 736920E6-5809-4B9E-AABA-65C8997C6090', '{"domain":"cobaltcascade.localhost","post_id":"29","revision":"1"}'),
	(1692, '2013-10-29 06:39:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 869DE7A2-B9CB-4A79-8ED1-08947FF68C2B', '{"domain":"cobaltcascade.localhost","post_id":"28","revision":"1"}'),
	(1693, '2013-10-29 06:39:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 2E8ECA71-B5EC-4672-818D-775784E5229A', '{"domain":"cobaltcascade.localhost","post_id":"27","revision":"1"}'),
	(1694, '2013-10-29 06:39:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : E806BEDB-B88F-402B-A2DA-8E4D5B1DFAC1', '{"domain":"cobaltcascade.localhost","post_id":"26","revision":"1"}'),
	(1695, '2013-10-29 06:39:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 31E8D046-884F-4BFC-8B0F-C55709183082', '{"domain":"cobaltcascade.localhost","post_id":"25","revision":"1"}'),
	(1696, '2013-10-29 06:39:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 1A60C512-B3A2-4BFE-B766-20CFFE2366AD', '{"domain":"cobaltcascade.localhost","post_id":"24","revision":"1"}'),
	(1697, '2013-10-29 06:39:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : F0F060A5-C7D6-441A-BF12-B070ADE88DA6', '{"domain":"cobaltcascade.localhost","post_id":"22","revision":"1"}'),
	(1698, '2013-10-29 06:39:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 1BCE673D-1B8B-47F2-8F27-E0C79512AA52', '{"domain":"cobaltcascade.localhost","post_id":"62","revision":"1"}'),
	(1699, '2013-10-29 06:39:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : AFB48DEC-5BB7-4F8C-941B-2BA9FFF2DA8F', '{"domain":"cobaltcascade.localhost","post_id":"63","revision":"1"}'),
	(1700, '2013-10-29 06:39:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 9F75ABED-EB58-49C5-B819-D77460616485', '{"domain":"cobaltcascade.localhost","post_id":"64","revision":"1"}'),
	(1701, '2013-10-29 06:39:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : DC1003C5-B452-43A5-9416-8660D85C2475', '{"domain":"cobaltcascade.localhost","post_id":"65","revision":"1"}'),
	(1702, '2013-10-29 06:39:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 3A36D88B-BA9D-4A47-BDED-60C12604317A', '{"domain":"cobaltcascade.localhost","post_id":"66","revision":"1"}'),
	(1703, '2013-10-29 06:39:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : A544820B-BBD3-4588-9794-F312C4F895F0', '{"domain":"cobaltcascade.localhost","post_id":"67","revision":"1"}'),
	(1704, '2013-10-29 06:39:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 0D4A0B05-777C-4D94-9DDE-561F69F29E28', '{"domain":"cobaltcascade.localhost","post_id":"68","revision":"1"}'),
	(1705, '2013-10-29 06:39:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : EEB5016A-5F71-4975-9BA1-58E17E1A71DC', '{"domain":"cobaltcascade.localhost","post_id":"69","revision":"1"}'),
	(1706, '2013-10-29 06:39:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 1C87B4D5-FE07-451B-B01D-2A90E556BAFC', '{"domain":"cobaltcascade.localhost","post_id":"70","revision":"1"}'),
	(1707, '2013-10-29 06:39:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : A104B31A-FDF7-438B-91C9-49F408011905', '{"domain":"cobaltcascade.localhost","post_id":"71","revision":"1"}'),
	(1708, '2013-10-29 06:39:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 0A567F40-2490-4A1C-A67A-972928D5B87F', '{"domain":"cobaltcascade.localhost","post_id":"72","revision":"1"}'),
	(1709, '2013-10-29 06:39:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : F36D4EE3-0B2C-419E-B2AE-538AE60E6DCE', '{"domain":"cobaltcascade.localhost","post_id":"73","revision":"1"}'),
	(1710, '2013-10-29 06:39:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 95C4B4D0-FEE6-4613-8369-B438896C8785', '{"domain":"cobaltcascade.localhost","post_id":"74","revision":"1"}'),
	(1711, '2013-10-29 06:39:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 6343BEA8-195D-43B2-B4BF-739212E5DA95', '{"domain":"cobaltcascade.localhost","post_id":"75","revision":"1"}'),
	(1712, '2013-10-29 06:40:52', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : E6EF6A2B-E955-401D-8E6C-B68D39690AA1', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1713, '2013-10-29 06:40:52', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 7F465C82-96A2-4466-990D-3BDF57F4222D', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1714, '2013-10-29 06:40:52', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 1923D925-3F45-4297-AFC5-A8DE5429BF02', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1715, '2013-10-29 06:42:55', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"70","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"8763D443-ABC6-4F4E-851E-7C9D7F626477"}'),
	(1716, '2013-10-29 06:42:55', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"69","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"5627FBC0-FF36-4B5F-9AE7-B0FEC9ACE199"}'),
	(1717, '2013-10-29 06:42:55', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"74","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"F7DD51B1-7F35-407E-B836-DFA5C4EBF623"}'),
	(1718, '2013-10-29 06:42:56', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"72","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"912CB0DA-F578-4D89-9232-9429C07045F4"}'),
	(1719, '2013-10-29 06:42:56', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"73","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"2965922A-441F-42A6-B181-F03B7B6C7D2D"}'),
	(1720, '2013-10-29 06:42:56', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"71","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"F2D64095-E0CA-4633-A170-CED20390F2C5"}'),
	(1721, '2013-10-29 06:42:56', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"75","revision":"1"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"B10456C1-243E-46B2-B06D-1C00C2E9535A"}'),
	(1722, '2013-10-29 06:43:09', 67, 'domus_action_error', 'Callback object not found for returning_guid : B1488DA5-672F-458F-8B8D-E15B8FD54894', '{}'),
	(1723, '2013-10-29 06:43:09', 67, 'domus_action_error', 'Callback object not found for returning_guid : B1488DA5-672F-458F-8B8D-E15B8FD54894', '{}'),
	(1724, '2013-10-29 06:43:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : 020A7DD1-D804-43E0-9662-A73346A27880', '{}'),
	(1725, '2013-10-29 06:43:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : 020A7DD1-D804-43E0-9662-A73346A27880', '{}'),
	(1726, '2013-10-29 06:43:35', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9CD1CC8B-4184-49B1-B7AD-0F6E5CABFB9A', '{}'),
	(1727, '2013-10-29 06:43:35', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9CD1CC8B-4184-49B1-B7AD-0F6E5CABFB9A', '{}'),
	(1728, '2013-10-29 06:44:01', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1664BFFB-A9F5-4FD0-9AC5-161C0F953D74', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1729, '2013-10-29 06:44:01', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2415C17F-36F9-4311-B46B-4C1908D1D077', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1730, '2013-10-29 06:44:45', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91CC8A19-4AF6-419D-B67D-4E1766840B3B', '{}'),
	(1731, '2013-10-29 06:44:46', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91CC8A19-4AF6-419D-B67D-4E1766840B3B', '{}'),
	(1732, '2013-10-29 06:45:11', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : D38B0824-765F-46AD-A0A7-602B177949C9', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1733, '2013-10-29 06:45:11', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FA4A66F2-3E84-4097-AF7F-CE0BDFB7FA64', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1734, '2013-10-29 06:46:20', 65, 'scientia_server_get_posts', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"update":false,"sort_id":2,"client_timeout":1383029208626},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/getpostsblock Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"FC7A89EC-A846-4AB5-A148-79827CCCE5F6"}'),
	(1735, '2013-10-29 06:46:20', 66, 'scientia_server_get_posts', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"update":false,"sort_id":2,"client_timeout":1383029208626},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/getpostsblock Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"FC7A89EC-A846-4AB5-A148-79827CCCE5F6"},"request_guid":"27D45CE7-5D94-46C6-B6FA-7472A2B8689C"}'),
	(1736, '2013-10-29 06:46:20', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"update":false,"sort_id":2,"client_timeout":1383029208626},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/getpostsblock Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"FC7A89EC-A846-4AB5-A148-79827CCCE5F6"},"request_guid":"27D45CE7-5D94-46C6-B6FA-7472A2B8689C"},"request_guid":"053C5BBC-5E9A-4860-B220-BE23D9C9C81F"}'),
	(1737, '2013-10-29 06:46:20', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"59452A80-B77E-4679-99C7-7651EC5411EA"}'),
	(1738, '2013-10-29 06:46:20', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"59452A80-B77E-4679-99C7-7651EC5411EA"}'),
	(1739, '2013-10-29 06:46:21', 67, 'domus_action_error', 'Callback object not found for returning_guid : 59452A80-B77E-4679-99C7-7651EC5411EA', '{}'),
	(1740, '2013-10-29 06:46:21', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"59452A80-B77E-4679-99C7-7651EC5411EA"}'),
	(1741, '2013-10-29 06:46:21', 67, 'domus_action_error', 'Callback object not found for returning_guid : 59452A80-B77E-4679-99C7-7651EC5411EA', '{}'),
	(1742, '2013-10-29 06:46:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : FDDEB0D5-EF31-4CE8-9BB5-8D4C28E2FB6E', '{}'),
	(1743, '2013-10-29 06:46:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : FDDEB0D5-EF31-4CE8-9BB5-8D4C28E2FB6E', '{}'),
	(1744, '2013-10-29 06:46:51', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B9DDBDBB-6556-40A3-BB1A-63F8756BC1AF', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1745, '2013-10-29 06:46:51', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0D8D3BB4-9608-459D-A8F1-05BFBDBE1842', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(1746, '2013-10-29 06:46:58', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 0E03BF39-A296-44AB-951A-F1F83F191507', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1747, '2013-10-29 06:49:37', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 94A41302-DBD8-4501-8304-50D5783F8BD4', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1748, '2013-10-29 06:49:37', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 37F77CA0-E0C9-40E0-947D-2FCAACBEFF9E', '{"domain":"cobaltcascade.localhost","post_id":"10330","revision":"1"}'),
	(1749, '2013-10-29 06:49:37', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 4728B1B3-3DC3-469E-8816-65327FBD6B33', '{"domain":"cobaltcascade.localhost","post_id":"10329","revision":"1"}'),
	(1750, '2013-10-29 06:49:39', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : FB261B90-01FA-4544-8ED9-1FCAC6346CA4', '{"domain":"cobaltcascade.localhost","post_id":"10325","revision":"1"}'),
	(1751, '2013-10-29 06:49:39', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B2FD2908-5ED9-42A7-9333-7A20A60C8DC2', '{"domain":"cobaltcascade.localhost","post_id":"10324","revision":"1"}'),
	(1752, '2013-10-29 06:49:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : ADEBE4C8-7092-4CC5-BD3A-30F231A2BB76', '{"domain":"cobaltcascade.localhost","post_id":"10323","revision":"1"}'),
	(1753, '2013-10-29 06:49:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 31C79DBB-53D6-4F14-91AD-6E33D58FA579', '{"domain":"cobaltcascade.localhost","post_id":"10322","revision":"1"}'),
	(1754, '2013-10-29 06:49:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 09355A2C-C042-45E4-BECA-6A3D6C8BC40C', '{"domain":"cobaltcascade.localhost","post_id":"10321","revision":"1"}'),
	(1755, '2013-10-29 06:49:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B6D78168-9850-45D1-8665-59F8C006BB35', '{"domain":"cobaltcascade.localhost","post_id":"10320","revision":"1"}'),
	(1756, '2013-10-29 06:49:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 4730B72C-4BDF-43C6-BA84-DC5CFA263711', '{"domain":"cobaltcascade.localhost","post_id":"10318","revision":"1"}'),
	(1757, '2013-10-29 06:49:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : EDC67A20-4569-4C29-B3CC-A69C5DA8FBFC', '{"domain":"cobaltcascade.localhost","post_id":"10317","revision":"1"}'),
	(1758, '2013-10-29 06:49:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 23FAB606-DC91-443A-BC44-79C529DBC009', '{"domain":"cobaltcascade.localhost","post_id":"10316","revision":"1"}'),
	(1759, '2013-10-29 06:49:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 9E5478EA-445E-4A4E-BDFA-CCFE76CB72DC', '{"domain":"cobaltcascade.localhost","post_id":"10315","revision":"1"}'),
	(1760, '2013-10-29 06:49:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 24358DC1-CF91-41BA-B654-D29F07586A41', '{"domain":"cobaltcascade.localhost","post_id":"10314","revision":"1"}'),
	(1761, '2013-10-29 06:49:42', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 43AE2ED7-1AC1-4F9A-804A-FFBC90849CDA', '{"domain":"cobaltcascade.localhost","post_id":"10313","revision":"1"}'),
	(1762, '2013-10-29 06:49:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 89A56F3C-CA1B-4ACA-8B56-257A4A6F808C', '{"domain":"cobaltcascade.localhost","post_id":"10312","revision":"1"}'),
	(1763, '2013-10-29 06:49:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : AEDC37A5-B812-4573-B978-F7F0955579F9', '{"domain":"cobaltcascade.localhost","post_id":"10311","revision":"1"}'),
	(1764, '2013-10-29 06:49:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : D24F2206-74B7-446E-85EF-AB48AE4F9F85', '{"domain":"cobaltcascade.localhost","post_id":"10310","revision":"1"}'),
	(1765, '2013-10-29 06:49:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : BED24B50-9E99-4457-A9C4-C0D9BD1EA1BF', '{"domain":"cobaltcascade.localhost","post_id":"10309","revision":"1"}'),
	(1766, '2013-10-29 06:49:43', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : F49C6097-B3D0-43C2-9238-70683CFDAD2C', '{"domain":"cobaltcascade.localhost","post_id":"37","revision":"2"}'),
	(1767, '2013-10-29 06:49:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 6CDCC173-62BF-4B30-AFCD-B4EC2FFD550F', '{"domain":"cobaltcascade.localhost","post_id":"36","revision":"1"}'),
	(1768, '2013-10-29 06:49:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 4C2B7CE9-EA0C-4662-8459-544A6F3F6569', '{"domain":"cobaltcascade.localhost","post_id":"35","revision":"1"}'),
	(1769, '2013-10-29 06:49:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : F7B79991-53AC-4B98-A0D3-1EAC89251630', '{"domain":"cobaltcascade.localhost","post_id":"34","revision":"1"}'),
	(1770, '2013-10-29 06:49:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 1CA4FED4-CD64-4FA2-B601-5D177291C6A7', '{"domain":"cobaltcascade.localhost","post_id":"33","revision":"1"}'),
	(1771, '2013-10-29 06:49:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 237D48F0-08CF-4131-95B5-8D9BFB54AE23', '{"domain":"cobaltcascade.localhost","post_id":"32","revision":"1"}'),
	(1772, '2013-10-29 06:49:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : AA97ECC1-57D4-4769-8D9E-299848DFBAC9', '{"domain":"cobaltcascade.localhost","post_id":"31","revision":"1"}'),
	(1773, '2013-10-29 06:49:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 97C19DBC-9B82-49A5-B702-74AC144850FE', '{"domain":"cobaltcascade.localhost","post_id":"30","revision":"1"}'),
	(1774, '2013-10-29 06:49:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 8AB5FFB3-B8D0-4EF7-B3B0-82F321E57A33', '{"domain":"cobaltcascade.localhost","post_id":"29","revision":"1"}'),
	(1775, '2013-10-29 06:49:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : BABE8D7B-9BDE-4B0E-A68A-304CFDAE5A6F', '{"domain":"cobaltcascade.localhost","post_id":"28","revision":"1"}'),
	(1776, '2013-10-29 06:49:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 90D18364-AD3B-42BA-8097-E5B667B590EF', '{"domain":"cobaltcascade.localhost","post_id":"27","revision":"1"}'),
	(1777, '2013-10-29 06:49:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 5E0504EA-2D4A-490B-8788-E45026735556', '{"domain":"cobaltcascade.localhost","post_id":"26","revision":"1"}'),
	(1778, '2013-10-29 06:49:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 97BAAEE5-87C1-4279-88D5-A532A7CBCFBB', '{"domain":"cobaltcascade.localhost","post_id":"25","revision":"1"}'),
	(1779, '2013-10-29 06:49:46', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 8E6831FF-15C1-480B-B338-3568DF533A1D', '{"domain":"cobaltcascade.localhost","post_id":"24","revision":"1"}'),
	(1780, '2013-10-29 06:49:46', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : FF95E21A-E3F5-4D98-AF09-89D954DF80F6', '{"domain":"cobaltcascade.localhost","post_id":"22","revision":"1"}'),
	(1781, '2013-10-29 06:49:46', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 7D5D920E-6752-4E87-8253-29B796B09A64', '{"domain":"cobaltcascade.localhost","post_id":"62","revision":"1"}'),
	(1782, '2013-10-29 06:49:46', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 84D1BA3A-16DD-436E-8807-3A280765324D', '{"domain":"cobaltcascade.localhost","post_id":"63","revision":"1"}'),
	(1783, '2013-10-29 06:49:46', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : F0A05A8B-C94B-45FA-BB11-5E2275F81758', '{"domain":"cobaltcascade.localhost","post_id":"64","revision":"1"}'),
	(1784, '2013-10-29 06:49:46', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : A6399AB8-4765-4434-888E-18ECE3F7E56B', '{"domain":"cobaltcascade.localhost","post_id":"65","revision":"1"}'),
	(1785, '2013-10-29 06:49:47', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 200D39BE-F350-4501-AC41-1E4C752A0BB9', '{"domain":"cobaltcascade.localhost","post_id":"66","revision":"1"}'),
	(1786, '2013-10-29 06:49:47', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 39A8B401-6502-4F6D-B87B-A572FF1D401D', '{"domain":"cobaltcascade.localhost","post_id":"67","revision":"1"}'),
	(1787, '2013-10-29 06:49:47', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 11EB04EA-F79A-40B6-A30C-AF9E6E461E49', '{"domain":"cobaltcascade.localhost","post_id":"68","revision":"1"}'),
	(1788, '2013-10-29 06:49:48', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 84A0FA69-9885-4D2B-9848-2A534005D7EC', '{"domain":"cobaltcascade.localhost","post_id":"69","revision":"1"}'),
	(1789, '2013-10-29 06:49:48', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 0EA06522-FB0B-4DB7-AE70-A3BAC5D20CD0', '{"domain":"cobaltcascade.localhost","post_id":"70","revision":"1"}'),
	(1790, '2013-10-29 06:49:48', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 8285DE01-458C-4D12-BC0B-184D510396EE', '{"domain":"cobaltcascade.localhost","post_id":"71","revision":"1"}'),
	(1791, '2013-10-29 06:49:49', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 62242353-BA75-4DB9-811D-C0ECEFBF6353', '{"domain":"cobaltcascade.localhost","post_id":"72","revision":"1"}'),
	(1792, '2013-10-29 06:49:49', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 3754979D-1F8C-4D6E-8AD7-B186E819F068', '{"domain":"cobaltcascade.localhost","post_id":"73","revision":"1"}'),
	(1793, '2013-10-29 06:49:49', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 610F07C7-3772-461D-AF39-C84482FA2622', '{"domain":"cobaltcascade.localhost","post_id":"74","revision":"1"}'),
	(1794, '2013-10-29 06:49:50', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 12ED0ADF-C79D-48D7-B234-39EE3B69E181', '{"domain":"cobaltcascade.localhost","post_id":"75","revision":"1"}'),
	(1795, '2013-10-29 06:51:19', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : FD07FA17-45B8-448B-AE8F-C99FE8B2DF12', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1796, '2013-10-29 06:53:20', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 74F4941E-30AB-4BFB-A94B-39386CA6ED2F', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1797, '2013-10-29 06:53:54', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B8DC71BC-1A80-4ECD-8C5C-F23DE26B8889', '{"domain":"cobaltcascade.localhost","post_id":"10333","revision":"1"}'),
	(1798, '2013-10-29 06:55:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5F10D846-DC0E-4F35-9B0F-F9250366A0EF', '{}'),
	(1799, '2013-10-29 06:55:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5F10D846-DC0E-4F35-9B0F-F9250366A0EF', '{}'),
	(1800, '2013-10-29 07:07:30', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"5AB4B12D-DB5A-44D8-AF8D-69024B21C7D1"}'),
	(1801, '2013-10-29 07:07:30', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"F4CF7976-4990-43F4-B145-0B884C8BD558"}'),
	(1802, '2013-10-29 08:16:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8D9856BD-8C3E-408C-B169-62ADE7DEB8B4', '{}'),
	(1803, '2013-10-29 08:16:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : EB612DDA-8049-4460-ACE5-890186E9C6F6', '{}'),
	(1804, '2013-10-29 08:16:02', 67, 'domus_action_error', 'Callback object not found for returning_guid : 2C447441-A12E-4B25-8633-84DA6F797AF9', '{}'),
	(1805, '2013-10-29 08:16:03', 67, 'domus_action_error', 'Callback object not found for returning_guid : BBE7D1D1-0DB4-4F2C-AFD2-221B70A8F1D1', '{}'),
	(1806, '2013-10-29 08:16:44', 67, 'domus_action_error', 'Callback object not found for returning_guid : CEA84770-A6DC-4ECB-89F1-DF7F26DF34F2', '{}'),
	(1807, '2013-10-29 08:17:14', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BE0BD5EF-0C04-4CDA-993A-F9C6E878296D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":3,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1808, '2013-10-29 08:18:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : 2A0AC098-D7DF-4CFB-A999-3740C3484249', '{}'),
	(1809, '2013-10-29 08:18:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : 13BC8E98-9EBE-4149-A418-8077705B566C', '{}'),
	(1810, '2013-10-29 08:19:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 427BCA13-5261-4384-97BE-996D3DC4AEEE', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":3,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1811, '2013-10-29 08:19:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A13E9D89-31D9-436E-9F90-744ACDBF1B06', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":5,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1812, '2013-10-29 08:21:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 03D8C831-76C2-46F1-AB0C-7120D6A6BFA3', '{}'),
	(1813, '2013-10-29 08:21:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : F1A8A4FF-68B2-4A03-B092-6C6A54B26461', '{}'),
	(1814, '2013-10-29 08:21:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : B35A8AAB-8947-457B-A54F-42F8A44C40AB', '{}'),
	(1815, '2013-10-29 08:22:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : 74DB6E96-1201-4DE6-AB1B-368E893CAC2D', '{}'),
	(1816, '2013-10-29 08:22:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : 00D3BDC1-AE24-430B-8F2D-232333231C8B', '{}'),
	(1817, '2013-10-29 08:22:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : 421C29D1-CF52-47A9-BA17-CA1AD6B3C9C0', '{}'),
	(1818, '2013-10-29 08:22:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : 71287F0A-9CC8-4423-ABCF-BAE9B8738C04', '{}'),
	(1819, '2013-10-29 08:22:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2B3E5F84-C65F-4335-BB06-583EEFA9E727', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":3,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1820, '2013-10-29 08:22:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C71A7FDA-6C31-4F59-B798-10AA84FD0030', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":5,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1821, '2013-10-29 08:23:00', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0C1B8DEC-44AB-48A0-A5FC-9BEBF09CE82B', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":7,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1822, '2013-10-29 08:23:01', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 29C2BD89-1015-49AB-B3F4-87400299A13F', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":9,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1823, '2013-10-29 08:23:47', 67, 'domus_action_error', 'Callback object not found for returning_guid : A37F8F6A-953E-4010-BEFB-1AF33EC086F9', '{}'),
	(1824, '2013-10-29 08:23:48', 67, 'domus_action_error', 'Callback object not found for returning_guid : A37F8F6A-953E-4010-BEFB-1AF33EC086F9', '{}'),
	(1825, '2013-10-29 08:23:48', 67, 'domus_action_error', 'Callback object not found for returning_guid : A37F8F6A-953E-4010-BEFB-1AF33EC086F9', '{}'),
	(1826, '2013-10-29 08:23:48', 67, 'domus_action_error', 'Callback object not found for returning_guid : A37F8F6A-953E-4010-BEFB-1AF33EC086F9', '{}'),
	(1827, '2013-10-29 08:23:48', 67, 'domus_action_error', 'Callback object not found for returning_guid : A37F8F6A-953E-4010-BEFB-1AF33EC086F9', '{}'),
	(1828, '2013-10-29 08:23:48', 67, 'domus_action_error', 'Callback object not found for returning_guid : A37F8F6A-953E-4010-BEFB-1AF33EC086F9', '{}'),
	(1829, '2013-10-29 08:23:49', 67, 'domus_action_error', 'Callback object not found for returning_guid : A58A780C-926A-4B24-BF08-75CA55A47537', '{}'),
	(1830, '2013-10-29 08:23:49', 67, 'domus_action_error', 'Callback object not found for returning_guid : A58A780C-926A-4B24-BF08-75CA55A47537', '{}'),
	(1831, '2013-10-29 08:23:49', 67, 'domus_action_error', 'Callback object not found for returning_guid : A58A780C-926A-4B24-BF08-75CA55A47537', '{}'),
	(1832, '2013-10-29 08:23:49', 67, 'domus_action_error', 'Callback object not found for returning_guid : A58A780C-926A-4B24-BF08-75CA55A47537', '{}'),
	(1833, '2013-10-29 08:23:49', 67, 'domus_action_error', 'Callback object not found for returning_guid : A58A780C-926A-4B24-BF08-75CA55A47537', '{}'),
	(1834, '2013-10-29 08:23:49', 67, 'domus_action_error', 'Callback object not found for returning_guid : A58A780C-926A-4B24-BF08-75CA55A47537', '{}'),
	(1835, '2013-10-29 08:23:50', 67, 'domus_action_error', 'Callback object not found for returning_guid : A58A780C-926A-4B24-BF08-75CA55A47537', '{}'),
	(1836, '2013-10-29 08:23:50', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75541E55-364A-4362-897C-178954BE6EB3', '{}'),
	(1837, '2013-10-29 08:23:50', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75541E55-364A-4362-897C-178954BE6EB3', '{}'),
	(1838, '2013-10-29 08:23:50', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75541E55-364A-4362-897C-178954BE6EB3', '{}'),
	(1839, '2013-10-29 08:23:50', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75541E55-364A-4362-897C-178954BE6EB3', '{}'),
	(1840, '2013-10-29 08:23:50', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75541E55-364A-4362-897C-178954BE6EB3', '{}'),
	(1841, '2013-10-29 08:23:51', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75541E55-364A-4362-897C-178954BE6EB3', '{}'),
	(1842, '2013-10-29 08:23:51', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9FCC1885-7E40-48CF-8FCA-AF474B5CF3B1', '{}'),
	(1843, '2013-10-29 08:23:51', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9FCC1885-7E40-48CF-8FCA-AF474B5CF3B1', '{}'),
	(1844, '2013-10-29 08:23:51', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9FCC1885-7E40-48CF-8FCA-AF474B5CF3B1', '{}'),
	(1845, '2013-10-29 08:23:51', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9FCC1885-7E40-48CF-8FCA-AF474B5CF3B1', '{}'),
	(1846, '2013-10-29 08:23:52', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9FCC1885-7E40-48CF-8FCA-AF474B5CF3B1', '{}'),
	(1847, '2013-10-29 08:23:52', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9FCC1885-7E40-48CF-8FCA-AF474B5CF3B1', '{}'),
	(1848, '2013-10-29 08:23:52', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9FCC1885-7E40-48CF-8FCA-AF474B5CF3B1', '{}'),
	(1849, '2013-10-29 08:23:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8B6D0F9C-7320-4D8A-847E-6B371CC0C050', '{}'),
	(1850, '2013-10-29 08:23:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8B6D0F9C-7320-4D8A-847E-6B371CC0C050', '{}'),
	(1851, '2013-10-29 08:23:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8B6D0F9C-7320-4D8A-847E-6B371CC0C050', '{}'),
	(1852, '2013-10-29 08:23:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8B6D0F9C-7320-4D8A-847E-6B371CC0C050', '{}'),
	(1853, '2013-10-29 08:23:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8B6D0F9C-7320-4D8A-847E-6B371CC0C050', '{}'),
	(1854, '2013-10-29 08:23:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8B6D0F9C-7320-4D8A-847E-6B371CC0C050', '{}'),
	(1855, '2013-10-29 08:23:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1856, '2013-10-29 08:23:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1857, '2013-10-29 08:23:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1858, '2013-10-29 08:23:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1859, '2013-10-29 08:23:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1860, '2013-10-29 08:23:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1861, '2013-10-29 08:23:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1862, '2013-10-29 08:23:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1863, '2013-10-29 08:23:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1864, '2013-10-29 08:23:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1865, '2013-10-29 08:23:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1866, '2013-10-29 08:23:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1867, '2013-10-29 08:23:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1868, '2013-10-29 08:23:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1869, '2013-10-29 08:23:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1870, '2013-10-29 08:23:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1871, '2013-10-29 08:23:55', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4C25761-E104-4D97-8A5F-6F8B9D686A64', '{}'),
	(1872, '2013-10-29 08:23:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1873, '2013-10-29 08:23:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1874, '2013-10-29 08:23:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1875, '2013-10-29 08:23:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1876, '2013-10-29 08:23:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1877, '2013-10-29 08:23:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1878, '2013-10-29 08:23:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1879, '2013-10-29 08:23:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1880, '2013-10-29 08:23:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1881, '2013-10-29 08:23:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1882, '2013-10-29 08:23:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1883, '2013-10-29 08:23:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1884, '2013-10-29 08:23:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1885, '2013-10-29 08:23:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1886, '2013-10-29 08:23:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 35243F66-53C9-4C4A-8E7E-9E351F3E12FC', '{}'),
	(1887, '2013-10-29 08:23:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 0FD18232-A5BC-478D-A5AF-F37692A4EB66', '{}'),
	(1888, '2013-10-29 08:23:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 0FD18232-A5BC-478D-A5AF-F37692A4EB66', '{}'),
	(1889, '2013-10-29 08:23:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 0FD18232-A5BC-478D-A5AF-F37692A4EB66', '{}'),
	(1890, '2013-10-29 08:23:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 0FD18232-A5BC-478D-A5AF-F37692A4EB66', '{}'),
	(1891, '2013-10-29 08:24:17', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8D04D68C-4451-46DB-B487-98E1FD03B5DF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":3,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1892, '2013-10-29 08:24:17', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 05AB471A-5476-4F81-8B70-B52CA561F75D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":5,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1893, '2013-10-29 08:24:17', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2C70B21C-36D9-4E1C-898C-9BD5814BD2AF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":4,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1894, '2013-10-29 08:24:17', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F864287B-C9C2-4B32-B5BD-5CEB05A68A7A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":8,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1895, '2013-10-29 08:24:17', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 814466B7-56FD-48A5-AA2D-5B93F790958D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":6,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1896, '2013-10-29 08:24:17', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B87A66ED-665B-43E3-8A28-C9993A922BDB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":7,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1897, '2013-10-29 08:24:17', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 274A8387-5FF0-4619-9E13-FD31C8C4BC58', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":10,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1898, '2013-10-29 08:24:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A4534783-DAD2-4DF0-A405-D0C54DA2F697', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":11,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1899, '2013-10-29 08:24:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 076699BA-47B1-4DD7-9D91-4703D6914DDD', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":12,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1900, '2013-10-29 08:24:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 88B3B40B-404E-41A5-A873-B4A02101ABDF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":13,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1901, '2013-10-29 08:24:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 602B3C44-8AE0-46E0-95EC-CE49C31A4846', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":14,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1902, '2013-10-29 08:24:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2BF86107-A710-4490-8441-B53DD43A0EC8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":15,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1903, '2013-10-29 08:24:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1F8BF0DD-3471-44FE-97F2-CF335B4223E4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":16,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1904, '2013-10-29 08:24:19', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C6860D69-D92F-4A06-922A-0AEA9865BAE9', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":18,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1905, '2013-10-29 08:24:19', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 703EE1B7-EF9D-42E2-A526-9EEDCC31FC96', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":19,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1906, '2013-10-29 08:24:19', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : EC6955CE-4C5D-4A97-9102-D72A44A4CE9A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":20,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1907, '2013-10-29 08:24:19', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BAC3EB92-5D67-4E23-BF8F-694DACB40886', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":21,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1908, '2013-10-29 08:24:19', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 63D6994E-0F60-498D-BF93-512B20B6A47E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":22,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1909, '2013-10-29 08:24:20', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CD1507BE-3A40-4942-AA41-22ABFE5A1788', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":23,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1910, '2013-10-29 08:24:20', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 84D49431-8186-435D-B0E7-D704FAD97331', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":25,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1911, '2013-10-29 08:24:20', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4E81E780-FD84-4F96-9584-D0089C25E66C', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":26,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1912, '2013-10-29 08:24:20', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 56B42BAB-5220-4DE8-BA65-2C5FE14BCCDB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":27,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1913, '2013-10-29 08:24:20', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 946F8C34-A624-441A-A24E-6A2A47F067D8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":28,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1914, '2013-10-29 08:24:20', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : D203A918-534C-41D2-8CCF-72015621F5BE', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":29,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1915, '2013-10-29 08:24:20', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F733735B-2F12-48EA-8E7D-B17BCE1963B4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":30,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1916, '2013-10-29 08:24:21', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C7FBB61D-B79E-4B03-927A-882AC1D6E655', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":31,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1917, '2013-10-29 08:24:21', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 54F5E8CB-DDFB-4E41-B45C-51C035D8880A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":33,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1918, '2013-10-29 08:24:21', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DF9A8522-1211-4FF3-903A-564C76ED938D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":34,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1919, '2013-10-29 08:24:21', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0F959925-22DB-4E4B-9E9D-2ED55CF951E8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":35,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1920, '2013-10-29 08:24:21', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 85223156-0DA6-4E82-B3E8-C95D66F21421', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":36,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1921, '2013-10-29 08:24:22', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8E5998BC-585D-44BE-B30B-68B9C6A6D5A2', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":37,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1922, '2013-10-29 08:24:22', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 5627B169-0D25-4209-96B5-0D4F6A81EDF0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":38,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1923, '2013-10-29 08:24:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6DA82164-47DB-477E-8642-FB000E1B2299', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":40,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1924, '2013-10-29 08:24:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6212A3F5-FFD1-4C75-A212-D56AC0841232', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":41,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1925, '2013-10-29 08:24:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 236B2E35-7F3E-4761-9B7F-F28912F27255', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":42,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1926, '2013-10-29 08:24:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CF8ED90F-C7F3-41F1-8E65-4DB032D1AA16', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":43,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1927, '2013-10-29 08:24:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BB7F8B89-83AC-42F8-8BB9-AC590FD562B0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":44,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1928, '2013-10-29 08:24:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9A0F084E-BE16-4A64-A726-20864E274A83', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":45,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1929, '2013-10-29 08:24:23', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 330AD2E4-6A4C-451F-A206-AA8381F7762D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":46,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1930, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F830FB73-2194-4C22-BF62-530C5D727335', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":47,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1931, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1F51B19F-01E7-4656-9D54-9D6FB26038A8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":48,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1932, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3D9B289C-9D51-4C01-96CB-6E27477FECFD', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":49,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1933, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3178D069-84D8-41E6-AFB6-E167103928F2', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":50,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1934, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CE9AA0C3-F37E-4572-B8AC-ECC0F1ABE27F', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":51,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1935, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CEDF9A1A-C295-4EF2-9F7F-9C19330B6361', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":52,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1936, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 58B6922A-A384-41C4-B309-06A2FE95ADDA', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":53,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1937, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3D58866E-C81B-4CC0-9F1B-D51599639FE0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":54,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1938, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DA9BC65F-F926-4FD8-8D28-69300FC5D5E5', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":55,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1939, '2013-10-29 08:24:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 43E4C3A2-974F-4057-A70F-2F70095378B9', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":56,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1940, '2013-10-29 08:24:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 69B80FD0-20D6-43F9-A3D6-B1AC1D2F6864', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":60,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1941, '2013-10-29 08:24:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4C78899E-3B36-4046-96F6-74DE9A417455', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":62,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1942, '2013-10-29 08:24:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B63C4CCD-2F63-44C7-B5BC-65118D339E01', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":59,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1943, '2013-10-29 08:24:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DF9FBF79-DD0C-47DC-9731-D38AFD041924', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":58,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1944, '2013-10-29 08:24:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 09B853E0-ED55-428C-952B-C4E131B0833E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":63,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1945, '2013-10-29 08:24:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 30472125-4BAB-4D9F-992C-E8A35D02CAEF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":61,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1946, '2013-10-29 08:24:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 219C03C2-4772-40F0-BF47-8ABE0D69FCC8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":64,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1947, '2013-10-29 08:24:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3D4A4742-F08B-412B-BC40-876BFC846B2A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":65,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1948, '2013-10-29 08:24:27', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CEDFD714-C5ED-4B36-91A5-4DA80BA308E7', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":66,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1949, '2013-10-29 08:24:27', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FF1FE25B-8DCB-4313-B198-9F045CD5B3E3', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":67,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1950, '2013-10-29 08:24:27', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B3759A3C-9645-4C63-84E4-CE9648F5DD80', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":68,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1951, '2013-10-29 08:24:27', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1615DA6E-41CC-4407-A37D-E61B06DA96E0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":69,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1952, '2013-10-29 08:24:27', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DF5187D9-C7C1-4576-B70C-A62ABE29D8F7', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":70,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1953, '2013-10-29 08:24:27', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 76F73FDA-36B6-4727-8BD5-A0ED871AB9A7', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":71,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1954, '2013-10-29 08:24:27', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B25B9D00-2925-47CE-9C30-E8CCA768450F', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":72,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1955, '2013-10-29 08:24:28', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6D836E36-BB74-418F-B65A-2EF922C5830B', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":74,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1956, '2013-10-29 08:24:28', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3349C5CD-686D-4C03-966C-A5770BBA129F', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":75,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1957, '2013-10-29 08:24:28', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : E694B5EF-07AC-40B7-B2BB-A268E2B94122', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":76,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1958, '2013-10-29 08:24:28', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9AEB8A44-8EEA-47EB-BF74-3112043F8B2C', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":77,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(1959, '2013-10-29 08:25:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5ECF4B85-0C79-4DC5-8669-1A182CBC0696', '{}'),
	(1960, '2013-10-29 08:25:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5ECF4B85-0C79-4DC5-8669-1A182CBC0696', '{}'),
	(1961, '2013-10-29 08:25:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5ECF4B85-0C79-4DC5-8669-1A182CBC0696', '{}'),
	(1962, '2013-10-29 08:25:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5ECF4B85-0C79-4DC5-8669-1A182CBC0696', '{}'),
	(1963, '2013-10-29 08:25:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5ECF4B85-0C79-4DC5-8669-1A182CBC0696', '{}'),
	(1964, '2013-10-29 08:25:09', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A167226-DAEB-4C40-A4C7-D16BA21B558D', '{}'),
	(1965, '2013-10-29 08:25:09', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A167226-DAEB-4C40-A4C7-D16BA21B558D', '{}'),
	(1966, '2013-10-29 08:25:09', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A167226-DAEB-4C40-A4C7-D16BA21B558D', '{}'),
	(1967, '2013-10-29 08:25:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A167226-DAEB-4C40-A4C7-D16BA21B558D', '{}'),
	(1968, '2013-10-29 08:25:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A167226-DAEB-4C40-A4C7-D16BA21B558D', '{}'),
	(1969, '2013-10-29 08:25:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A167226-DAEB-4C40-A4C7-D16BA21B558D', '{}'),
	(1970, '2013-10-29 08:25:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : EC138643-7AAB-4C98-A77C-2500B167DA28', '{}'),
	(1971, '2013-10-29 08:25:11', 67, 'domus_action_error', 'Callback object not found for returning_guid : 313DC790-D0E2-4719-AA61-C54513C1EE82', '{}'),
	(1972, '2013-10-29 08:25:11', 67, 'domus_action_error', 'Callback object not found for returning_guid : 313DC790-D0E2-4719-AA61-C54513C1EE82', '{}'),
	(1973, '2013-10-29 08:25:11', 67, 'domus_action_error', 'Callback object not found for returning_guid : 313DC790-D0E2-4719-AA61-C54513C1EE82', '{}'),
	(1974, '2013-10-29 08:25:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : C3077085-3B37-49E3-AF17-B165E2295BE2', '{}'),
	(1975, '2013-10-29 08:25:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : C3077085-3B37-49E3-AF17-B165E2295BE2', '{}'),
	(1976, '2013-10-29 08:25:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : C3077085-3B37-49E3-AF17-B165E2295BE2', '{}'),
	(1977, '2013-10-29 08:25:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : C3077085-3B37-49E3-AF17-B165E2295BE2', '{}'),
	(1978, '2013-10-29 08:25:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : C3077085-3B37-49E3-AF17-B165E2295BE2', '{}'),
	(1979, '2013-10-29 08:25:13', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3246CCC3-708A-43E3-9289-E79860A40AAB', '{}'),
	(1980, '2013-10-29 08:25:13', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3246CCC3-708A-43E3-9289-E79860A40AAB', '{}'),
	(1981, '2013-10-29 08:25:14', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3246CCC3-708A-43E3-9289-E79860A40AAB', '{}'),
	(1982, '2013-10-29 08:25:14', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3246CCC3-708A-43E3-9289-E79860A40AAB', '{}'),
	(1983, '2013-10-29 08:25:14', 67, 'domus_action_error', 'Callback object not found for returning_guid : 50408588-4105-4C12-A9BB-95DA32F33693', '{}'),
	(1984, '2013-10-29 08:25:15', 67, 'domus_action_error', 'Callback object not found for returning_guid : 50408588-4105-4C12-A9BB-95DA32F33693', '{}'),
	(1985, '2013-10-29 08:25:15', 67, 'domus_action_error', 'Callback object not found for returning_guid : 50408588-4105-4C12-A9BB-95DA32F33693', '{}'),
	(1986, '2013-10-29 08:25:16', 67, 'domus_action_error', 'Callback object not found for returning_guid : D29C33FE-1A03-475B-99B4-287F296E8FC8', '{}'),
	(1987, '2013-10-29 08:25:16', 67, 'domus_action_error', 'Callback object not found for returning_guid : D29C33FE-1A03-475B-99B4-287F296E8FC8', '{}'),
	(1988, '2013-10-29 08:25:16', 67, 'domus_action_error', 'Callback object not found for returning_guid : D29C33FE-1A03-475B-99B4-287F296E8FC8', '{}'),
	(1989, '2013-10-29 08:25:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 7D9F1DF5-2512-45AE-977C-AC08211E57E0', '{}'),
	(1990, '2013-10-29 08:25:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 7D9F1DF5-2512-45AE-977C-AC08211E57E0', '{}'),
	(1991, '2013-10-29 08:25:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 7D9F1DF5-2512-45AE-977C-AC08211E57E0', '{}'),
	(1992, '2013-10-29 08:25:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 7D9F1DF5-2512-45AE-977C-AC08211E57E0', '{}'),
	(1993, '2013-10-29 08:25:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 7D9F1DF5-2512-45AE-977C-AC08211E57E0', '{}'),
	(1994, '2013-10-29 08:25:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : 16B68E4C-452C-40F7-AD18-3DD87CB01BFE', '{}'),
	(1995, '2013-10-29 08:25:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : 16B68E4C-452C-40F7-AD18-3DD87CB01BFE', '{}'),
	(1996, '2013-10-29 08:25:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : 16B68E4C-452C-40F7-AD18-3DD87CB01BFE', '{}'),
	(1997, '2013-10-29 08:25:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : C431FA05-F3F7-437E-A181-E5A0619625BA', '{}'),
	(1998, '2013-10-29 08:25:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : C431FA05-F3F7-437E-A181-E5A0619625BA', '{}'),
	(1999, '2013-10-29 08:25:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : C431FA05-F3F7-437E-A181-E5A0619625BA', '{}'),
	(2000, '2013-10-29 08:25:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : C431FA05-F3F7-437E-A181-E5A0619625BA', '{}'),
	(2001, '2013-10-29 08:25:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : 239AD6E1-1310-433B-A884-F506CC1B267B', '{}'),
	(2002, '2013-10-29 08:25:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : 239AD6E1-1310-433B-A884-F506CC1B267B', '{}'),
	(2003, '2013-10-29 08:25:21', 67, 'domus_action_error', 'Callback object not found for returning_guid : 239AD6E1-1310-433B-A884-F506CC1B267B', '{}'),
	(2004, '2013-10-29 08:25:22', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4F6B6CB4-1EBC-4E7B-8CFE-128FAE70FD50', '{}'),
	(2005, '2013-10-29 08:25:22', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4F6B6CB4-1EBC-4E7B-8CFE-128FAE70FD50', '{}'),
	(2006, '2013-10-29 08:25:22', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4F6B6CB4-1EBC-4E7B-8CFE-128FAE70FD50', '{}'),
	(2007, '2013-10-29 08:25:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : D0EA665E-A58E-47B8-A2E6-6D18E27D155D', '{}'),
	(2008, '2013-10-29 08:25:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : D0EA665E-A58E-47B8-A2E6-6D18E27D155D', '{}'),
	(2009, '2013-10-29 08:25:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : D0EA665E-A58E-47B8-A2E6-6D18E27D155D', '{}'),
	(2010, '2013-10-29 08:25:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : D0EA665E-A58E-47B8-A2E6-6D18E27D155D', '{}'),
	(2011, '2013-10-29 08:25:37', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 25CFF0F6-10AE-4CF3-BA65-AD21219349D8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":3,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2012, '2013-10-29 08:25:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 107774B2-F671-4417-9194-11ED1ED0CFF6', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":6,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2013, '2013-10-29 08:25:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 17385CE0-8139-4910-BD52-DCCD0E4CF010', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":4,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2014, '2013-10-29 08:25:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DB75F6C3-3AFC-4884-857E-70E56091EDE7', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":7,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2015, '2013-10-29 08:25:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 12C4E8EF-C804-4A5D-874A-23837D33CFFF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":5,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2016, '2013-10-29 08:25:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4C8D4584-1CDD-4ABF-85C8-DE942B74B30A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":9,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2017, '2013-10-29 08:25:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 58EF8B04-8367-455B-88CA-1FBC5DADCD5A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":10,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2018, '2013-10-29 08:25:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8BE74D71-634C-4421-B744-9DAF14EE9F12', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":11,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2019, '2013-10-29 08:25:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A5E5D9AA-90AA-4599-9DB1-557A7300330E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":12,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2020, '2013-10-29 08:25:39', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 320AB4CA-A815-417D-98C4-70B8D02AAEDF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":13,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2021, '2013-10-29 08:25:39', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0657272C-F376-45EC-B33C-17D8C11B4102', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":14,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2022, '2013-10-29 08:25:39', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F701D00D-C5F0-4D96-99CA-C8AA8F94B603', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":16,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2023, '2013-10-29 08:25:40', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 33B7E7A1-D277-4815-ADC0-1FBBAAB510A4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":18,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2024, '2013-10-29 08:25:40', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2DD1DB90-09FF-42A3-9B78-CD307B19D150', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":19,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2025, '2013-10-29 08:25:40', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6F1E4AEC-856D-408D-9F95-03CAE98FB41E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":20,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2026, '2013-10-29 08:25:41', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9692F12B-3052-4591-A1D0-BBED1A49242E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":24,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2027, '2013-10-29 08:25:41', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 68640303-59D1-40CD-B07A-D6E081F74ED6', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":26,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2028, '2013-10-29 08:25:41', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 64C4E22D-7A7A-40C0-ABCB-809BB390EED0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":22,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2029, '2013-10-29 08:25:42', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1CB83E11-D655-4808-9AC4-8DB875B8772E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":25,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2030, '2013-10-29 08:25:42', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FA8B103C-ED83-4D78-A97A-C393A2D07C51', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":23,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2031, '2013-10-29 08:25:42', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B42D9896-F712-4439-B2D5-CCC0219A5D96', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":28,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2032, '2013-10-29 08:25:43', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3DCEFB85-4CE6-465F-8555-900B0FBF2AD6', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":29,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2033, '2013-10-29 08:25:43', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 14907E9C-023B-4BFF-ADF9-3A6204CAD62C', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":30,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2034, '2013-10-29 08:25:43', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B997BA5A-42A7-43A9-97AC-0C8DB042D081', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":31,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2035, '2013-10-29 08:25:44', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 80CE41F3-81DD-4934-88BF-6E7386CB4572', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":33,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2036, '2013-10-29 08:25:44', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : AA37B359-7C1D-4D81-A6A0-558282DFA115', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":34,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2037, '2013-10-29 08:25:44', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C3E8A171-3A88-445B-92DC-EAC73B7F26B6', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":35,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2038, '2013-10-29 08:25:45', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 15BED111-3E81-4718-A9D9-56D0432313E7', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":38,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2039, '2013-10-29 08:25:45', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 14E24B09-E5DC-40CC-A92B-822F15FE979A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":39,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2040, '2013-10-29 08:25:45', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BF11D39E-94A2-4C58-9636-62758935A46E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":40,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2041, '2013-10-29 08:25:46', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 353D0CEE-6BF3-4D14-A5E3-EB94325DD69C', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":42,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2042, '2013-10-29 08:25:46', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9FDC96BE-EFB6-4346-978D-6906EF6EAD86', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":44,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2043, '2013-10-29 08:25:46', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4DE0D285-EB70-4AA0-A2D8-770C06DAD341', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":45,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2044, '2013-10-29 08:25:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 11D2B068-F1F8-4263-8CFE-DC8587D3D6AB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":43,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2045, '2013-10-29 08:25:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 21AEACF4-41F1-4AAE-8FDF-00D2A6734DD8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":46,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2046, '2013-10-29 08:25:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 54524C97-C435-4EF8-A87C-C8DFC8A61E56', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":48,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2047, '2013-10-29 08:25:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 789B0CAF-410D-4DF3-AE06-1D84737B858D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":50,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2048, '2013-10-29 08:25:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4C6FDAFF-46E0-424B-8C03-19E3CB90C371', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":49,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2049, '2013-10-29 08:25:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C569D3C4-601F-49DF-91E4-4B7A4FA0E0B6', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":52,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2050, '2013-10-29 08:25:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 681A0386-AC36-48FD-9E29-07C99AEE1C8A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":53,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2051, '2013-10-29 08:25:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 82DC597D-1DAC-4BBE-A92B-8C02E5E63D35', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":55,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2052, '2013-10-29 08:25:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B9151AC5-3D5A-4765-8F07-7D59166A8DE1', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":54,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2053, '2013-10-29 08:25:50', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 24488C33-941B-4187-8AD8-D87031DF3321', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":59,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2054, '2013-10-29 08:25:50', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 7605FF74-3A28-4368-BBD1-68B1589599B0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":58,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2055, '2013-10-29 08:25:50', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F7BF9BB7-F145-4025-86CA-518D95F06C63', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":60,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2056, '2013-10-29 08:25:51', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FF6652B4-68A0-4474-88DD-A1E736E42ADA', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":64,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2057, '2013-10-29 08:25:51', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1966B6B4-4697-486D-BF5F-53146E4E6C09', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":65,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2058, '2013-10-29 08:25:51', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 5DEDE8C6-CC9D-45F9-9F64-CB9A950CEFD3', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":63,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2059, '2013-10-29 08:25:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 55C2EBC5-857B-49E5-B369-14285A8343E9', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":69,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2060, '2013-10-29 08:25:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 63E65E06-284A-4208-9C39-9006DBA9D072', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":67,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2061, '2013-10-29 08:25:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 5EDF72AF-7A9F-406B-B792-C59FA8F89F90', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":68,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2062, '2013-10-29 08:25:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2707D2B4-4CA1-4A56-9890-3290FDF813CF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":70,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2063, '2013-10-29 08:27:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 217CB794-2F1B-407C-8CBB-3B5F38EF6B2A', '{}'),
	(2064, '2013-10-29 08:27:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 217CB794-2F1B-407C-8CBB-3B5F38EF6B2A', '{}'),
	(2065, '2013-10-29 08:27:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 217CB794-2F1B-407C-8CBB-3B5F38EF6B2A', '{}'),
	(2066, '2013-10-29 08:27:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 217CB794-2F1B-407C-8CBB-3B5F38EF6B2A', '{}'),
	(2067, '2013-10-29 08:27:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 217CB794-2F1B-407C-8CBB-3B5F38EF6B2A', '{}'),
	(2068, '2013-10-29 08:27:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : 217CB794-2F1B-407C-8CBB-3B5F38EF6B2A', '{}'),
	(2069, '2013-10-29 08:27:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2070, '2013-10-29 08:27:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2071, '2013-10-29 08:27:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2072, '2013-10-29 08:27:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2073, '2013-10-29 08:27:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2074, '2013-10-29 08:27:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2075, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2076, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2077, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2078, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2079, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2080, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2081, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2082, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2083, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2084, '2013-10-29 08:27:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2085, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2086, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2087, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2088, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2089, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2090, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2091, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2092, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2093, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2094, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2095, '2013-10-29 08:27:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2096, '2013-10-29 08:28:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2097, '2013-10-29 08:28:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2098, '2013-10-29 08:28:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 91004E92-B91C-4ADF-9E88-1E64638E23DC', '{}'),
	(2099, '2013-10-29 08:28:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2100, '2013-10-29 08:28:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2101, '2013-10-29 08:28:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2102, '2013-10-29 08:28:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2103, '2013-10-29 08:28:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2104, '2013-10-29 08:28:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2105, '2013-10-29 08:28:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2106, '2013-10-29 08:28:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2107, '2013-10-29 08:28:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2108, '2013-10-29 08:28:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2109, '2013-10-29 08:28:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2110, '2013-10-29 08:28:02', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6AC87C41-7544-40E2-AF5B-5DCD46F93FF4', '{}'),
	(2111, '2013-10-29 08:28:02', 67, 'domus_action_error', 'Callback object not found for returning_guid : 62C579F8-CA8D-4D8E-A020-D76FC74D52AE', '{}'),
	(2112, '2013-10-29 08:28:02', 67, 'domus_action_error', 'Callback object not found for returning_guid : 62C579F8-CA8D-4D8E-A020-D76FC74D52AE', '{}'),
	(2113, '2013-10-29 08:28:02', 67, 'domus_action_error', 'Callback object not found for returning_guid : 62C579F8-CA8D-4D8E-A020-D76FC74D52AE', '{}'),
	(2114, '2013-10-29 08:28:02', 67, 'domus_action_error', 'Callback object not found for returning_guid : 62C579F8-CA8D-4D8E-A020-D76FC74D52AE', '{}'),
	(2115, '2013-10-29 08:28:02', 67, 'domus_action_error', 'Callback object not found for returning_guid : 62C579F8-CA8D-4D8E-A020-D76FC74D52AE', '{}'),
	(2116, '2013-10-29 08:28:03', 67, 'domus_action_error', 'Callback object not found for returning_guid : 62C579F8-CA8D-4D8E-A020-D76FC74D52AE', '{}'),
	(2117, '2013-10-29 08:28:03', 67, 'domus_action_error', 'Callback object not found for returning_guid : 62C579F8-CA8D-4D8E-A020-D76FC74D52AE', '{}'),
	(2118, '2013-10-29 08:28:03', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2119, '2013-10-29 08:28:03', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2120, '2013-10-29 08:28:03', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2121, '2013-10-29 08:28:04', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2122, '2013-10-29 08:28:04', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2123, '2013-10-29 08:28:04', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2124, '2013-10-29 08:28:04', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2125, '2013-10-29 08:28:04', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2126, '2013-10-29 08:28:04', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2127, '2013-10-29 08:28:04', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2128, '2013-10-29 08:28:04', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2129, '2013-10-29 08:28:04', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2130, '2013-10-29 08:28:05', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2131, '2013-10-29 08:28:05', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2132, '2013-10-29 08:28:05', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2133, '2013-10-29 08:28:05', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3FA9FC4-287B-4B6F-99CE-4F2A4E6D8D80', '{}'),
	(2134, '2013-10-29 08:28:05', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2135, '2013-10-29 08:28:05', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2136, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2137, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2138, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2139, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2140, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2141, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2142, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2143, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2144, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2145, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2146, '2013-10-29 08:28:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2147, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2148, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2149, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2150, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2151, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2152, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2153, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2154, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2155, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2156, '2013-10-29 08:28:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 994D3439-2F51-41BB-ABBD-11142C674CB4', '{}'),
	(2157, '2013-10-29 08:28:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 953AEC74-D2A8-44D4-95BD-C2154E6FA6B0', '{}'),
	(2158, '2013-10-29 08:28:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 953AEC74-D2A8-44D4-95BD-C2154E6FA6B0', '{}'),
	(2159, '2013-10-29 08:28:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 953AEC74-D2A8-44D4-95BD-C2154E6FA6B0', '{}'),
	(2160, '2013-10-29 08:28:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 953AEC74-D2A8-44D4-95BD-C2154E6FA6B0', '{}'),
	(2161, '2013-10-29 08:28:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 953AEC74-D2A8-44D4-95BD-C2154E6FA6B0', '{}'),
	(2162, '2013-10-29 08:28:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 953AEC74-D2A8-44D4-95BD-C2154E6FA6B0', '{}'),
	(2163, '2013-10-29 08:28:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : 953AEC74-D2A8-44D4-95BD-C2154E6FA6B0', '{}'),
	(2164, '2013-10-29 08:28:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2165, '2013-10-29 08:28:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2166, '2013-10-29 08:28:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2167, '2013-10-29 08:28:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2168, '2013-10-29 08:28:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2169, '2013-10-29 08:28:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2170, '2013-10-29 08:28:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2171, '2013-10-29 08:28:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2172, '2013-10-29 08:28:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2173, '2013-10-29 08:28:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2174, '2013-10-29 08:28:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2175, '2013-10-29 08:28:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2176, '2013-10-29 08:28:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2177, '2013-10-29 08:28:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2178, '2013-10-29 08:28:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2179, '2013-10-29 08:28:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2180, '2013-10-29 08:28:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2181, '2013-10-29 08:28:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2182, '2013-10-29 08:28:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2183, '2013-10-29 08:28:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2184, '2013-10-29 08:28:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D427A9F7-F4D3-458D-AE71-6D940A26AA20', '{}'),
	(2185, '2013-10-29 08:28:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2186, '2013-10-29 08:28:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2187, '2013-10-29 08:28:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2188, '2013-10-29 08:28:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2189, '2013-10-29 08:28:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2190, '2013-10-29 08:28:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2191, '2013-10-29 08:28:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2192, '2013-10-29 08:28:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2193, '2013-10-29 08:28:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2194, '2013-10-29 08:28:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2195, '2013-10-29 08:28:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2196, '2013-10-29 08:28:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2197, '2013-10-29 08:28:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2198, '2013-10-29 08:28:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2199, '2013-10-29 08:28:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2200, '2013-10-29 08:28:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2201, '2013-10-29 08:28:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2202, '2013-10-29 08:28:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : C86EB625-C9F7-4CEE-8AF2-12CC81AA2502', '{}'),
	(2203, '2013-10-29 08:28:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2204, '2013-10-29 08:28:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2205, '2013-10-29 08:28:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2206, '2013-10-29 08:28:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2207, '2013-10-29 08:28:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2208, '2013-10-29 08:28:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2209, '2013-10-29 08:28:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2210, '2013-10-29 08:28:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2211, '2013-10-29 08:28:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2212, '2013-10-29 08:28:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2213, '2013-10-29 08:28:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2214, '2013-10-29 08:28:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2215, '2013-10-29 08:28:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2216, '2013-10-29 08:28:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2217, '2013-10-29 08:28:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2218, '2013-10-29 08:28:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2219, '2013-10-29 08:28:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2220, '2013-10-29 08:28:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2221, '2013-10-29 08:28:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2222, '2013-10-29 08:28:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2223, '2013-10-29 08:28:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2224, '2013-10-29 08:28:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2225, '2013-10-29 08:28:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2226, '2013-10-29 08:28:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2227, '2013-10-29 08:28:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2228, '2013-10-29 08:28:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2229, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : C8863653-AC79-447E-BD05-B1E29C894278', '{}'),
	(2230, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2231, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2232, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2233, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2234, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2235, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2236, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2237, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2238, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2239, '2013-10-29 08:28:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2240, '2013-10-29 08:28:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2241, '2013-10-29 08:28:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2242, '2013-10-29 08:28:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2243, '2013-10-29 08:28:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2244, '2013-10-29 08:28:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2245, '2013-10-29 08:28:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2246, '2013-10-29 08:28:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2247, '2013-10-29 08:28:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2248, '2013-10-29 08:28:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2249, '2013-10-29 08:28:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2250, '2013-10-29 08:28:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2251, '2013-10-29 08:28:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2252, '2013-10-29 08:28:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6028C6A-7909-4149-9273-CAACC1B32959', '{}'),
	(2253, '2013-10-29 08:28:46', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 40CAF7CD-091E-42B3-A243-1F2ACC4E5229', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":3,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2254, '2013-10-29 08:28:46', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4716B3F5-6ACB-49E6-AA7E-21E6B6D83EB9', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":5,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2255, '2013-10-29 08:28:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FCB981F0-C8A5-439E-86E0-51C97555C8ED', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":4,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2256, '2013-10-29 08:28:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8D40E3B6-1D33-4A2A-8EC3-5881CE501A72', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":6,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2257, '2013-10-29 08:28:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : AD073321-9515-4E85-8D87-846620449ADF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":7,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2258, '2013-10-29 08:28:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 60F34FCD-623C-44BA-AD35-1909554B013F', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":8,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2259, '2013-10-29 08:28:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 5746C82F-203D-42A8-A8FB-DDCBC170AFD1', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":9,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2260, '2013-10-29 08:28:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0FB22F8A-C1E4-4FB7-BAFA-C44439A054DA', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":11,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2261, '2013-10-29 08:28:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 572A472A-E392-430D-8150-58CBF2259618', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":12,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2262, '2013-10-29 08:28:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4755C9C3-A79D-4B18-A481-9C2D4954B71B', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":13,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2263, '2013-10-29 08:28:47', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6B9B3DF3-BA11-4F98-A7A4-CC1F242BFAA1', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":14,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2264, '2013-10-29 08:28:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 195A051E-EB17-4107-A09E-868E5937D6EA', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":15,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2265, '2013-10-29 08:28:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6A0A1047-2768-4F11-997C-1D7D73AA1094', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":16,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2266, '2013-10-29 08:28:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 633FE7C9-F80C-4540-8902-52357881CD80', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":17,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2267, '2013-10-29 08:28:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B0E05E4C-3C38-4F68-9613-89E8BCBCEE0A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":18,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2268, '2013-10-29 08:28:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F4BA7016-04F7-40C9-A95A-66F874DBDFC5', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":19,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2269, '2013-10-29 08:28:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 5C33A7AE-A444-438A-8A40-AE3785B51A2D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":20,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2270, '2013-10-29 08:28:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 69A7737F-DBE2-4EF9-ADEA-6A302D232029', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":21,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2271, '2013-10-29 08:28:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 920CF167-E1F2-4AC7-81F0-36AC6DBEA884', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":22,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2272, '2013-10-29 08:28:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 02279A48-ECF7-4A7B-83DB-E903B437ABAB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":23,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2273, '2013-10-29 08:28:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CD30E8F8-E6DE-48C1-B132-F6F7E3FF4051', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":24,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2274, '2013-10-29 08:28:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C1C1857D-0669-4A89-B4C5-F3BA9AF2F9F2', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":25,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2275, '2013-10-29 08:28:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B91721E6-2EF1-481C-A065-12473A1E6919', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":26,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2276, '2013-10-29 08:28:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4C94A5D4-885D-480A-8E76-557F42E55FD8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":27,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2277, '2013-10-29 08:28:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8D1EC452-663F-4E3E-8CD6-F5806B262C4D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":28,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2278, '2013-10-29 08:28:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 42C5F0AF-7F03-41DE-93CA-47422751352E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":29,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2279, '2013-10-29 08:28:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4285C85B-6543-4944-A776-345E5BA4FCB1', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":30,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2280, '2013-10-29 08:28:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BA56CC03-B8FC-411D-9331-70491D496789', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":31,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2281, '2013-10-29 08:28:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 43A5066B-5E6A-4BA9-921D-5F5A6D6B4FDC', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":33,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2282, '2013-10-29 08:28:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : ACD97546-0A8D-4215-893D-2241EFA05C67', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":35,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2283, '2013-10-29 08:28:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : E446B0E4-26E5-4FC5-860D-47D765542F52', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":36,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2284, '2013-10-29 08:28:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 71AC1E01-28A6-4C08-992C-D87107C78E2B', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":37,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2285, '2013-10-29 08:28:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : D72B8A5D-57EC-4024-B03A-80778246AED4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":34,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2286, '2013-10-29 08:28:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : D012B3B6-229A-4906-9E8D-894644229B76', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":38,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2287, '2013-10-29 08:28:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9D4FBAE3-F01E-4F13-B243-E825F73FACE9', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":39,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2288, '2013-10-29 08:28:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : EEF310A0-566C-43BD-911D-43147D0D7862', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":40,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2289, '2013-10-29 08:28:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 043048F3-16FD-454B-B02B-817AE95EF449', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":41,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2290, '2013-10-29 08:28:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DB4EFF9B-2C26-4E78-8906-AA3A055DAC5D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":42,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2291, '2013-10-29 08:28:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3FDF5393-94F8-4450-83C5-F6284CD7E3D8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":43,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2292, '2013-10-29 08:28:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A6587DBC-56FF-4F92-8C6A-D9A33CF692AE', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":44,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2293, '2013-10-29 08:28:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F9AB21C5-D4CC-42C3-82EF-4B3A8F391781', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":45,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2294, '2013-10-29 08:28:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : AB5B237F-99D0-4B3C-9768-69E73E589319', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":46,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2295, '2013-10-29 08:28:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : D41B7FB6-EBFF-4B38-9BD0-5576A1205DD4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":47,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2296, '2013-10-29 08:28:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DC554AA4-3013-44AC-AD7B-76ADE9A52123', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":48,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2297, '2013-10-29 08:28:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 09BB4639-3D3D-4108-BE0A-0240D853893E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":49,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2298, '2013-10-29 08:28:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 27188A56-A0B4-4163-BF3B-93721E1FF920', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":50,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2299, '2013-10-29 08:28:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3B626D00-A1CB-4002-9F1B-7FC93935DAE5', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":52,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2300, '2013-10-29 08:28:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 800C30F0-5491-4970-8F92-358418A78CD5', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":53,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2301, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0AF0EA04-B5DC-4CC4-9D6B-FC4908866E66', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":54,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2302, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2A7DF34A-A5E9-42F0-946F-4F15BC351BC3', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":55,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2303, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 717E5957-95B6-4A86-B107-A136A9858A7E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":56,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2304, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F9F0204C-4DAA-4952-B6D3-F73CF749D5EE', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":57,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2305, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1A98DFDC-946E-41F6-9543-9269C84BCD3F', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":58,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2306, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FD2EC074-F172-4824-AB4E-C5B9A4BAD2AC', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":59,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2307, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 77C8F731-F9A6-4446-AD40-1780CB8554A9', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":60,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2308, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FB2DFD41-89BC-44E0-8DE5-57F2562C7F77', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":61,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2309, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B8AB8562-3753-4F0F-B144-9963B4C09567', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":62,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2310, '2013-10-29 08:28:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2CC2DE87-5573-4803-8E92-177A069BFDFE', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":63,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2311, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 75242D4B-59B3-42BD-AB4D-E20F94DCFB3D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":64,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2312, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B08AC6DC-099C-46BE-8125-490EAEB3F4F3', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":65,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2313, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4823A8A4-E031-48B3-AF3F-CDD443AA48CB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":66,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2314, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BA814437-3246-4A3E-9190-D00B315DD35E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":67,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2315, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9532F25B-F1AD-4A05-9C46-A0CCAE707237', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":68,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2316, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CB6B4E71-4C44-4D5F-ADAC-79C2CC0ECC46', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":69,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2317, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 50B25AEA-A1A3-44EC-B031-CBCD2C4394E4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":70,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2318, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C47B8994-2F12-4A8F-8DB3-85CD4B83F8DA', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":71,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2319, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DAA73AFD-D8F7-44A8-86D8-C9734592ECBC', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":72,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2320, '2013-10-29 08:28:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 81532966-EBFA-41C4-A4A5-7C752CF78AC7', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":73,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2321, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1524BAD2-1A41-4566-A4E2-803AB155CCCE', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":74,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2322, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 817A91EC-BDF9-4A51-9F61-6962A49E3410', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":75,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2323, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BD26F7A6-BA71-4990-98FA-56F4BED56B92', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":76,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2324, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BDA689BF-84BF-4656-92F3-BDEF82E86792', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":77,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2325, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3B8E0F88-C267-411A-AD44-4374F4DD3FC4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":78,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2326, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 267A6D0A-9FEA-4B8B-86BF-9151DF365FAA', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":80,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2327, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4EC14147-3862-4987-8755-D92C0D8A54BF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":81,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2328, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : E8509531-4C53-4026-8AFA-931283324E61', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":82,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2329, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A276646A-A751-4308-9A0E-423CAD168A66', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":83,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2330, '2013-10-29 08:28:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C75F196D-ACFE-4A86-AC7B-63BCAEBCA70E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":84,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2331, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2BA516EA-D2C9-4D71-A8EF-9AA0356AC379', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":85,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2332, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 64F4E2FA-25AC-4E27-8E75-24AABA12A43B', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":86,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2333, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 5D7011D0-F3A3-445B-9B44-2F991925AEE6', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":87,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2334, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9DC76576-85BC-4522-B8D9-153A08A472B8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":88,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2335, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 659839C5-34DD-49A2-890E-6261C1A9E160', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":89,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2336, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8D21C5CC-5DD8-4F4C-B579-DFE699B54DCB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":90,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2337, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 86E992AB-F046-4E11-A828-232AD7674AED', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":91,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2338, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2432E290-D528-4737-A2B2-81637A22B00D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":92,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2339, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : E75D9029-D875-4E51-AAC1-5C02B04CAD35', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":93,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2340, '2013-10-29 08:28:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1F744F15-83F3-4AC7-A84E-5D5423D060DD', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":94,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2341, '2013-10-29 08:28:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3F5E594A-1EC9-4C7F-A194-CD90BAAED951', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":95,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2342, '2013-10-29 08:28:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2E2ADD3D-B7AB-43DF-A1A4-D6013CB07F0A', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":96,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2343, '2013-10-29 08:28:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 7761BB76-4FF4-4C13-A66C-0B2F544FE4CD', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":97,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2344, '2013-10-29 08:28:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 45256120-8BFC-4558-9778-A036FE250B1D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":98,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2345, '2013-10-29 08:28:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A5EC749B-9A8D-4071-BA2E-8EA52FFE5F06', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":99,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2346, '2013-10-29 08:28:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3B613FE2-A32F-4EAA-8247-8FDEFD8D611B', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":100,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2347, '2013-10-29 08:28:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A9FA99ED-558A-4305-ACC3-0F54B52819C8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":101,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2348, '2013-10-29 08:28:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 15828BB6-9046-4586-8B7B-EDFEC207ACC0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":102,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2349, '2013-10-29 08:29:52', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2350, '2013-10-29 08:29:52', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2351, '2013-10-29 08:29:52', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2352, '2013-10-29 08:29:52', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2353, '2013-10-29 08:29:52', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2354, '2013-10-29 08:29:52', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2355, '2013-10-29 08:29:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2356, '2013-10-29 08:29:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2357, '2013-10-29 08:29:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2358, '2013-10-29 08:29:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2359, '2013-10-29 08:29:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2360, '2013-10-29 08:29:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : F3361EFF-DA43-499C-A089-33C1A5040189', '{}'),
	(2361, '2013-10-29 08:29:54', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10320"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10320/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"8BC406CD-04A1-4D2C-ADDA-554879D0D85A"}'),
	(2362, '2013-10-29 08:29:54', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10322"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10322/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"91E49ACB-424D-47A4-8EA3-F844765DAFA4"}'),
	(2363, '2013-10-29 08:29:54', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10321"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10321/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"FB6E63A6-CA95-41AB-950F-F938486ED4D7"}'),
	(2364, '2013-10-29 08:29:55', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10330"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"44737A9E-84D5-47A4-BBFB-D3355C183FF3"}'),
	(2365, '2013-10-29 08:29:55', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10329"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"1F18AA7B-FDBE-4793-B364-2858585C4C0F"}'),
	(2366, '2013-10-29 08:29:55', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10325"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"544D75ED-010E-444A-A1F1-6693927142A5"}'),
	(2367, '2013-10-29 08:29:55', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10327"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"A62D8671-8ADB-4795-BECE-4B15B371A4E4"}'),
	(2368, '2013-10-29 08:29:55', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10318"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10318/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"8117F681-9B09-4EB1-9257-2BFCB9D07EA0"}'),
	(2369, '2013-10-29 08:29:55', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10323"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10323/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"E71A98C6-2EE4-4084-91D5-90D83BCD1F1D"}'),
	(2370, '2013-10-29 08:29:56', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10324"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"9BA404C3-E6E5-40FD-9951-5F6EA13201DB"}'),
	(2371, '2013-10-29 08:29:56', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10326"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"011C8B5D-DFF2-4343-84E0-43D7EC105FDB"}'),
	(2372, '2013-10-29 08:29:56', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10315"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10315/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"F06C0B60-F9FC-4F5A-BDB4-C6327A1792DB"}'),
	(2373, '2013-10-29 08:29:56', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10317"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10317/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"36485880-19D8-47B5-8A32-DC9863A9DFF0"}'),
	(2374, '2013-10-29 08:29:56', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10316"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10316/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"65033E4D-2F20-44A7-B26A-FAA1144DE34D"}'),
	(2375, '2013-10-29 08:29:56', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10331"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"C94BC579-8B4C-4E79-8065-A91C3D326153"}'),
	(2376, '2013-10-29 08:33:38', 67, 'domus_action_error', 'Callback object not found for returning_guid : 37967965-3F8E-474B-BF79-3AB61B3F70C7', '{}'),
	(2377, '2013-10-29 08:33:38', 67, 'domus_action_error', 'Callback object not found for returning_guid : 37967965-3F8E-474B-BF79-3AB61B3F70C7', '{}'),
	(2378, '2013-10-29 08:33:38', 67, 'domus_action_error', 'Callback object not found for returning_guid : 37967965-3F8E-474B-BF79-3AB61B3F70C7', '{}'),
	(2379, '2013-10-29 08:33:38', 67, 'domus_action_error', 'Callback object not found for returning_guid : 37967965-3F8E-474B-BF79-3AB61B3F70C7', '{}'),
	(2380, '2013-10-29 08:33:39', 67, 'domus_action_error', 'Callback object not found for returning_guid : 37967965-3F8E-474B-BF79-3AB61B3F70C7', '{}'),
	(2381, '2013-10-29 08:33:39', 67, 'domus_action_error', 'Callback object not found for returning_guid : 37967965-3F8E-474B-BF79-3AB61B3F70C7', '{}'),
	(2382, '2013-10-29 08:34:08', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 4E43D7D0-1638-494F-8BA5-1369BC87C94C', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":3,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2383, '2013-10-29 08:34:08', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0575B244-CDB9-47E0-AC90-9CB324F55C73', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":5,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2384, '2013-10-29 08:34:08', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B0E4026A-B354-42EE-8EC8-56C317C873C4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":4,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2385, '2013-10-29 08:34:08', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 69E4CD29-8290-4B25-AD67-17F8701A5CC2', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":7,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2386, '2013-10-29 08:34:08', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FFC46985-3662-42C0-890C-D5F631FB8E74', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":6,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2387, '2013-10-29 08:34:08', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 11EFCCD3-1E1C-410D-9500-D47B96BF08E2', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":8,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2388, '2013-10-29 08:36:41', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2389, '2013-10-29 08:36:41', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2390, '2013-10-29 08:36:41', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2391, '2013-10-29 08:36:42', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2392, '2013-10-29 08:36:42', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2393, '2013-10-29 08:36:42', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2394, '2013-10-29 08:36:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2395, '2013-10-29 08:36:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2396, '2013-10-29 08:36:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2397, '2013-10-29 08:36:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : 8DBE0FDC-573D-44D0-A527-6E0EC1C36871', '{}'),
	(2398, '2013-10-29 08:38:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 993BA7FB-0D47-412D-912F-FD6563B1B6B6', '{}'),
	(2399, '2013-10-29 08:38:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 993BA7FB-0D47-412D-912F-FD6563B1B6B6', '{}'),
	(2400, '2013-10-29 08:38:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75D226CF-6B4F-4954-8230-4CB0C09BEADE', '{}'),
	(2401, '2013-10-29 08:38:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75D226CF-6B4F-4954-8230-4CB0C09BEADE', '{}'),
	(2402, '2013-10-29 08:38:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : F146F3A3-6218-4E53-8906-8EC6366B212B', '{}'),
	(2403, '2013-10-29 08:38:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : F146F3A3-6218-4E53-8906-8EC6366B212B', '{}'),
	(2404, '2013-10-29 08:38:09', 67, 'domus_action_error', 'Callback object not found for returning_guid : CC2DC4C5-6C6D-44DE-84D2-66A3DA4C46CD', '{}'),
	(2405, '2013-10-29 08:38:09', 67, 'domus_action_error', 'Callback object not found for returning_guid : CC2DC4C5-6C6D-44DE-84D2-66A3DA4C46CD', '{}'),
	(2406, '2013-10-29 08:38:09', 67, 'domus_action_error', 'Callback object not found for returning_guid : 38FCFF4F-8735-40F2-B09A-E48ADD86A9AC', '{}'),
	(2407, '2013-10-29 08:38:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : 38FCFF4F-8735-40F2-B09A-E48ADD86A9AC', '{}'),
	(2408, '2013-10-29 08:38:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : C264C021-3DFB-49BC-AF12-6C16D2CC5D1A', '{}'),
	(2409, '2013-10-29 08:38:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : C264C021-3DFB-49BC-AF12-6C16D2CC5D1A', '{}'),
	(2410, '2013-10-29 08:38:11', 67, 'domus_action_error', 'Callback object not found for returning_guid : 93AC9424-9FA3-4A4A-B4C5-644924D67D07', '{}'),
	(2411, '2013-10-29 08:38:11', 67, 'domus_action_error', 'Callback object not found for returning_guid : 93AC9424-9FA3-4A4A-B4C5-644924D67D07', '{}'),
	(2412, '2013-10-29 08:38:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : A81383BB-C815-43A4-B52C-16DF838530DC', '{}'),
	(2413, '2013-10-29 08:38:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : A81383BB-C815-43A4-B52C-16DF838530DC', '{}'),
	(2414, '2013-10-29 08:38:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1441547C-0E44-4A1E-9D4C-EDBB33FC8634', '{}'),
	(2415, '2013-10-29 08:38:13', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1441547C-0E44-4A1E-9D4C-EDBB33FC8634', '{}'),
	(2416, '2013-10-29 08:38:13', 67, 'domus_action_error', 'Callback object not found for returning_guid : FF4D85BE-C84D-47FA-BFCE-09C9F40FB4CF', '{}'),
	(2417, '2013-10-29 08:38:13', 67, 'domus_action_error', 'Callback object not found for returning_guid : FF4D85BE-C84D-47FA-BFCE-09C9F40FB4CF', '{}'),
	(2418, '2013-10-29 08:38:17', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"124"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/124/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"02E47236-C7D3-41EB-8F6A-865A192F622D"}'),
	(2419, '2013-10-29 08:38:26', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"128"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/128/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"93B674F9-F467-4533-96C2-B00FAEDA2408"}'),
	(2420, '2013-10-29 08:38:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4121DA28-4C08-4E54-82DB-AD6AB2F4E290', '{}'),
	(2421, '2013-10-29 08:38:33', 67, 'domus_action_error', 'Callback object not found for returning_guid : 51271B47-D4A2-449B-8148-446F594B07C5', '{}'),
	(2422, '2013-10-29 08:38:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : D4F047A7-D643-46B5-B6F5-1867492369CA', '{}'),
	(2423, '2013-10-29 08:38:35', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6A244C7D-4DD4-4E6E-8330-4FD6F0B806A4', '{}'),
	(2424, '2013-10-29 08:38:36', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BA32BD1F-689E-4E8B-8031-6585C8D386CC', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":3,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2425, '2013-10-29 08:38:36', 67, 'domus_action_error', 'Callback object not found for returning_guid : 231201B6-B7E4-4BB5-B1DB-11DC89FB427B', '{}'),
	(2426, '2013-10-29 08:38:36', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8392DF27-6118-47A7-A94B-666A9D59A41C', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":4,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2427, '2013-10-29 08:38:37', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A0BDC7DD-AA8C-4703-BD16-744EDA06B542', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":7,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2428, '2013-10-29 08:38:37', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : EAD25485-DCEC-4773-A1AE-1CAF7D46595F', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":6,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2429, '2013-10-29 08:38:37', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 7914EACB-05E5-44B7-8FF9-2C9B973C3E8D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":9,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2430, '2013-10-29 08:38:37', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : D5B50CA9-27E6-4198-AEF1-DEC8DEFBA5FB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":10,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2431, '2013-10-29 08:38:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 87CFA81B-1B52-4A9F-9B6F-AC8CC88135AF', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":12,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2432, '2013-10-29 08:38:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6C36042F-FE49-4BA6-9092-831EE33CEEAC', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":13,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2433, '2013-10-29 08:38:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 611BD87F-0E83-4AB5-B52C-B85160FD17B1', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":15,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2434, '2013-10-29 08:38:39', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 373DB092-632A-4EF0-8B1C-FD5080910474', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":16,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2435, '2013-10-29 08:38:39', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F7C19E4D-2CD6-43A1-8AAB-959A77433816', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":18,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2436, '2013-10-29 08:38:39', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 644A9593-9BC1-47BD-BF48-A0C65FE415B5', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":19,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2437, '2013-10-29 08:38:40', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 34E0BA12-3752-4D70-8605-51B2399736BE', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":21,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2438, '2013-10-29 08:38:40', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : D103893A-001B-4AD5-9F85-9E1DCBBE6B0E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":22,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2439, '2013-10-29 08:38:41', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 06CC310F-19B8-4AA4-A14F-C74CDC5D1D83', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":24,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2440, '2013-10-29 08:38:41', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C74915BB-77CD-45D9-9FC6-CE55D8937E90', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":25,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2441, '2013-10-29 08:38:42', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : D0CC937E-960E-44AE-A378-5152C352E8FD', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":27,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2442, '2013-10-29 08:38:42', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8188F755-3B73-4F53-8A1F-0CB5EE989994', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":28,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2443, '2013-10-29 08:38:43', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F6CF3E65-B796-42D6-B5CD-71303D7534F7', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":30,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2444, '2013-10-29 08:38:43', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 00E24E25-8FB7-4308-893B-BABC64578CAB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":31,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2445, '2013-10-29 08:38:47', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 968234B3-8851-4CE1-AD65-22BCA85F0164', '{"domain":"cobaltcascade.localhost","post_id":"124"}'),
	(2446, '2013-10-29 08:38:55', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : F727314C-7E13-4F9A-A8E0-BADB2082F6B3', '{"domain":"cobaltcascade.localhost","post_id":"128"}'),
	(2447, '2013-10-29 08:38:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CBBDCF14-294F-46B0-AA13-98D00FE716E9', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":45,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2448, '2013-10-29 08:39:03', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A3A9CA8A-BD03-47C3-ADE7-34B1B32E8735', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":54,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2449, '2013-10-29 08:39:04', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : E99FEACB-358D-431E-8A19-49AB2B7A68DB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":57,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2450, '2013-10-29 08:39:05', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CF074267-4E6D-4854-A026-046E8F8CECB2', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":59,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2451, '2013-10-29 08:39:05', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 03DC905C-48EE-44B8-B07F-29C4D7E06212', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":61,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2452, '2013-10-29 08:39:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : 65B59A06-A658-4FE4-9A32-BC8D9C1496AB', '{}'),
	(2453, '2013-10-29 08:39:19', 67, 'domus_action_error', 'Callback object not found for returning_guid : 65B59A06-A658-4FE4-9A32-BC8D9C1496AB', '{}'),
	(2454, '2013-10-29 08:39:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : C63EA893-6C70-4206-A9D6-E49310359F18', '{}'),
	(2455, '2013-10-29 08:39:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : C63EA893-6C70-4206-A9D6-E49310359F18', '{}'),
	(2456, '2013-10-29 08:39:21', 67, 'domus_action_error', 'Callback object not found for returning_guid : 56161CED-1706-4912-ABF8-327A51CBE288', '{}'),
	(2457, '2013-10-29 08:39:21', 67, 'domus_action_error', 'Callback object not found for returning_guid : 56161CED-1706-4912-ABF8-327A51CBE288', '{}'),
	(2458, '2013-10-29 08:39:21', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6391CC0C-A315-456E-B6D6-703A5301040E', '{}'),
	(2459, '2013-10-29 08:39:21', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6391CC0C-A315-456E-B6D6-703A5301040E', '{}'),
	(2460, '2013-10-29 08:39:22', 67, 'domus_action_error', 'Callback object not found for returning_guid : 386C688D-D583-4A10-9B4A-4CEFF847D8D8', '{}'),
	(2461, '2013-10-29 08:39:22', 67, 'domus_action_error', 'Callback object not found for returning_guid : 386C688D-D583-4A10-9B4A-4CEFF847D8D8', '{}'),
	(2462, '2013-10-29 08:39:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5BFEC77A-C35C-49A6-90F6-A49138EB95B9', '{}'),
	(2463, '2013-10-29 08:39:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5BFEC77A-C35C-49A6-90F6-A49138EB95B9', '{}'),
	(2464, '2013-10-29 08:39:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9026B996-7B08-44E0-B3B6-1EA85AED6686', '{}'),
	(2465, '2013-10-29 08:39:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9026B996-7B08-44E0-B3B6-1EA85AED6686', '{}'),
	(2466, '2013-10-29 08:39:24', 67, 'domus_action_error', 'Callback object not found for returning_guid : 33315E8D-1FDF-4189-ADEE-764AB05862CA', '{}'),
	(2467, '2013-10-29 08:39:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : 33315E8D-1FDF-4189-ADEE-764AB05862CA', '{}'),
	(2468, '2013-10-29 08:39:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6EE72FF-72F1-4417-90DC-3C623753C61E', '{}'),
	(2469, '2013-10-29 08:39:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : A6EE72FF-72F1-4417-90DC-3C623753C61E', '{}'),
	(2470, '2013-10-29 08:39:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : 166D3075-29AA-4905-A811-3EAD5E80CE5E', '{}'),
	(2471, '2013-10-29 08:39:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : 166D3075-29AA-4905-A811-3EAD5E80CE5E', '{}'),
	(2472, '2013-10-29 08:39:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : D9FF7546-E1D6-45B9-A4CB-1264BA8A706D', '{}'),
	(2473, '2013-10-29 08:39:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : D9FF7546-E1D6-45B9-A4CB-1264BA8A706D', '{}'),
	(2474, '2013-10-29 08:39:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : E7C1C7A1-EC03-49EC-B960-AE555AA4638A', '{}'),
	(2475, '2013-10-29 08:39:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : E7C1C7A1-EC03-49EC-B960-AE555AA4638A', '{}'),
	(2476, '2013-10-29 08:39:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5222A125-230B-4826-8AFC-1D0993155052', '{}'),
	(2477, '2013-10-29 08:39:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5222A125-230B-4826-8AFC-1D0993155052', '{}'),
	(2478, '2013-10-29 08:39:32', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"128"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/128/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"E47EB779-CA64-4C8B-8795-95FC0A3103F5"}'),
	(2479, '2013-10-29 08:39:36', 67, 'domus_action_error', 'Callback object not found for returning_guid : DF24C5D6-8B40-49FB-B179-DD7DBA4E95B0', '{}'),
	(2480, '2013-10-29 08:39:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F87DCC87-CB8E-4764-B72E-B5397A2BE246', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":3,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2481, '2013-10-29 08:39:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3555302F-BDC3-4072-A1B9-89694A7AC6CC', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":4,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2482, '2013-10-29 08:39:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 08AB9CAA-6EB4-4762-9B78-DEC96E8BD3A5', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":6,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2483, '2013-10-29 08:39:49', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6397C0BD-E182-42E6-94EC-1A95D9EDD862', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":7,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2484, '2013-10-29 08:39:50', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F002B7C2-51A5-42A5-BAD6-1FBF5F4FD3BD', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":9,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2485, '2013-10-29 08:39:50', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : A3DD74C3-64F7-41BD-AAA5-32051D8245D0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":10,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2486, '2013-10-29 08:39:50', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 11140656-7986-46FE-B194-E1E7AB9A87BA', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":12,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2487, '2013-10-29 08:39:51', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2A0775F7-BE80-4D5A-B9E6-34B60A0281DB', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":13,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2488, '2013-10-29 08:39:51', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FF676F9B-268D-4ECD-8243-33044FEDDC47', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":15,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2489, '2013-10-29 08:39:51', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6DC51CE7-95C1-421D-954B-350D6CC805C7', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":16,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2490, '2013-10-29 08:39:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6315EBF7-5852-4F9F-90B7-D40A867B25F4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":18,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2491, '2013-10-29 08:39:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : AC225793-EDDC-4808-8619-0D9487E837F8', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":19,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2492, '2013-10-29 08:39:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : AB63E5DB-DE9E-4F1C-AB1B-ADD484E3F820', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":21,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2493, '2013-10-29 08:39:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B681F653-0538-40C6-A561-1A423DACC8E9', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":22,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2494, '2013-10-29 08:39:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3CD7A616-8F7D-4688-81D9-A6495C3E3185', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":24,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2495, '2013-10-29 08:39:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0BCBE486-A63A-4028-8823-52B5E957C683', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":25,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2496, '2013-10-29 08:39:54', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8EACA074-7AAB-4183-8F9B-E3D6580AD4B0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":27,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2497, '2013-10-29 08:39:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DB1C5194-2287-4459-82E9-FB654DC4F41E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":28,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2498, '2013-10-29 08:39:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FA2D9E92-AC03-4893-BEE6-345EDD0607F5', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":30,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2499, '2013-10-29 08:39:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9771FF4E-6880-4C5E-8FC5-AFFD14AEEDD0', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":31,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2500, '2013-10-29 08:39:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 61C32E55-A49A-4922-914D-6CFDFC33A3E6', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":33,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2501, '2013-10-29 08:39:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 21A1048E-09DB-4A69-B7E8-B7E3DB5F72FE', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":34,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2502, '2013-10-29 08:39:56', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 431FFB57-A830-41CD-9FFD-5721A5603094', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":36,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2503, '2013-10-29 08:39:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 179F3A5A-89FD-4035-A8EF-120537243138', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":37,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2504, '2013-10-29 08:39:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F314785C-1CC2-4D70-B2FD-F087C6AE41E2', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":39,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2505, '2013-10-29 08:39:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 50A5B38A-FD76-4052-BD95-F0940B3B067B', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":40,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2506, '2013-10-29 08:40:02', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 51457C03-51B7-43EC-BA33-17A9FE1C2557', '{"domain":"cobaltcascade.localhost","post_id":"128"}'),
	(2507, '2013-10-29 08:40:06', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B139CF31-33AC-499C-B6A0-8BF812D487DE', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":47,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2508, '2013-10-29 08:49:17', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"EF627A5C-ED86-41C3-B79A-4767B7E4B1D9"}'),
	(2509, '2013-10-29 08:49:17', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"B5D42DCC-9655-4EDA-BDDF-1B5CD9B8324B"}'),
	(2510, '2013-10-29 08:50:47', 67, 'domus_action_error', 'Callback object not found for returning_guid : 66A3E3FB-AADE-41ED-BEC0-EC9E56E80472', '{}'),
	(2511, '2013-10-29 08:50:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : D3756A3D-2F62-43A9-A075-6CF83530D1A8', '{}'),
	(2512, '2013-10-29 08:51:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1BBD60AB-7B54-479B-AAF3-637103C3F9DF', '{}'),
	(2513, '2013-10-29 08:51:03', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9F698039-31BF-4F74-B4EB-AA9ABAC19966', '{}'),
	(2514, '2013-10-29 08:51:06', 67, 'domus_action_error', 'Callback object not found for returning_guid : 37318EDD-AC77-4295-BBCC-818CFF2E9A8C', '{}'),
	(2515, '2013-10-29 08:51:14', 67, 'domus_action_error', 'Callback object not found for returning_guid : 83E1378B-F7B9-4071-A3F0-3BC1D44A25A2', '{}'),
	(2516, '2013-10-29 08:51:17', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 5BCDAA9A-BFC8-4E26-BD9C-FC37EDEBBB18', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":10,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2517, '2013-10-29 08:51:19', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"124"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/124/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"F4D135E3-7445-43DD-8942-7069BAACB7D1"}'),
	(2518, '2013-10-29 08:51:29', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8EB0E29E-3DBF-4218-89D8-B1CDBD8EE05C', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":32,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2519, '2013-10-29 08:51:30', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 047D39AF-1754-44E4-BD4C-E2E61179AF07', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":34,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2520, '2013-10-29 08:51:30', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : D389397F-83A2-4E04-B7E4-B38D8580330A', '{"domain":"cobaltcascade.localhost","post_id":"124"}'),
	(2521, '2013-10-29 08:51:33', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9669B609-0A37-4EA5-A1B9-99A43386329C', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":42,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2522, '2013-10-29 08:51:35', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3C86ED63-62D8-4FDE-865E-CF7F0A44CE2D', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":46,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2523, '2013-10-29 08:57:05', 67, 'domus_action_error', 'Callback object not found for returning_guid : 519CC20A-BF9D-4435-A686-6DF5D701FAF5', '{}'),
	(2524, '2013-10-29 08:57:05', 67, 'domus_action_error', 'Callback object not found for returning_guid : E67506D0-C9F1-4BCB-A48E-CAFC9DA28C6A', '{}'),
	(2525, '2013-10-29 08:57:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9D6CCE66-6284-4E33-B7C0-119991317F91', '{}'),
	(2526, '2013-10-29 08:57:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9D6CCE66-6284-4E33-B7C0-119991317F91', '{}'),
	(2527, '2013-10-29 08:57:09', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4FB06747-39D8-4EAD-9EB6-F389D5B6BBF0', '{}'),
	(2528, '2013-10-29 08:57:11', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5996ED09-0381-4338-9BEA-C29AD4056A00', '{}'),
	(2529, '2013-10-29 08:57:11', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"124"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/124/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"AF9F8989-6443-4907-BEF9-99513A9A0EE5"}'),
	(2530, '2013-10-29 08:57:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : FD4E90CF-DF53-4B0A-806E-1E55DA323C15', '{}'),
	(2531, '2013-10-29 08:57:34', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8EFEE29B-E2D6-45C1-B3BF-748E05E6C18B', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":24,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2532, '2013-10-29 08:57:35', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 080C2B43-DBBF-4964-96AE-93995D07251C', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":26,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2533, '2013-10-29 08:57:37', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : E27A8C77-648A-468D-A44A-F294A38220A6', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":28,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2534, '2013-10-29 08:57:37', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 771FF7FE-EC85-4B9C-ACD0-814584BDD025', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":29,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2535, '2013-10-29 08:57:38', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : BF6ADEF8-E44B-425F-9760-22AEA57DF047', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":31,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2536, '2013-10-29 08:57:40', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 63770E79-10D1-49C4-9E4E-737169699A04', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":34,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2537, '2013-10-29 08:57:41', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 87BA2812-819A-497E-B925-EF6F68BBCA61', '{"domain":"cobaltcascade.localhost","post_id":"124"}'),
	(2538, '2013-10-29 08:57:42', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0CE5F101-3CA2-4E5D-B0E3-45F5D1197C76', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":36,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2539, '2013-10-29 09:02:00', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D9E54150-6DF1-40CC-98AB-420EE7F734A6"}'),
	(2540, '2013-10-29 09:02:00', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"D253C8FB-34D0-44AB-93FA-93E9F07A3759"}'),
	(2541, '2013-10-29 09:03:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : CCECD976-F416-4D92-B27F-A8C205D10323', '{}'),
	(2542, '2013-10-29 09:03:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : 05776A7C-19B9-47D0-97F2-F755308D3608', '{}'),
	(2543, '2013-10-29 09:03:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : CEA33E2B-3585-43B6-BC8C-BCF3AAD81783', '{}'),
	(2544, '2013-10-29 09:03:36', 67, 'domus_action_error', 'Callback object not found for returning_guid : E76903A4-BADF-4AE6-BEEF-EE2D73330621', '{}'),
	(2545, '2013-10-29 09:03:48', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1922DDFF-C63E-4D1F-99D2-1F6FA0B786C5', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":38,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2546, '2013-10-29 09:03:58', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : CA9B2FE2-24E9-490B-8098-0F1989FE38C4', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":45,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2547, '2013-10-29 09:04:01', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : B0D46315-9686-4C96-8CCD-0DF764FE231F', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":47,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2548, '2013-10-29 09:04:05', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F285F8E5-24DE-4470-A335-03D285F5649E', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":54,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2549, '2013-10-29 09:04:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : FF391565-EFA4-4790-84C5-8E59E635D98A', '{}'),
	(2550, '2013-10-29 09:04:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : FF391565-EFA4-4790-84C5-8E59E635D98A', '{}'),
	(2551, '2013-10-29 09:05:01', 67, 'domus_action_error', 'Callback object not found for returning_guid : D6352122-4E6E-4ACC-9304-AAABC44DF39C', '{}'),
	(2552, '2013-10-29 09:07:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : D8C7590D-2BC7-45CC-A217-F45DCEB43867', '{}'),
	(2553, '2013-10-29 09:07:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : D8C7590D-2BC7-45CC-A217-F45DCEB43867', '{}'),
	(2554, '2013-10-29 09:08:25', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"2CBC2CA9-CBDF-4D9E-8255-DB0326B54247"}'),
	(2555, '2013-10-29 09:08:25', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10326","user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"2CBC2CA9-CBDF-4D9E-8255-DB0326B54247"},"request_guid":"E2AFA15F-C4C0-4639-BED5-2C92C18421C7"}'),
	(2556, '2013-10-29 09:08:25', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"10326","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":20,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"17EC78C7-816C-4462-874F-EBC6ACC04E92"}'),
	(2557, '2013-10-29 09:29:26', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"update":false,"sort_id":3,"client_timeout":1383038994058},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"9C2CB435-FAD1-4DDF-AABA-A8587BDF80D2"},"request_guid":"24BDCF04-CF88-4321-BC9A-3369A8BEEFEA"}'),
	(2558, '2013-10-29 09:29:26', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"update":false,"sort_id":3,"client_timeout":1383038994058},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"9C2CB435-FAD1-4DDF-AABA-A8587BDF80D2"},"request_guid":"24BDCF04-CF88-4321-BC9A-3369A8BEEFEA"},"request_guid":"2E349C81-2E3C-4B87-9F96-B9F4405B4156"}'),
	(2559, '2013-10-29 09:29:26', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"E0609DB0-7A16-47B3-84B0-33F2C3551961"}'),
	(2560, '2013-10-29 09:29:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : E0609DB0-7A16-47B3-84B0-33F2C3551961', '{}'),
	(2561, '2013-10-29 09:29:26', 67, 'domus_action_error', 'Callback object not found for returning_guid : E0609DB0-7A16-47B3-84B0-33F2C3551961', '{}'),
	(2562, '2013-10-29 09:29:26', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"update":false,"sort_id":3,"client_timeout":1383038994058},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"9C2CB435-FAD1-4DDF-AABA-A8587BDF80D2"}'),
	(2563, '2013-10-29 09:29:26', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"E0609DB0-7A16-47B3-84B0-33F2C3551961"}'),
	(2564, '2013-10-29 09:29:26', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"E0609DB0-7A16-47B3-84B0-33F2C3551961"}'),
	(2565, '2013-10-29 09:29:33', 67, 'domus_action_error', 'Callback object not found for returning_guid : 05C24221-99CC-43A6-A091-16B66EE15CB4', '{}'),
	(2566, '2013-10-29 09:29:34', 67, 'domus_action_error', 'Callback object not found for returning_guid : 05C24221-99CC-43A6-A091-16B66EE15CB4', '{}'),
	(2567, '2013-10-29 09:29:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C8FC7910-D12B-4B6F-BD81-492BFFE35887', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(2568, '2013-10-29 09:29:57', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C99D738B-946C-4B20-B19D-2254D32C3494', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(2569, '2013-10-29 09:39:27', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"4C354173-276A-4D2B-B27E-78127898B06B"}'),
	(2570, '2013-10-29 09:39:27', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"4A942D46-7618-4ED6-8AC2-95C8D54243BD"}'),
	(2571, '2013-10-29 09:57:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : 88D7E148-887F-41BC-B78F-B707A1A9C3FE', '{}'),
	(2572, '2013-10-29 09:57:54', 67, 'domus_action_error', 'Callback object not found for returning_guid : 88D7E148-887F-41BC-B78F-B707A1A9C3FE', '{}'),
	(2573, '2013-10-29 09:58:20', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 12BDEDF2-52C5-4DC0-8F6E-87CA66BBA7A6', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(2574, '2013-10-29 09:58:20', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 37DBD16E-D923-404E-AA3A-B220F7114AFC', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(2575, '2013-10-29 09:58:34', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 88E69E1C-5F99-4CD2-BE07-4CC54937D9D9', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2576, '2013-10-29 09:59:16', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 5369AD80-1CA7-4A4D-868E-F899114B3AA7', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2577, '2013-10-29 09:59:59', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2E4A19B5-36F6-48D2-A73F-4292C536DA56', '{"sort_request":{"type":"local_all","filter":{"url":"cobaltcascade.localhost/test/rhythm/test+datesort/latest/latest/latest/json","name":"newest","priority":10},"moderation_rings":[],"posts_to_timestamp":null,"private_page":1,"user":{"username":"test","domain":"cobaltcascade.localhost"}}}'),
	(2578, '2013-10-29 10:14:03', 67, 'domus_action_error', 'Callback object not found for returning_guid : C6B3AEFA-CC23-4029-94C9-DD02A928A8C1', '{}'),
	(2579, '2013-10-29 10:14:03', 67, 'domus_action_error', 'Callback object not found for returning_guid : C6B3AEFA-CC23-4029-94C9-DD02A928A8C1', '{}'),
	(2580, '2013-10-29 10:14:43', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"4BCD749D-869F-4B7C-96D0-644444121194"}'),
	(2581, '2013-10-29 10:14:43', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10326","user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"4BCD749D-869F-4B7C-96D0-644444121194"},"request_guid":"E43D3376-306F-43E0-B4BC-C288CD385F8B"}'),
	(2582, '2013-10-29 10:14:43', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"10326","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":20,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"DF0422F5-87F5-42A4-AD5E-36D0459C3656"}'),
	(2583, '2013-10-29 10:15:49', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"DBF6FDF3-BCCF-4F57-A850-3F8D25C580D5"}'),
	(2584, '2013-10-29 10:15:49', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10326","user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"DBF6FDF3-BCCF-4F57-A850-3F8D25C580D5"},"request_guid":"B550508C-E3C3-4ECD-B4A1-059990A91D3A"}'),
	(2585, '2013-10-29 10:15:49', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"10326","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":20,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"EE618DC0-47B6-4653-B2E3-9877CFA1ECA2"}'),
	(2586, '2013-10-29 10:16:58', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"96E883D0-91F1-4C66-80A4-4A55832525AC"}'),
	(2587, '2013-10-29 10:16:58', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10326","user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"96E883D0-91F1-4C66-80A4-4A55832525AC"},"request_guid":"81A6CAD3-9486-4430-B03D-D58B324D51BB"}'),
	(2588, '2013-10-29 10:16:58', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"10326","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":20,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"B6DE4DE5-1EB0-4352-8023-6FE46D0E6E58"}'),
	(2589, '2013-10-29 10:17:58', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"AE2BA57C-57C9-4E23-B6FA-8AF7353134F9"}'),
	(2590, '2013-10-29 10:17:58', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10326","user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"AE2BA57C-57C9-4E23-B6FA-8AF7353134F9"},"request_guid":"3B5DECD7-A06E-48AA-863D-3A530C0D684E"}'),
	(2591, '2013-10-29 10:17:58', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"10326","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":20,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"23031EC9-FAB4-48BF-9EA7-82BCEA5CDB1A"}'),
	(2592, '2013-10-29 10:22:17', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"87BC1D0B-598A-4EF9-BFDF-05BD8AFDC22B"}'),
	(2593, '2013-10-29 10:22:17', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10326","user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"87BC1D0B-598A-4EF9-BFDF-05BD8AFDC22B"},"request_guid":"98679B5A-E05C-49AC-954D-58F1FAD88C9C"}'),
	(2594, '2013-10-29 10:22:17', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"10326","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":20,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"8ED476D6-9BD7-4CEB-9991-1F4D428E8630"}'),
	(2595, '2013-10-29 10:23:38', 67, 'domus_action_error', 'Callback object not found for returning_guid : 118E1651-B36C-4EAE-B75A-7827E4AFFAD3', '{}'),
	(2596, '2013-10-29 10:23:38', 67, 'domus_action_error', 'Callback object not found for returning_guid : 118E1651-B36C-4EAE-B75A-7827E4AFFAD3', '{}'),
	(2597, '2013-10-29 10:23:46', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"test","version":"0/0/0"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/test/0/0/0/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"F70F17C6-91B8-4AF9-9CCF-4A7491A2073F"}'),
	(2598, '2013-10-29 10:23:46', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"test","version":"0/0/0"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"E1CCAB2D-0817-4BD6-B966-CF749FE99024"}'),
	(2599, '2013-10-29 10:23:46', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"test","version":"0/0/0"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/test/0/0/0/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"2BA7437C-69E9-4DAA-A44B-8D0714475C2A"}'),
	(2600, '2013-10-29 10:23:46', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"test","version":"0/0/0"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"43B9CB43-6EAB-4B5F-8F9C-84760E3F9791"}'),
	(2601, '2013-10-29 10:23:47', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"A3F9D5A3-F3DD-4BD8-AC14-C84DCD4E8144"}'),
	(2602, '2013-10-29 10:23:47', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/test/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"6E5EFADA-B147-49CC-9C74-87E6F521BE02"}'),
	(2603, '2013-10-29 10:23:47', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/test/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"A3F9D5A3-F3DD-4BD8-AC14-C84DCD4E8144"},"request_guid":"EEC0C897-C8AD-4AE6-BA9E-0890BB5F4A09"}'),
	(2604, '2013-10-29 10:23:47', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/test/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"6E5EFADA-B147-49CC-9C74-87E6F521BE02"}'),
	(2605, '2013-10-29 10:23:47', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/test/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"6E5EFADA-B147-49CC-9C74-87E6F521BE02"}'),
	(2606, '2013-10-29 10:23:48', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6E5EFADA-B147-49CC-9C74-87E6F521BE02', '{}'),
	(2607, '2013-10-29 10:23:48', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6E5EFADA-B147-49CC-9C74-87E6F521BE02', '{}'),
	(2608, '2013-10-29 10:24:06', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"test","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/test/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"DE355D9C-B5C5-4C8D-90BE-F1157590B731"}'),
	(2609, '2013-10-29 10:24:06', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"test","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"477FD09A-CF72-4B15-8D9B-6396C01B3ED8"}'),
	(2610, '2013-10-29 10:24:06', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"test","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/test/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"E1F502FA-3F83-48BF-AD0A-A6DCADA18711"}'),
	(2611, '2013-10-29 10:24:06', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"test","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"ED4037AF-EE6E-4925-9735-609A0912C27C"}'),
	(2612, '2013-10-29 10:24:07', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"DF5692BD-3E7C-427E-BFF0-EE52105320A2"}'),
	(2613, '2013-10-29 10:24:07', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/test/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"DF5692BD-3E7C-427E-BFF0-EE52105320A2"},"request_guid":"8564B10E-1062-4612-9746-F2BAB73E08A0"}'),
	(2614, '2013-10-29 10:24:07', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/test/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3FCC4069-13F4-49F5-8823-312DDE3E0B9B"}'),
	(2615, '2013-10-29 10:24:07', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/test/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3FCC4069-13F4-49F5-8823-312DDE3E0B9B"}'),
	(2616, '2013-10-29 10:24:07', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/test/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3FCC4069-13F4-49F5-8823-312DDE3E0B9B"}'),
	(2617, '2013-10-29 10:24:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3FCC4069-13F4-49F5-8823-312DDE3E0B9B', '{}'),
	(2618, '2013-10-29 10:24:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3FCC4069-13F4-49F5-8823-312DDE3E0B9B', '{}'),
	(2619, '2013-10-29 10:24:28', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"98CD897A-F703-48BF-810C-124CA200EEDD"}'),
	(2620, '2013-10-29 10:24:29', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"A1C9E41D-C3CE-407C-83F2-98587F396CFA"}'),
	(2621, '2013-10-29 10:24:29', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"6EC94825-9376-473A-AD27-8EF891150E05"}'),
	(2622, '2013-10-29 10:24:29', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"90F06F06-33C5-4829-AA0F-643584E403FC"}'),
	(2623, '2013-10-29 10:24:29', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"3DF6B782-A200-4C2B-8C53-218324E9E196"}'),
	(2624, '2013-10-29 10:24:29', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"0B458AAD-81E4-437D-A1A5-975D9AE0537E"}'),
	(2625, '2013-10-29 10:24:29', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"0B458AAD-81E4-437D-A1A5-975D9AE0537E"}'),
	(2626, '2013-10-29 10:24:29', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"3DF6B782-A200-4C2B-8C53-218324E9E196"},"request_guid":"F0233A46-BA07-4311-8C77-8FBB905A55D7"}'),
	(2627, '2013-10-29 10:24:30', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"0B458AAD-81E4-437D-A1A5-975D9AE0537E"}'),
	(2628, '2013-10-29 10:24:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : 0B458AAD-81E4-437D-A1A5-975D9AE0537E', '{}'),
	(2629, '2013-10-29 10:24:30', 67, 'domus_action_error', 'Callback object not found for returning_guid : 0B458AAD-81E4-437D-A1A5-975D9AE0537E', '{}'),
	(2630, '2013-10-29 10:24:42', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test","version":"0/0/0"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test/0/0/0/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"32545307-903A-4D71-8735-3F4392956ADD"}'),
	(2631, '2013-10-29 10:24:42', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test","version":"0/0/0"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"192F0695-C98D-482D-A893-FA953C7B54DD"}'),
	(2632, '2013-10-29 10:24:42', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test","version":"0/0/0"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test/0/0/0/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"EB3E6C38-67D1-4F88-9F62-DA85464AFA0A"}'),
	(2633, '2013-10-29 10:24:43', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test","version":"0/0/0"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"35F0F648-82D3-42CD-9A74-1C089C15C7DA"}'),
	(2634, '2013-10-29 10:24:43', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"C2DC5464-FDA4-4FA7-885D-E92BCA4C07FB"}'),
	(2635, '2013-10-29 10:24:43', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"C2DC5464-FDA4-4FA7-885D-E92BCA4C07FB"},"request_guid":"3A0B0213-A8BF-42BF-8549-7F3B546205CD"}'),
	(2636, '2013-10-29 10:24:43', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3EDB5723-55DC-46BB-9DEB-C319106E3BFD"}'),
	(2637, '2013-10-29 10:24:43', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3EDB5723-55DC-46BB-9DEB-C319106E3BFD"}'),
	(2638, '2013-10-29 10:24:43', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3EDB5723-55DC-46BB-9DEB-C319106E3BFD"}'),
	(2639, '2013-10-29 10:24:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3EDB5723-55DC-46BB-9DEB-C319106E3BFD', '{}'),
	(2640, '2013-10-29 10:24:43', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3EDB5723-55DC-46BB-9DEB-C319106E3BFD', '{}'),
	(2641, '2013-10-29 10:24:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9D8D737C-168B-479B-A55E-6BFDC68CC09F', '{}'),
	(2642, '2013-10-29 10:24:53', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9D8D737C-168B-479B-A55E-6BFDC68CC09F', '{}'),
	(2643, '2013-10-29 10:25:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : B33D1CB3-068D-403F-84E1-86F8D5EE541A', '{}'),
	(2644, '2013-10-29 10:25:59', 67, 'domus_action_error', 'Callback object not found for returning_guid : B33D1CB3-068D-403F-84E1-86F8D5EE541A', '{}'),
	(2645, '2013-10-29 10:26:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : 20DC2466-5210-45B5-94E9-903469C1D18F', '{}'),
	(2646, '2013-10-29 10:26:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : 20DC2466-5210-45B5-94E9-903469C1D18F', '{}'),
	(2647, '2013-10-29 10:28:41', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3DE78158-1B75-4820-A033-0C57364B7055', '{}'),
	(2648, '2013-10-29 10:28:42', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3DE78158-1B75-4820-A033-0C57364B7055', '{}'),
	(2649, '2013-10-29 10:28:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : E5651738-9B68-40B8-B083-4FC53C74B786', '{}'),
	(2650, '2013-10-29 10:28:58', 67, 'domus_action_error', 'Callback object not found for returning_guid : E5651738-9B68-40B8-B083-4FC53C74B786', '{}'),
	(2651, '2013-10-29 10:29:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6C2A2B8B-3ADD-4C80-95E8-DA3DCEB1C652', '{}'),
	(2652, '2013-10-29 10:29:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6C2A2B8B-3ADD-4C80-95E8-DA3DCEB1C652', '{}'),
	(2653, '2013-10-29 10:29:16', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10342"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10342/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CDbException."},"request_guid":"8B6ED7EB-C85F-4B1E-969E-3582AA32DB9B"}'),
	(2654, '2013-10-29 10:29:16', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10341"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10341/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CDbException."},"request_guid":"E38A6173-7358-4AD8-902B-9746182A3870"}'),
	(2655, '2013-10-29 10:29:16', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10340"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10340/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CDbException."},"request_guid":"522186FA-1A49-4048-9D93-598663AFF872"}'),
	(2656, '2013-10-29 10:29:36', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2A633A3B-39F4-49D3-9A03-E2AC553AD9DD', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2657, '2013-10-29 10:29:36', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1678D0E5-3C52-4D05-90D8-FF74ED8373F2', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":10,"name":"test reverse datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2658, '2013-10-29 10:29:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 3A63C9E1-246A-4520-B25C-903E33174AB5', '{"domain":"cobaltcascade.localhost","post_id":"10342"}'),
	(2659, '2013-10-29 10:29:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : C046D3E0-3C7C-4A9C-B10F-F3F06305B5D9', '{"domain":"cobaltcascade.localhost","post_id":"10341"}'),
	(2660, '2013-10-29 10:29:46', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : D1B8BAE7-14FD-451F-81E1-3E8A256A0928', '{"domain":"cobaltcascade.localhost","post_id":"10340"}'),
	(2661, '2013-10-29 10:30:58', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10342"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10342/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"292DDE86-969A-4296-BC41-1F9C62509B78"}'),
	(2662, '2013-10-29 10:30:58', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10341"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10341/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"1F671843-8511-475D-8EC8-4259062C754E"}'),
	(2663, '2013-10-29 10:30:58', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10340"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10340/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"10D04CCC-A2C1-4502-8193-E7D044AE85E6"}'),
	(2664, '2013-10-29 10:31:28', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : C6ECA703-5B7D-4A09-8DB2-DBCDA7AF9A01', '{"domain":"cobaltcascade.localhost","post_id":"10342"}'),
	(2665, '2013-10-29 10:31:28', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B561A514-19DA-4633-AD08-8B9051B6F90C', '{"domain":"cobaltcascade.localhost","post_id":"10341"}'),
	(2666, '2013-10-29 10:31:28', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : BB90F91B-F4A4-4530-9752-85F332193438', '{"domain":"cobaltcascade.localhost","post_id":"10340"}'),
	(2667, '2013-10-29 10:31:44', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10342"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10342/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"C38ECCE9-2ED2-4AB4-83A3-BA65EC769859"}'),
	(2668, '2013-10-29 10:31:44', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10341"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10341/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"1677F7B4-3098-4428-9792-F2FEBE3E46FF"}'),
	(2669, '2013-10-29 10:31:44', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10340"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10340/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"4467432F-AC48-485D-ABD8-BA965C79F2CD"}'),
	(2670, '2013-10-29 10:32:13', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 66566346-A15A-4C9D-8A6D-B4381C688568', '{"domain":"cobaltcascade.localhost","post_id":"10342"}'),
	(2671, '2013-10-29 10:32:13', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : E47DC75A-7462-42DA-BE11-71DCB620ABB4', '{"domain":"cobaltcascade.localhost","post_id":"10341"}'),
	(2672, '2013-10-29 10:32:13', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 08142021-0A0F-4810-8D4E-BADF1CA53839', '{"domain":"cobaltcascade.localhost","post_id":"10340"}'),
	(2673, '2013-10-29 10:38:17', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"update":false,"sort_id":1,"client_timeout":1383043125539},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"D2903B38-449F-434C-A8B4-B0030DCC3F48"},"request_guid":"9034B1AB-3B30-4F85-BE24-8105EEA29B34"}'),
	(2674, '2013-10-29 10:38:17', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"update":false,"sort_id":1,"client_timeout":1383043125539},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"D2903B38-449F-434C-A8B4-B0030DCC3F48"},"request_guid":"9034B1AB-3B30-4F85-BE24-8105EEA29B34"},"request_guid":"889DE1C3-316E-4F0D-8FF8-CC893D5ED03C"}'),
	(2675, '2013-10-29 10:38:17', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"52EA6E72-B910-4897-AA2B-8EA36AB99FD7"}'),
	(2676, '2013-10-29 10:38:17', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"52EA6E72-B910-4897-AA2B-8EA36AB99FD7"}'),
	(2677, '2013-10-29 10:38:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 52EA6E72-B910-4897-AA2B-8EA36AB99FD7', '{}'),
	(2678, '2013-10-29 10:38:17', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"52EA6E72-B910-4897-AA2B-8EA36AB99FD7"}'),
	(2679, '2013-10-29 10:38:17', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"52EA6E72-B910-4897-AA2B-8EA36AB99FD7"}'),
	(2680, '2013-10-29 10:38:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 52EA6E72-B910-4897-AA2B-8EA36AB99FD7', '{}'),
	(2681, '2013-10-29 10:38:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 52EA6E72-B910-4897-AA2B-8EA36AB99FD7', '{}'),
	(2682, '2013-10-29 10:38:18', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"update":false,"sort_id":1,"client_timeout":1383043125539},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"D2903B38-449F-434C-A8B4-B0030DCC3F48"}'),
	(2683, '2013-10-29 10:38:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A34A569-143E-408D-8637-D200F61FABE1', '{}'),
	(2684, '2013-10-29 10:38:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1A34A569-143E-408D-8637-D200F61FABE1', '{}'),
	(2685, '2013-10-29 10:38:47', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"958BE36C-DC74-4331-94F7-07E832C1D6FF"}'),
	(2686, '2013-10-29 10:38:47', 67, 'domus_action_error', 'Callback object not found for returning_guid : 958BE36C-DC74-4331-94F7-07E832C1D6FF', '{}'),
	(2687, '2013-10-29 10:38:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 64EDF1D5-AA76-4BBE-91BA-8783E9520C81', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(2688, '2013-10-29 10:38:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6EE70EF8-6B9F-45EF-893C-8CAE69F74B9F', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":11,"name":"test reverse datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null}}'),
	(2689, '2013-10-29 10:39:14', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"1","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"A81F0429-7926-4C3C-BF94-16954631A775"}'),
	(2690, '2013-10-29 10:39:14', 67, 'domus_action_error', 'Callback object not found for returning_guid : A81F0429-7926-4C3C-BF94-16954631A775', '{}'),
	(2691, '2013-10-29 10:39:56', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"1","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"A97D7CC7-F58D-466C-B737-BDD4931C3BFE"}'),
	(2692, '2013-10-29 10:39:56', 67, 'domus_action_error', 'Callback object not found for returning_guid : A97D7CC7-F58D-466C-B737-BDD4931C3BFE', '{}'),
	(2693, '2013-10-29 10:42:29', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"1","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"F6E266F1-C176-43DB-98F9-0C825C2C9BAF"}'),
	(2694, '2013-10-29 10:42:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : F6E266F1-C176-43DB-98F9-0C825C2C9BAF', '{}'),
	(2695, '2013-10-29 10:43:15', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"1","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"F220E965-93A4-46A0-99C0-CE05C6224446"}'),
	(2696, '2013-10-29 10:43:15', 67, 'domus_action_error', 'Callback object not found for returning_guid : F220E965-93A4-46A0-99C0-CE05C6224446', '{}'),
	(2697, '2013-10-29 10:44:47', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"1","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"BC6B27DD-9C13-4DFC-B309-0F80A3B45345"}'),
	(2698, '2013-10-29 10:44:47', 67, 'domus_action_error', 'Callback object not found for returning_guid : BC6B27DD-9C13-4DFC-B309-0F80A3B45345', '{}'),
	(2699, '2013-10-29 10:55:42', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"C55FDF32-FAFD-472B-89AB-A7D5988F6F26"}'),
	(2700, '2013-10-29 10:55:42', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"F7EF32C0-94EE-4112-BBD9-1896F4A9332E"}'),
	(2701, '2013-10-29 11:16:33', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"86E28035-D08A-4955-B607-A629FDC1DCAD"}'),
	(2702, '2013-10-29 11:16:33', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"3219088C-DB55-42A2-AB3C-62C3A47F3299"}'),
	(2703, '2013-10-29 11:35:42', 65, 'StoreOwnersStreamSortResults_post_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"StoreOwnersStreamSortResults","request_data":{"posts":[{"post_id":"13","score":"13212000000"},{"post_id":"48","score":"13211994600"},{"post_id":"47","score":"13211994000"},{"post_id":"16","score":"13211982000"},{"post_id":"15","score":"13211976000"},{"post_id":"14","score":"13211970000"},{"post_id":"12","score":"13211964000"},{"post_id":"11","score":"13211928000"},{"post_id":"10","score":"13211892000"},{"post_id":"9","score":"13211856000"}],"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test stream","version":"0/0/0"},"top_parent_id":"1","filter_rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"latest/latest/latest"}},"error_code":"StoreOwnersStreamSortResults_post_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test stream/0/0/0/storeownersstreamsortresults Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CDbException."},"request_guid":"B4BD781D-FC2D-4D50-9708-C7D705168BE5"}'),
	(2704, '2013-10-29 11:35:42', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/test/stream/test stream/0/0/0/json","post_id":"1","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"1388BE7D-9C1E-41C9-B17D-26DD965FF6C2"}'),
	(2705, '2013-10-29 11:35:42', 67, 'domus_action_error', 'Callback object not found for returning_guid : 1388BE7D-9C1E-41C9-B17D-26DD965FF6C2', '{}'),
	(2706, '2013-10-29 11:37:47', 67, 'domus_action_error', 'Callback object not found for returning_guid : 25760D95-64C1-4D07-83FD-D0F15295D252', '{}'),
	(2707, '2013-10-29 11:37:47', 67, 'domus_action_error', 'Callback object not found for returning_guid : 25760D95-64C1-4D07-83FD-D0F15295D252', '{}'),
	(2708, '2013-10-29 11:55:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 395B07D8-2D0E-4613-B0B1-EE431BCFCE21', '{}'),
	(2709, '2013-10-29 11:55:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 395B07D8-2D0E-4613-B0B1-EE431BCFCE21', '{}'),
	(2710, '2013-10-29 11:55:16', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4BCA2B0C-382D-4AF3-B80D-301031C87188', '{}'),
	(2711, '2013-10-29 11:55:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 4BCA2B0C-382D-4AF3-B80D-301031C87188', '{}'),
	(2712, '2013-10-29 11:55:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : 198CC483-1907-432F-BD60-622ACFB87CF0', '{}'),
	(2713, '2013-10-29 11:55:25', 67, 'domus_action_error', 'Callback object not found for returning_guid : 198CC483-1907-432F-BD60-622ACFB87CF0', '{}'),
	(2714, '2013-10-29 12:00:22', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 0FB9F77D-01CC-48AF-B7C4-9474E232CF30', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2715, '2013-10-29 12:00:22', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : EB9E0BCD-562A-4CF4-8A27-A384AB7531AF', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2716, '2013-10-29 12:00:24', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"88F21B83-2743-4AD6-8D33-89F6CA8D8168"}'),
	(2717, '2013-10-29 12:00:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : F5571494-E6F4-4DD7-A041-59DE7EF6AC8C', '{}'),
	(2718, '2013-10-29 12:00:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : F5571494-E6F4-4DD7-A041-59DE7EF6AC8C', '{}'),
	(2719, '2013-10-29 12:00:39', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"F5571494-E6F4-4DD7-A041-59DE7EF6AC8C"}'),
	(2720, '2013-10-29 12:00:39', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"F5571494-E6F4-4DD7-A041-59DE7EF6AC8C"}'),
	(2721, '2013-10-29 12:00:39', 67, 'domus_action_error', 'Callback object not found for returning_guid : F5571494-E6F4-4DD7-A041-59DE7EF6AC8C', '{}'),
	(2722, '2013-10-29 12:00:39', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"F5571494-E6F4-4DD7-A041-59DE7EF6AC8C"}'),
	(2723, '2013-10-29 12:00:39', 67, 'domus_action_error', 'Callback object not found for returning_guid : F5571494-E6F4-4DD7-A041-59DE7EF6AC8C', '{}'),
	(2724, '2013-10-29 12:00:39', 67, 'domus_action_error', 'Callback object not found for returning_guid : F5571494-E6F4-4DD7-A041-59DE7EF6AC8C', '{}'),
	(2725, '2013-10-29 12:04:45', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","post_id":"10226","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring"}],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"96778810-A577-487B-B3C7-DBD3E165E491"}'),
	(2726, '2013-10-29 12:04:45', 67, 'domus_action_error', 'Callback object not found for returning_guid : 96778810-A577-487B-B3C7-DBD3E165E491', '{}'),
	(2727, '2013-10-29 12:05:25', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C73B8C5C-AEC3-4F39-8A21-B5045AD5584C', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2728, '2013-10-29 12:05:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F04DE501-3C84-4BF7-89E6-5E3CF1BCB3A3', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2729, '2013-10-29 12:09:41', 67, 'domus_action_error', 'Callback object not found for returning_guid : F4ED4F9C-D9AD-4769-8ED8-881D59455F03', '{}'),
	(2730, '2013-10-29 12:09:41', 67, 'domus_action_error', 'Callback object not found for returning_guid : F4ED4F9C-D9AD-4769-8ED8-881D59455F03', '{}'),
	(2731, '2013-10-29 12:14:31', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"FD3C3D48-64DB-48E9-8D03-58A56DB41633"}'),
	(2732, '2013-10-29 12:14:31', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"F56EE031-B0C7-4E85-B3AF-4A8FF58B75FB"}'),
	(2733, '2013-10-29 12:14:34', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 597C8057-B87D-496B-BA64-170018710E68', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2734, '2013-10-29 12:14:34', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 8170F305-CE2C-4F13-ADAE-789D29DFEB6B', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2735, '2013-10-29 12:19:35', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"F86DDB27-875A-4716-BBA4-89ADED8F7FB8"}'),
	(2736, '2013-10-29 12:19:35', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"25E32E45-CA4A-404B-8039-17EFDBCF1BE7"}'),
	(2737, '2013-10-29 12:23:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : F0C4CFBB-3C9E-4BDD-BB26-BF792F36D8D4', '{}'),
	(2738, '2013-10-29 12:23:29', 67, 'domus_action_error', 'Callback object not found for returning_guid : F0C4CFBB-3C9E-4BDD-BB26-BF792F36D8D4', '{}'),
	(2739, '2013-10-29 12:23:40', 67, 'domus_action_error', 'Callback object not found for returning_guid : F5CF55E6-EF5B-49AB-8F90-B675EBD01CAC', '{}'),
	(2740, '2013-10-29 12:23:40', 67, 'domus_action_error', 'Callback object not found for returning_guid : F5CF55E6-EF5B-49AB-8F90-B675EBD01CAC', '{}'),
	(2741, '2013-10-29 12:24:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : C0A024D5-E7A5-49B4-B5AE-C270887A2826', '{}'),
	(2742, '2013-10-29 12:24:12', 67, 'domus_action_error', 'Callback object not found for returning_guid : C0A024D5-E7A5-49B4-B5AE-C270887A2826', '{}'),
	(2743, '2013-10-29 12:29:10', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 52BE0F95-9C64-4B54-8813-F67704B120FB', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2744, '2013-10-29 12:29:10', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : E6489492-A622-47C7-ABAE-320278B85076', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2745, '2013-10-29 12:34:11', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"79357475-2714-48D3-883A-9F9CAC961DC6"}'),
	(2746, '2013-10-29 12:34:11', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"63AFF5BB-0F35-46AF-B542-F24A403124CF"}'),
	(2747, '2013-10-29 12:34:47', 67, 'domus_action_error', 'Callback object not found for returning_guid : AF9DE055-DD82-450E-A47D-8C7CB8E441AE', '{}'),
	(2748, '2013-10-29 12:34:47', 67, 'domus_action_error', 'Callback object not found for returning_guid : AF9DE055-DD82-450E-A47D-8C7CB8E441AE', '{}'),
	(2749, '2013-10-29 12:39:46', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 85564B49-FBAE-4B8D-B88A-F454D5A21205', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2750, '2013-10-29 12:39:46', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6DEA7572-BC31-474B-B825-946E0F1A9E5C', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2751, '2013-10-29 12:43:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : F168EFFB-7558-4556-A289-DF16FD596EF5', '{}'),
	(2752, '2013-10-29 12:43:57', 67, 'domus_action_error', 'Callback object not found for returning_guid : F168EFFB-7558-4556-A289-DF16FD596EF5', '{}'),
	(2753, '2013-10-29 12:48:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 96E741D8-9C49-4DF5-BF52-CAE82460826C', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2754, '2013-10-29 12:48:55', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 12F92FC6-6E19-4C5E-AE7F-15E2DF66091F', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2755, '2013-10-29 12:51:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : 17B1B230-B4C6-4CF7-BF99-C4435E92FF46', '{}'),
	(2756, '2013-10-29 12:51:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : 17B1B230-B4C6-4CF7-BF99-C4435E92FF46', '{}'),
	(2757, '2013-10-29 12:56:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 5CF5C1A1-5757-49D0-AE62-281EBDE0B681', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2758, '2013-10-29 12:56:26', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 20CD93A2-B96C-435F-9B4C-17B941DE4AEE', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2759, '2013-10-29 13:01:27', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"DDC47DC6-EEE0-4570-855B-7F282C0C0E3C"}'),
	(2760, '2013-10-29 13:01:27', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"C1B3E3C2-04A4-459A-BE25-96E25DE33890"}'),
	(2761, '2013-10-29 13:20:17', 67, 'domus_action_error', 'Callback object not found for returning_guid : 78F4C21C-7F39-42FD-ACE0-57CD89DDB4FF', '{}'),
	(2762, '2013-10-29 13:20:18', 67, 'domus_action_error', 'Callback object not found for returning_guid : 78F4C21C-7F39-42FD-ACE0-57CD89DDB4FF', '{}'),
	(2763, '2013-10-29 13:25:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : D2C3059E-5581-4447-9B25-7697A21B156E', '{}'),
	(2764, '2013-10-29 13:25:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : D2C3059E-5581-4447-9B25-7697A21B156E', '{}'),
	(2765, '2013-10-29 13:30:07', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 2E6C5110-0FEB-4792-8C20-999FF328FAF0', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2766, '2013-10-29 13:30:07', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 9E45CBB5-7B20-4927-BCCC-70879FEF82CD', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2767, '2013-10-29 13:40:07', 67, 'client_timeout', 'A timeout occoured when calling an action: GetSuggestions. GUID : 177FECFF-2605-4671-A97F-548354677178', '{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"}'),
	(2768, '2013-10-29 13:44:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : ACDD8624-6BC7-47A6-90DC-3A94AC7B341D', '{}'),
	(2769, '2013-10-29 13:44:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : ACDD8624-6BC7-47A6-90DC-3A94AC7B341D', '{}'),
	(2770, '2013-10-29 13:49:03', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 76C0C8FA-E084-45E2-BE24-05B1A5389B2D', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2771, '2013-10-29 13:49:03', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6E057DC7-5629-4177-B946-7950D8E89B84', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2772, '2013-10-29 13:54:04', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"7145E978-83A0-496B-BC78-9C2F2DA61BD1"}'),
	(2773, '2013-10-29 13:54:04', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"98ED0A50-CE51-4018-937D-1AFEAE082493"}'),
	(2774, '2013-10-29 13:55:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5FE74C16-F194-460C-B63C-A56C80445C7C', '{}'),
	(2775, '2013-10-29 13:55:28', 67, 'domus_action_error', 'Callback object not found for returning_guid : 5FE74C16-F194-460C-B63C-A56C80445C7C', '{}'),
	(2776, '2013-10-29 14:00:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : F9C2FEE3-6BAD-4A4C-9064-92AC180C3A5A', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2777, '2013-10-29 14:00:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1F4750DC-3612-4167-BEFA-B3EB715E5D21', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2778, '2013-10-29 14:02:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 259E0F52-3D63-4F7E-8A7C-73C6202B7E9E', '{}'),
	(2779, '2013-10-29 14:02:00', 67, 'domus_action_error', 'Callback object not found for returning_guid : 259E0F52-3D63-4F7E-8A7C-73C6202B7E9E', '{}'),
	(2780, '2013-10-29 14:06:45', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9B99DD5C-4308-40FD-A655-8196838EBED9', '{}'),
	(2781, '2013-10-29 14:06:45', 67, 'domus_action_error', 'Callback object not found for returning_guid : 9B99DD5C-4308-40FD-A655-8196838EBED9', '{}'),
	(2782, '2013-10-29 14:07:07', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3E96729E-761C-4FD8-80FF-A6F5862688E6', '{}'),
	(2783, '2013-10-29 14:07:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 3E96729E-761C-4FD8-80FF-A6F5862688E6', '{}'),
	(2784, '2013-10-29 14:07:15', 67, 'domus_action_error', 'Callback object not found for returning_guid : B7988626-183E-4422-AC55-A84108CFDEB2', '{}'),
	(2785, '2013-10-29 14:07:15', 67, 'domus_action_error', 'Callback object not found for returning_guid : B7988626-183E-4422-AC55-A84108CFDEB2', '{}'),
	(2786, '2013-10-29 14:08:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D0FD7BDA-841E-4F99-849F-AC6E7AFB12D3', '{}'),
	(2787, '2013-10-29 14:08:20', 67, 'domus_action_error', 'Callback object not found for returning_guid : D0FD7BDA-841E-4F99-849F-AC6E7AFB12D3', '{}'),
	(2788, '2013-10-29 14:08:38', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75A9293B-31FD-4A1D-832A-8069054C24BC', '{}'),
	(2789, '2013-10-29 14:08:38', 67, 'domus_action_error', 'Callback object not found for returning_guid : 75A9293B-31FD-4A1D-832A-8069054C24BC', '{}'),
	(2790, '2013-10-29 14:12:14', 67, 'domus_action_error', 'Callback object not found for returning_guid : B2ED897E-9223-477C-AF4E-530628B02D55', '{}'),
	(2791, '2013-10-29 14:12:15', 67, 'domus_action_error', 'Callback object not found for returning_guid : B2ED897E-9223-477C-AF4E-530628B02D55', '{}'),
	(2792, '2013-10-29 14:14:54', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"71EA46B9-1D8B-40F5-BE61-DB000BC096DE"}'),
	(2793, '2013-10-29 14:14:55', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys task priority","version":"0/0/0","date_created":1372846552,"status":"public","description":"Removes tasks that have been completed and orders the results by the take value that user sky has given the main value","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_status_takes_fetched = false;\\r\\n    \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n    \\r\\n    var calculate_ready = false;  \\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var sky_status_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;  \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {   \\r\\nconsole.debug(data);        \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        } \\r\\n    };\\r\\n    \\r\\n    var onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort_value = 0;\\r\\n        var post_id = post.post_id;   \\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort_value = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort_value = 0;\\r\\n        }\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\r\\n        if (isNaN(status_value) === false) {\\r\\n            if (status_value === 3) {\\r\\n                sort_value = -10000;\\r\\n            }\\r\\n        }      \\r\\n        BabblingBrook.Filter.processNextPost(sort_value);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    \\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);              \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post\\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];         \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=6\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"71EA46B9-1D8B-40F5-BE61-DB000BC096DE"},"request_guid":"702BDA4F-D237-46F3-811E-821442B19DC5"}'),
	(2794, '2013-10-29 14:14:55', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json","priority":10,"name":"skys task priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"DBAEE575-EC62-411A-A6DA-99BC2C861916"}'),
	(2795, '2013-10-29 14:14:55', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json","priority":10,"name":"skys task priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"63699406-3941-4B46-A18B-E15C319F2EF5"}'),
	(2796, '2013-10-29 14:38:44', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D497BB57-3B25-4029-8BF1-CA8A5B0CBFA6"}'),
	(2797, '2013-10-29 14:38:44', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"90060FC8-296E-418C-B7AA-C9E0E2FD2663"}'),
	(2798, '2013-10-29 14:44:32', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"4CD5A34F-34A0-4273-80CC-6B009908526F"}'),
	(2799, '2013-10-29 14:44:32', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/comments/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10331","user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"4CD5A34F-34A0-4273-80CC-6B009908526F"},"request_guid":"3EEC38E0-42EC-4DA6-9742-F727CD819F65"}'),
	(2800, '2013-10-29 14:44:32', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/sky/stream/comments/0/0/0/json","post_id":"10331","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","name":"skys priority"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":180,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"7F650134-276F-4DE2-ACA8-E9D7A6A21F25"}'),
	(2801, '2013-10-29 15:00:33', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"CB76D51B-2652-4144-93C3-2B9838FC76CB"}'),
	(2802, '2013-10-29 15:00:33', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10225","user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"CB76D51B-2652-4144-93C3-2B9838FC76CB"},"request_guid":"D79418C6-4732-403C-9BE3-D32FEA1D4198"}'),
	(2803, '2013-10-29 15:00:33', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","post_id":"10225","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","name":"skys priority"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":180,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"8D0FAE81-A6BC-431C-90C6-0BA4109B52DE"}'),
	(2804, '2013-10-29 15:06:58', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"FE2F67C1-C640-4672-ABA4-1660877E58A3"}'),
	(2805, '2013-10-29 15:06:58', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10225","user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"FE2F67C1-C640-4672-ABA4-1660877E58A3"},"request_guid":"1F64B3A4-D697-4C93-876C-A4849F8E804C"}'),
	(2806, '2013-10-29 15:06:58', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","post_id":"10225","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","name":"skys priority"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":180,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"81261657-1E2D-43F4-AC73-45757FCC28EB"}'),
	(2807, '2013-10-29 15:16:38', 66, 'GetPosts_failed_block_number_missing', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"6F98756F-25B2-4A61-B462-117388A9F737"}'),
	(2808, '2013-10-29 15:16:38', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"tree","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"post_id":"10225","user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_failed_block_number_missing","request_guid":"6F98756F-25B2-4A61-B462-117388A9F737"},"request_guid":"F4EFB467-9C77-4905-AA37-7A1AE72C543F"}'),
	(2809, '2013-10-29 15:16:38', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","post_id":"10225","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","name":"skys priority"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":180,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"98B08DF4-29D8-40AF-B4A9-EEBED06000DF"}'),
	(2810, '2013-10-29 15:23:33', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D902E07B-93A0-4F49-8A63-FE4CE5060699"}'),
	(2811, '2013-10-29 15:23:33', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"C1DE52F4-EC9E-4953-9196-5C3E8F5129A7"}'),
	(2812, '2013-10-29 15:42:50', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","post_id":"10225","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","name":"skys priority"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":180,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"EC251E26-63CB-49D5-9C57-5C3F3865DE4B"}'),
	(2813, '2013-10-29 15:44:46', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"C3EB02E0-7900-404C-AF06-A604FCE62A76"}'),
	(2814, '2013-10-29 15:44:46', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"BDFD629A-0E7B-440A-88BB-D197E8E29F9F"}'),
	(2815, '2013-10-29 16:04:04', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"tree","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","post_id":"10225","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","name":"skys priority"},"moderation_rings":[{"url":"cobaltcascade.localhost/test ring","moderated":true}],"refresh_frequency":180,"update":true,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"097327D8-362D-4984-8A7F-00548AB50A33"}'),
	(2816, '2013-10-29 16:06:01', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"55659E5C-8984-4153-9E27-FA98DD945ECB"}'),
	(2817, '2013-10-29 16:06:01', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"029A9AD5-9E7F-4E7F-80B0-20E650A3F2C0"}'),
	(2818, '2013-10-30 15:48:24', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : 96EE6DFC-9A04-40CD-8338-0EA3CEA2B8B6', '{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"}}'),
	(2819, '2013-10-30 15:48:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 29D0B040-2860-44A7-B617-5B69B2102EB7', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2820, '2013-10-30 15:48:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 94B0C552-405E-4411-B048-9E9D3F6C26D2', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2821, '2013-10-30 15:48:24', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 93A38C38-E23D-4912-B053-7E518557F281', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":10,"name":"test reverse datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2822, '2013-10-30 15:48:25', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : D923896A-F00B-44E6-84E9-35A4EBC76390', '{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"}}'),
	(2823, '2013-10-30 15:58:24', 67, 'client_timeout', 'A timeout occoured when calling an action: GetSuggestions. GUID : EFAC0CA1-4FD3-4EE4-BB58-13FE81CB1AEF', '{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"}'),
	(2824, '2013-10-30 16:32:56', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"747F9FE0-71F4-4F93-86EF-588EA0727DD2"}'),
	(2825, '2013-10-30 16:33:04', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"B4B6DF51-4122-4E6C-92FB-B8BAF4416954"}'),
	(2826, '2013-10-30 16:33:04', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"B4B6DF51-4122-4E6C-92FB-B8BAF4416954"},"request_guid":"5B07192C-8CA1-4C8D-9F1F-539D7E5BDE29"}'),
	(2827, '2013-10-30 16:33:04', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"1AD8502A-AE48-417B-ADD1-731E20273FBC"}'),
	(2828, '2013-10-30 16:33:04', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"7D569082-BB16-45DE-9251-62C3F155943D"}'),
	(2829, '2013-10-30 16:33:05', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"17470317-58A7-4777-8488-BE3755315862"}'),
	(2830, '2013-10-30 16:33:05', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test reverse datesort","version":"0/0/0","date_created":1320743488,"status":"public","description":"Sort items in reverse order","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var sort = 10000000000 - post.timestamp;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"17470317-58A7-4777-8488-BE3755315862"},"request_guid":"893F67F7-CFD4-41D7-B3DE-BA453B21196A"}'),
	(2831, '2013-10-30 16:33:05', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":10,"name":"test reverse datesort"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"D036B9F2-204B-403F-88C2-9EC1179A904A"}'),
	(2832, '2013-10-31 07:13:24', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"7D8366FE-1079-4573-A735-F0EDA1A1158A"}'),
	(2833, '2013-10-31 07:13:24', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"5E1BC106-C8CA-4C3F-A139-84143C4F4CC2"}'),
	(2834, '2013-10-31 07:13:25', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"5E1BC106-C8CA-4C3F-A139-84143C4F4CC2"},"request_guid":"DB2B0E5A-DB2B-4876-8DE2-C98F54D1C0AD"}'),
	(2835, '2013-10-31 07:13:25', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"FBBC1E25-F501-4829-BC0A-C66B784015AC"}'),
	(2836, '2013-10-31 07:13:25', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"EC4DFDDC-68F6-4A75-88EE-EB3152784CB9"}'),
	(2837, '2013-10-31 07:13:25', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"86D84B44-2169-4B57-8B94-55F67F8A407E"}'),
	(2838, '2013-10-31 07:13:26', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"newest","version":"0/0/0","date_created":1371201607,"status":"public","description":"Sort items by date, with the newest first.","js":"function () {\\r\\n\\tvar main = function (post) {\\r\\n      var sort_value = post.timestamp;\\r\\n      BabblingBrook.Filter.processNextPost(sort_value);\\r\\n\\t};\\r\\n  \\r\\n\\treturn {\\r\\n      main : main\\r\\n\\t};\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"86D84B44-2169-4B57-8B94-55F67F8A407E"},"request_guid":"CC8075FD-BFCE-4838-954B-BC8ED8F8C8C5"}'),
	(2839, '2013-10-31 07:13:26', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"0E95C044-9125-40C8-85E2-62E3DFD6F589"}'),
	(2840, '2013-10-31 07:13:34', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"53059286-15ED-4D0A-B97A-12B574E6E975"}'),
	(2841, '2013-10-31 07:13:43', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"71F0515A-BF17-4BF0-A8E0-17D2A76857FC"}'),
	(2842, '2013-10-31 07:13:43', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"71F0515A-BF17-4BF0-A8E0-17D2A76857FC"},"request_guid":"A7EA26E8-FFEC-4F51-A44B-EB304CC76AE0"}'),
	(2843, '2013-10-31 07:13:43', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"156857A4-416E-4812-992C-7FFF09C5EDFE"}'),
	(2844, '2013-10-31 07:13:43', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"CCFD8496-EE12-4365-A0E0-490CE73372F1"}'),
	(2845, '2013-10-31 07:13:43', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"13AF2412-C82D-4699-981E-7C63D7F0ED4B"}'),
	(2846, '2013-10-31 07:13:44', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"newest","version":"0/0/0","date_created":1371201607,"status":"public","description":"Sort items by date, with the newest first.","js":"function () {\\r\\n\\tvar main = function (post) {\\r\\n      var sort_value = post.timestamp;\\r\\n      BabblingBrook.Filter.processNextPost(sort_value);\\r\\n\\t};\\r\\n  \\r\\n\\treturn {\\r\\n      main : main\\r\\n\\t};\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"13AF2412-C82D-4699-981E-7C63D7F0ED4B"},"request_guid":"1B4AC56A-84F3-42F3-849A-BBA6EC473497"}'),
	(2847, '2013-10-31 07:13:44', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"7E710F58-5E37-4BB8-B348-B640EBFFC0B7"}'),
	(2848, '2013-10-31 07:18:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"F325A278-4146-48D6-A501-5FC31E365FA0"}'),
	(2849, '2013-10-31 07:23:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"F15C3C7D-CC54-4DA6-9C54-AD5A35C6C612"}'),
	(2850, '2013-10-31 07:23:33', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"25EF0EED-C525-4DEA-BAFA-F0ECE5EDF7FD"}'),
	(2851, '2013-10-31 07:23:33', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"7087F272-4027-4D30-8E97-DE4262371547"}'),
	(2852, '2013-10-31 07:28:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"926C9BEB-532A-43CB-9930-46C8BADAACD7"}'),
	(2853, '2013-10-31 07:38:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"FE06A966-17D4-46E3-B863-EA9162AE1DF7"}'),
	(2854, '2013-10-31 07:43:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"67EC6BC2-924C-41DE-BA30-9F38242CAF98"}'),
	(2855, '2013-10-31 07:48:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"B90D69B4-04D6-4450-BAC8-1A10791264D0"}'),
	(2856, '2013-10-31 07:53:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"2BC9EF89-BC89-4D60-A598-B9D6B4671F78"}'),
	(2857, '2013-10-31 07:58:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"A9EF1C48-CF94-4B05-96A3-BCA5AD2D6411"}'),
	(2858, '2013-10-31 08:03:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"79054509-B4DE-4BBC-A8B6-67727BEAB6CF"}'),
	(2859, '2013-10-31 08:08:32', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"51283B8B-3BDE-40EC-B13D-5C77996E6ED8"}'),
	(2860, '2013-10-31 08:10:27', 65, 'StoreOwnersStreamSortResults_post_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"StoreOwnersStreamSortResults","request_data":{"posts":[{"post_id":"10226","score":"1381138458"},{"post_id":"10225","score":"1381137926"}],"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"},"filter_rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"newest","version":"latest/latest/latest"}},"error_code":"StoreOwnersStreamSortResults_post_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/storeownersstreamsortresults Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : PHP Error."},"request_guid":"B8071ACE-1E9C-4AF4-9D4D-07813E80A5DF"}'),
	(2861, '2013-10-31 08:10:27', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"E27D0865-3F69-4BD7-8910-4966D92B8B30"}'),
	(2862, '2013-10-31 08:10:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : E27D0865-3F69-4BD7-8910-4966D92B8B30', '{}'),
	(2863, '2013-10-31 08:10:27', 65, 'StoreOwnersStreamSortResults_post_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"StoreOwnersStreamSortResults","request_data":{"posts":[{"post_id":"10225","score":"13"},{"post_id":"10226","score":"9"}],"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"},"filter_rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"latest/latest/latest"}},"error_code":"StoreOwnersStreamSortResults_post_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/storeownersstreamsortresults Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : PHP Error."},"request_guid":"1FDF793F-B5A4-4298-980C-6D3557AD9F58"}'),
	(2864, '2013-10-31 08:10:27', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"39BCC960-E7C4-4C3C-B3DD-E1D2788D223F"}'),
	(2865, '2013-10-31 08:10:27', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"6F6C7BE7-A5AA-47B7-8816-08A8DECFADFC"}'),
	(2866, '2013-10-31 08:10:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : 39BCC960-E7C4-4C3C-B3DD-E1D2788D223F', '{}'),
	(2867, '2013-10-31 08:10:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6F6C7BE7-A5AA-47B7-8816-08A8DECFADFC', '{}'),
	(2868, '2013-10-31 08:20:18', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"2A61E234-D3BE-483D-8C78-42053FABF7E4"}'),
	(2869, '2013-10-31 08:20:18', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"71658B55-C5FA-4F11-849A-F8955D87BF31"}'),
	(2870, '2013-10-31 08:23:31', 65, 'StoreOwnersStreamSortResults_post_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"StoreOwnersStreamSortResults","request_data":{"posts":[{"post_id":"10226","score":"1381138458"},{"post_id":"10225","score":"1381137926"}],"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"},"filter_rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"newest","version":"latest/latest/latest"}},"error_code":"StoreOwnersStreamSortResults_post_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/storeownersstreamsortresults Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : PHP Error."},"request_guid":"A7A3D7AB-729C-491F-9D44-2510040EC8A3"}'),
	(2871, '2013-10-31 08:23:31', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"FF086E9F-AD8B-4400-BB60-8408D7A2E515"}'),
	(2872, '2013-10-31 08:23:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : FF086E9F-AD8B-4400-BB60-8408D7A2E515', '{}'),
	(2873, '2013-10-31 08:23:31', 65, 'StoreOwnersStreamSortResults_post_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"StoreOwnersStreamSortResults","request_data":{"posts":[{"post_id":"10225","score":"13"},{"post_id":"10226","score":"9"}],"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"},"filter_rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"latest/latest/latest"}},"error_code":"StoreOwnersStreamSortResults_post_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/storeownersstreamsortresults Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : PHP Error."},"request_guid":"95CFAAE5-3ACC-4C9C-95AF-DED15AF53898"}'),
	(2874, '2013-10-31 08:23:31', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"FB525903-1883-4139-9167-6245F722557C"}'),
	(2875, '2013-10-31 08:23:31', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"DBBC3B20-F796-413B-B4CD-04FD16F34448"}'),
	(2876, '2013-10-31 08:23:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : FB525903-1883-4139-9167-6245F722557C', '{}'),
	(2877, '2013-10-31 08:23:31', 67, 'domus_action_error', 'Callback object not found for returning_guid : DBBC3B20-F796-413B-B4CD-04FD16F34448', '{}'),
	(2878, '2013-10-31 08:47:37', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"660B8DD5-99E0-44C6-BFFE-2DB100812C15"}'),
	(2879, '2013-10-31 08:47:37', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"6FB458A7-FC5F-40B7-A5D2-63FA23CF4B39"}'),
	(2880, '2013-10-31 09:11:22', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"75FC66B4-54EC-412D-BBD4-23B87603BD54"},"request_guid":"E69A86CF-CADD-47EB-84AB-0360C3E46C11"}'),
	(2881, '2013-10-31 09:11:22', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"75FC66B4-54EC-412D-BBD4-23B87603BD54"}'),
	(2882, '2013-10-31 09:11:22', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","name":"skys priority"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"A99F94BA-81BE-4C7F-B3C0-124691BF6CA0"}'),
	(2883, '2013-10-31 09:29:02', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"E27B5F7A-13A4-48B6-BC04-97F23FB38469"}'),
	(2884, '2013-10-31 09:29:02', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"EA7E4FDF-0E97-4570-8CEE-C4A84B32194B"}'),
	(2885, '2013-11-01 10:16:53', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":3,"block_numbers":[0],"client_timeout":1383301042514},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CDbException."},"request_guid":"3B2210B8-155D-41BD-80AB-7BBA18B79874"}'),
	(2886, '2013-11-01 10:16:53', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":3,"block_numbers":[0],"client_timeout":1383301042514},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CDbException."},"request_guid":"3B2210B8-155D-41BD-80AB-7BBA18B79874"},"request_guid":"AD5CD8C8-EE8F-4E29-ACF3-D68531499263"}'),
	(2887, '2013-11-01 10:16:53', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":3,"block_numbers":[0],"client_timeout":1383301042514},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CDbException."},"request_guid":"3B2210B8-155D-41BD-80AB-7BBA18B79874"},"request_guid":"AD5CD8C8-EE8F-4E29-ACF3-D68531499263"},"request_guid":"9C3600E3-FF8B-4BF7-9D6C-7341758EC879"}'),
	(2888, '2013-11-01 10:16:54', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","name":"skys priority"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3B23787A-8DBA-4823-B539-E5DC85C1CBFA"}'),
	(2889, '2013-11-01 10:18:49', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"15B5EA21-CD78-49C5-BFE3-A31A882D6891"}'),
	(2890, '2013-11-01 10:18:50', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"C882CE95-1FF7-4A84-9F52-C775BAD88038"}'),
	(2891, '2013-11-01 10:23:49', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"E8CB876D-9E19-4A8D-88F4-7378E9F4145B"}'),
	(2892, '2013-11-01 10:23:49', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"799EC7EF-BC34-495C-9931-91DC4972C984"}'),
	(2893, '2013-11-01 10:23:49', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"DDBC409E-837D-4B00-A7FB-C47A6D2B01C2"}'),
	(2894, '2013-11-01 10:23:50', 65, 'scientia_server_fetch_data', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchData","request_data":{"url":"cobaltcascade.localhost/sky/clientdata/getdeclinedsuggestions/?client_domain=cobaltcascade.localhost&type=undefined","data":{}},"error_code":"scientia_server_fetch_data","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : http://scientia.cobaltcascade.localhost/sky/clientdata/getdeclinedsuggestions/?client_domain=cobaltcascade.localhost&type=undefined Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CDbException."},"request_guid":"3B66EEDE-8D65-4DB5-8A2A-125E29CA5B04"}'),
	(2895, '2013-11-01 10:23:50', 66, 'GetData_failed', 'Domus domain sending an error back to suggestion.cobaltcascade.localhost domain for request:', '{"action":"GetMiscData","request_data":{"url":"cobaltcascade.localhost/sky/clientdata/getdeclinedsuggestions/?client_domain=cobaltcascade.localhost&type=undefined"},"error_code":"GetData_failed","error_data":"scientia_server_fetch_data","request_guid":"23DC74A9-DA34-4EA6-92FA-053BF832B817"}'),
	(2896, '2013-11-01 10:23:50', 157, 'rhythm_getMiscData_error', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"rhythm_getMiscData_error","error_data":"GetData_failed","request_guid":"799EC7EF-BC34-495C-9931-91DC4972C984"}'),
	(2897, '2013-11-01 10:28:49', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"1920EF1F-8F40-4BEF-A3F9-B74ECC405488"}'),
	(2898, '2013-11-01 10:33:49', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"EE753491-1CCD-46AE-8DD6-34F46F02C642"}'),
	(2899, '2013-11-01 10:38:49', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"DB7EF81C-8FBE-4C1B-9D08-0658E6B70E2F"}'),
	(2900, '2013-11-01 10:43:49', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"31A0A3D6-8700-446E-9A2D-F1CFA2B5DADA"}'),
	(2901, '2013-11-04 11:40:02', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"2BB142D4-4EA6-400C-BFD4-DDD9F533735D"}'),
	(2902, '2013-11-04 11:40:02', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"0F0A81AA-9710-4FE5-8072-1C7B2CAC6787"}'),
	(2903, '2013-11-05 09:46:35', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"5C4B0C49-A30C-4E11-B41E-38C4076DD1F5"}'),
	(2904, '2013-11-05 09:46:35', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"4C974EAE-477A-4456-B48D-FBCA262B1EFB"}'),
	(2905, '2013-11-05 10:04:51', 65, 'scientia_server_get_posts', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1383645919345},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/getpostsblock Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"B0F55BA1-F287-4D97-AB9B-B5E8FD8671C2"}'),
	(2906, '2013-11-05 10:04:51', 66, 'scientia_server_get_posts', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1383645919345},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/getpostsblock Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"B0F55BA1-F287-4D97-AB9B-B5E8FD8671C2"},"request_guid":"C185A4FB-20D8-4647-9E71-4CC8078BC1B0"}'),
	(2907, '2013-11-05 10:04:51', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1383645919345},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/getpostsblock Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"B0F55BA1-F287-4D97-AB9B-B5E8FD8671C2"},"request_guid":"C185A4FB-20D8-4647-9E71-4CC8078BC1B0"},"request_guid":"D4F78A73-6FE9-4042-BA95-088F7DADB966"}'),
	(2908, '2013-11-05 10:04:57', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"46C09A84-A4C1-4FA8-8DA6-111C674B60AB"}'),
	(2909, '2013-11-05 10:04:58', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"195DFB0A-5C1F-473C-9168-080A1CFA3590"}'),
	(2910, '2013-11-05 10:35:10', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"974378A4-E4C3-4900-B9B9-94483174C683"}'),
	(2911, '2013-11-05 10:35:10', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"EA1F1E79-DDC5-4F96-B5D6-B6C9BD018136"}'),
	(2912, '2013-11-05 11:18:51', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"1B82E29E-5129-4494-9FA0-418F49245476"}'),
	(2913, '2013-11-05 11:18:51', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"B9897EE6-AD92-4A00-B1D2-896CDAF28DB2"}'),
	(2914, '2013-11-05 11:43:47', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"3196E374-D552-4F95-A0B5-6779A9EDE076"}'),
	(2915, '2013-11-05 11:43:47', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"F4FF8DF0-23AD-4B1A-B16A-A042A231F560"}'),
	(2916, '2013-11-05 12:24:19', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"E5620516-55E2-46B5-984F-E90A36E98BF2"}'),
	(2917, '2013-11-05 12:24:19', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"D9DDB798-150F-4945-BD51-7E862FE5B9AE"}'),
	(2918, '2013-11-05 13:36:57', 65, 'scientia_server_fetch_data', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchData","request_data":{"url":"cobaltcascade.localhost/data/getkindreddata?username=sky","data":{},"https":false},"error_code":"scientia_server_fetch_data","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : http://scientia.cobaltcascade.localhost/data/getkindreddata?username=sky Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"C27CBD76-87EF-4B0A-9001-330D2DC27D18"}'),
	(2919, '2013-11-05 13:57:04', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"A81E8AD4-279C-4C44-8A4C-C7789F418B30"}'),
	(2920, '2013-11-05 13:57:05', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"8B748380-8F73-4BFD-91F4-83F519D6FE11"}'),
	(2921, '2013-11-05 14:09:28', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"DEB39151-0F8B-4D6E-9A58-CC020439414C"}'),
	(2922, '2013-11-05 14:09:28', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"24CA3E3D-0757-443D-8024-FBB718686F65"}'),
	(2923, '2013-11-05 14:47:22', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"637630DE-59BB-4E39-B19F-6526D0BDCC0F"}'),
	(2924, '2013-11-05 14:47:22', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"FFD1DDF1-AE37-4D53-8B2C-ADCCF22BA5A4"}'),
	(2925, '2013-11-05 15:25:57', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10226"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"BC33DE06-4AB5-427F-83FE-24336C75950E"}'),
	(2926, '2013-11-05 15:46:18', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10095"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"C6444C17-4B97-4672-B8BE-6C269AAC62CD"}'),
	(2927, '2013-11-05 15:46:19', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10089"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"39C8EFE8-4D9C-4BE7-864C-5B35161E09C2"}'),
	(2928, '2013-11-05 15:46:19', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10080"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"0905CC7E-5B4F-402C-A61C-B00503E1B9BD"}'),
	(2929, '2013-11-05 15:46:23', 65, 'scientia_server_fetch_data', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchData","request_data":{"url":"cobaltcascade.localhost/data/getkindreddata?username=sky","data":{},"https":false},"error_code":"scientia_server_fetch_data","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : http://scientia.cobaltcascade.localhost/data/getkindreddata?username=sky Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"086FCE41-DDC3-4E2C-88A0-7CD3D01D5B8E"}'),
	(2930, '2013-11-05 15:53:22', 65, 'StoreOwnersStreamSortResults_post_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"StoreOwnersStreamSortResults","request_data":{"posts":[{"post_id":"10041","score":"6"},{"post_id":"10130","score":"3"},{"post_id":"10084","score":"2"},{"post_id":"10064","score":"1"},{"post_id":"10048","score":"1"},{"post_id":"10038","score":"1"},{"post_id":"10265","score":0},{"post_id":"10264","score":0},{"post_id":"10263","score":0},{"post_id":"10261","score":0},{"post_id":"10232","score":0},{"post_id":"10231","score":0},{"post_id":"10145","score":0},{"post_id":"10144","score":0},{"post_id":"10110","score":0},{"post_id":"10109","score":0},{"post_id":"10097","score":0},{"post_id":"10092","score":0},{"post_id":"10091","score":0},{"post_id":"10090","score":0},{"post_id":"10088","score":0},{"post_id":"10087","score":0},{"post_id":"10086","score":0},{"post_id":"10065","score":0},{"post_id":"10063","score":0},{"post_id":"10060","score":0},{"post_id":"10059","score":0},{"post_id":"10052","score":0},{"post_id":"10047","score":0},{"post_id":"10043","score":0},{"post_id":"10040","score":0},{"post_id":"10036","score":0},{"post_id":"10021","score":0}],"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"tasks","version":"latest/latest/latest"},"filter_rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys task priority","version":{"major":"latest","minor":"latest","patch":"latest"}}},"error_code":"StoreOwnersStreamSortResults_post_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/storeownersstreamsortresults Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"E425FB76-2D83-42AB-AA68-5106E4A2F680"}'),
	(2931, '2013-11-05 15:53:23', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json","priority":10,"name":"skys task priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"494A00E2-6485-4386-9015-A83494097813"}'),
	(2932, '2013-11-05 15:53:23', 67, 'domus_action_error', 'Callback object not found for returning_guid : 494A00E2-6485-4386-9015-A83494097813', '{}'),
	(2933, '2013-11-05 16:00:26', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"babbling brook alpha tasks","version":"0/0/0","date_created":1380721587,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"3E603528-BAFE-4A4F-AF1B-C317378D17A4"}'),
	(2934, '2013-11-05 16:00:26', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/babbling brook alpha tasks/latest/latest/latest/json","name":"babbling brook alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"C86D8A38-F5F2-45C2-8588-CFDCBF69E6D9"}'),
	(2935, '2013-11-05 16:08:12', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":true},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"E54BFFB0-A31F-4480-807C-562DACDA5936"}'),
	(2936, '2013-11-05 16:08:12', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys task priority","version":"0/0/0","date_created":1372846552,"status":"public","description":"Removes tasks that have been completed and orders the results by the take value that user sky has given the main value","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_status_takes_fetched = false;\\r\\n    \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n    \\r\\n    var calculate_ready = false;  \\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var sky_status_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;  \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {   \\r\\nconsole.debug(data);        \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        } \\r\\n    };\\r\\n    \\r\\n    var onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort_value = 0;\\r\\n        var post_id = post.post_id;   \\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort_value = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort_value = 0;\\r\\n        }\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\r\\n        if (isNaN(status_value) === false) {\\r\\n            if (status_value === 3) {\\r\\n                sort_value = -10000;\\r\\n            }\\r\\n        }      \\r\\n        BabblingBrook.Filter.processNextPost(sort_value);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    \\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);              \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post\\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];         \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=6\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":true},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"E54BFFB0-A31F-4480-807C-562DACDA5936"},"request_guid":"347C8E80-B017-4269-9450-6FC1967D7B0C"}'),
	(2937, '2013-11-05 16:08:12', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json","priority":10,"name":"skys task priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"F9ABA42C-834B-4E68-AB54-0AEBB8CA3DBF"}'),
	(2938, '2013-11-05 16:08:12', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json","priority":10,"name":"skys task priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"12DEAB07-0780-4437-9230-2C4B7BE89FD0"}'),
	(2939, '2013-11-05 16:12:07', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"babbling brook alpha tasks","version":"0/0/0","date_created":1380721587,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"E80C26AF-4A82-49E4-BF43-0EC80534D136"}'),
	(2940, '2013-11-05 16:12:07', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/babbling brook alpha tasks/latest/latest/latest/json","name":"babbling brook alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"12BA003A-375F-4EA5-AF65-0ACA2F58887B"}'),
	(2941, '2013-11-05 16:36:12', 67, 'client_timeout', 'A timeout occoured when calling an action: GetSuggestions. GUID : 562BBC80-38D0-4A09-8F47-168C5379CD63', '{"type":"stream_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json"}'),
	(2942, '2013-11-05 16:47:04', 67, 'client_timeout', 'A timeout occoured when calling an action: GetSuggestions. GUID : CCF09C66-CD83-4ABE-8545-159D76B4E22B', '{"type":"stream_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json"}'),
	(2943, '2013-11-05 17:11:06', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"babbling brook alpha tasks","version":"0/0/0","date_created":1380721587,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"A6771568-678D-4E74-848B-04BE1283368B"}'),
	(2944, '2013-11-05 17:11:06', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/babbling brook alpha tasks/latest/latest/latest/json","name":"babbling brook alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"B8EBB37C-CC26-430B-86C3-677A5639A347"}'),
	(2945, '2013-11-05 17:14:54', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"babbling brook alpha tasks","version":"0/0/0","date_created":1380721587,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"C3A97B2C-86AF-4622-86C4-90CD9B34488A"}'),
	(2946, '2013-11-05 17:14:54', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/babbling brook alpha tasks/latest/latest/latest/json","name":"babbling brook alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"E03E1DB3-061B-4EC9-B35B-42FB8406C92F"}'),
	(2947, '2013-11-06 12:31:33', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"7A0DDAF8-350A-4448-B15B-F5EECD04688C"}'),
	(2948, '2013-11-06 12:31:33', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"887C926C-7D25-4C6B-8D42-C899E7F5102E"}'),
	(2949, '2013-11-06 15:54:24', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"F3718414-94D1-4199-BAC6-44F8BEC7643C"}'),
	(2950, '2013-11-06 15:54:24', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"096B4E1E-A929-4EC4-8949-8E9E8D5E34A7"}'),
	(2951, '2013-11-06 16:38:00', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10226"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"5567015E-8A79-41B5-9039-36599FB83755"}'),
	(2952, '2013-11-06 17:40:15', 65, 'scientia_server_fetch_data', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchData","request_data":{"url":"cobaltcascade.localhost/test/usertakesbyuser","data":{"profile_user":"test","start":0,"qty":5,"client_domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"scientia_server_fetch_data","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : http://scientia.cobaltcascade.localhost/test/usertakesbyuser Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"185319D2-31CA-4848-B8BC-3917C32BAD17"}'),
	(2953, '2013-11-06 17:40:15', 65, 'scientia_server_fetch_data', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchData","request_data":{"url":"cobaltcascade.localhost/test/usertakesglobal","data":{"start":1000,"qty":1000,"full_username":"cobaltcascade.localhost/test","client_domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"scientia_server_fetch_data","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : http://scientia.cobaltcascade.localhost/test/usertakesglobal Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"364E0689-3C8E-4122-90FB-99F3CE351E31"}'),
	(2954, '2013-11-06 17:40:15', 66, 'InfoRequest_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"InfoRequest","request_data":{"url":"cobaltcascade.localhost/test/usertakesbyuser","data":{"profile_user":"test","start":0,"qty":5},"https":false},"error_code":"InfoRequest_failed","error_data":"scientia_server_fetch_data","request_guid":"A3A486C1-3799-4EB0-9B33-F6B164036689"}'),
	(2955, '2013-11-06 17:40:15', 66, 'InfoRequest_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"InfoRequest","request_data":{"url":"cobaltcascade.localhost/test/usertakesglobal","data":{"start":1000,"qty":1000,"full_username":"cobaltcascade.localhost/test"},"https":false},"error_code":"InfoRequest_failed","error_data":"scientia_server_fetch_data","request_guid":"655E8525-931B-4400-943E-3D3BC0D9D110"}'),
	(2956, '2013-11-06 17:40:29', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test everything stream","version":"0/0/0"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"8A43C6F7-DBAE-42DE-9E88-D90FE4A5EEC4"}'),
	(2957, '2013-11-06 17:40:29', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1383759658220},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"360FA384-9FB7-4B0C-ADE3-5D2B673511A1"}'),
	(2958, '2013-11-06 17:40:30', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1383759658220},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"360FA384-9FB7-4B0C-ADE3-5D2B673511A1"},"request_guid":"6BBDA41E-47C8-4C8B-9B0B-47E46A21A0F4"}'),
	(2959, '2013-11-06 17:40:30', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1383759658220},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"360FA384-9FB7-4B0C-ADE3-5D2B673511A1"},"request_guid":"6BBDA41E-47C8-4C8B-9B0B-47E46A21A0F4"},"request_guid":"2CCA1F67-0E99-45BC-8F4F-44ACFCEFE625"}'),
	(2960, '2013-11-06 17:40:30', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test everything stream","version":"0/0/0"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"34D5F587-011A-4A76-9BFE-1C7FD93E8263"}'),
	(2961, '2013-11-06 17:40:30', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"76B1B119-E8FA-49CA-9B88-01A258F6255E"}'),
	(2962, '2013-11-06 17:40:31', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test everything stream","version":"0/0/0"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"9D0F37B8-FC0E-4D2C-961C-6B5DF653D782"}'),
	(2963, '2013-11-06 17:40:31', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test everything stream","version":"0/0/0"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"EC432861-3805-48CC-AAAF-54046CB0DE19"}'),
	(2964, '2013-11-06 17:40:31', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"ED15C251-7FD7-433D-AC29-745ED8458A93"}'),
	(2965, '2013-11-06 17:47:12', 65, 'scientia_server_get_posts', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":20,"block_numbers":[0],"client_timeout":1383760059802},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getpostslatest Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"7F87ED39-6EA9-4084-9E39-134AECD31BA7"}'),
	(2966, '2013-11-06 17:47:12', 66, 'scientia_server_get_posts', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":20,"block_numbers":[0],"client_timeout":1383760059802},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getpostslatest Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"7F87ED39-6EA9-4084-9E39-134AECD31BA7"},"request_guid":"DCFE79E6-F792-4824-B9B8-B44A3D8064E6"}'),
	(2967, '2013-11-06 17:47:12', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":20,"block_numbers":[0],"client_timeout":1383760059802},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getpostslatest Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"7F87ED39-6EA9-4084-9E39-134AECD31BA7"},"request_guid":"DCFE79E6-F792-4824-B9B8-B44A3D8064E6"},"request_guid":"6A2823E6-20A3-4FE5-94AE-9874268DB2A8"}'),
	(2968, '2013-11-06 17:47:12', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[],"refresh_frequency":20,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"AB469E9B-B9C6-4A39-BBDE-540B3642CDE7"}'),
	(2969, '2013-11-07 08:01:12', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"A3BB9201-D14A-48C9-8F05-5D4622832010"}'),
	(2970, '2013-11-07 08:01:13', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"C649E9E2-E879-4600-8E75-AC793A06B6CE"}'),
	(2971, '2013-11-07 08:26:06', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"FF771489-B5F2-40FF-9EF8-0F1B0ECCC3C4"}');
INSERT INTO `js_error` (`js_error_id`, `create_date`, `location`, `type`, `message`, `data`) VALUES
	(2972, '2013-11-07 08:26:12', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"EB8D0D86-1B76-4957-8263-8D09B436EBF0"}'),
	(2973, '2013-11-07 09:42:32', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 7B211F96-01E3-45C6-A906-734F902CFBE8', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2974, '2013-11-07 09:42:32', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6474094A-28D8-4FC5-BE67-5E922D2598EE', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2975, '2013-11-07 09:42:32', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 18AA2550-84E6-4939-B7E4-BA5A0BBF40F6', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2976, '2013-11-07 09:47:23', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"83152BA1-B2BE-4293-96CF-AF1A77702D2B"}'),
	(2977, '2013-11-07 09:47:23', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"6977DC6B-90C5-4EA1-B414-896FF56512F8"}'),
	(2978, '2013-11-07 09:58:12', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 95119AA3-2EC3-431B-8998-E992A734D748', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2979, '2013-11-07 09:58:12', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 3B993D7A-F646-4DB4-B55E-96AF241528F9', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2980, '2013-11-07 09:58:12', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : FAACAE8D-3B86-40D8-8715-4C57A1C81E5D', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(2981, '2013-11-07 10:30:49', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"5DEB47DA-D14B-407F-8E9A-7208E33E66CF"}'),
	(2982, '2013-11-07 10:30:55', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"66C27C2A-B67C-490C-8B32-881232C611B4"}'),
	(2983, '2013-11-07 11:19:31', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10393"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10393/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"F03FBC14-9897-475F-AC05-5F6FD847E57E"}'),
	(2984, '2013-11-07 11:37:41', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"A14579ED-6C51-4F40-9A3A-D05153E4A327"}'),
	(2985, '2013-11-07 11:37:41', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"02B4061B-A1F2-4726-BB2E-BA805CF1469D"}'),
	(2986, '2013-11-07 11:51:37', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10401"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10401/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"00EE82A0-E59B-4D36-A19E-0888C94172BA"}'),
	(2987, '2013-11-07 11:56:37', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 045711DB-D9EF-4545-8D50-139DD64FDF5B', '{"domain":"cobaltcascade.localhost","post_id":"10401"}'),
	(2988, '2013-11-07 12:01:18', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D90D0CDD-CEE5-4041-B2DD-9E75BD2CE02E"}'),
	(2989, '2013-11-07 12:01:18', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"7ECAE5DE-06D6-4336-BB5C-701016B98375"}'),
	(2990, '2013-11-07 12:03:32', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10402"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10402/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"D59EF9AE-E0F3-4924-BC82-2F72E43780E8"}'),
	(2991, '2013-11-07 12:10:10', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10405"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10405/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"CB775273-5E91-496A-B6F1-04CACA0B094B"}'),
	(2992, '2013-11-07 12:17:46', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10410"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10410/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"D87AAC7F-AE2B-4885-9DBD-AE9C50B2654C"}'),
	(2993, '2013-11-07 12:25:27', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10413"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10413/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"8725E980-980C-4F4D-A549-EAF01FB62F09"}'),
	(2994, '2013-11-07 12:25:36', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10413"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10413/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"62B69C3D-E307-4C89-8F11-6CA30A1A9E9A"}'),
	(2995, '2013-11-07 12:43:17', 66, 'GetTakes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetTakesForPost","request_data":{"post_id":"10423","post_domain":"cobaltcascade.localhost","post_creation_timestamp":"1383828197"},"error_code":"GetTakes_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/data/getposttakes Domain : domus.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"F7350453-66D1-4C85-B655-9E1FE677E6C0"}'),
	(2996, '2013-11-07 12:57:15', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"37F5E365-7C40-40A8-A4DF-8C6559E5D29C"}'),
	(2997, '2013-11-07 12:57:15', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"27743DEA-EFC5-4477-A9F1-129A6E7E9B84"}'),
	(2998, '2013-11-07 13:10:10', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : FBED88AF-0390-45F8-A722-789ABE44C3DA', '{"domain":"cobaltcascade.localhost","post_id":"10430"}'),
	(2999, '2013-11-07 13:10:51', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10430"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10430/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"08AA5365-22F5-4F76-B1CF-78129D6E19CB"}'),
	(3000, '2013-11-07 13:11:19', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : B71C251C-00BE-41E8-B83B-CFDD8E6A2332', '{"domain":"cobaltcascade.localhost","post_id":"10430"}'),
	(3001, '2013-11-07 13:20:51', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test5","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"3EA3B467-8D06-4ED5-8952-CAAC9A82ECC0"}'),
	(3002, '2013-11-07 13:20:51', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"BBC2B17B-1FAC-4148-82F7-2C09AFE9E7B1"}'),
	(3003, '2013-11-07 14:13:17', 66, 'FilterReady_kindred', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"FilterReady","request_data":{"status":"ready"},"error_code":"FilterReady_kindred","request_guid":"D2A1CE71-F346-4E6A-8AD3-2C0D5B9F579B"}'),
	(3004, '2013-11-07 14:13:17', 66, 'KindredReady_kindred', 'Domus domain sending an error back to kindred.cobaltcascade.localhost domain for request:', '{"action":"KindredReady","request_data":{"status":"ready"},"error_code":"KindredReady_kindred","request_guid":"60BE7A57-7766-4D1F-8DF8-B5E8DB174D39"}'),
	(3005, '2013-11-07 14:13:17', 66, 'SuggestionReady_kindred', 'Domus domain sending an error back to suggestion.cobaltcascade.localhost domain for request:', '{"action":"SuggestionReady","request_data":{"status":"ready"},"error_code":"SuggestionReady_kindred","request_guid":"FC093BD5-8E3A-4EF2-84F9-4B57AE0D26B3"}'),
	(3006, '2013-11-07 14:14:10', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : 227E87FC-3330-486B-8BF9-D53DD79203C9', '{}'),
	(3007, '2013-11-07 14:14:10', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : F115FFD3-29C4-4F95-82EB-DDFCCA815C87', '{}'),
	(3008, '2013-11-07 14:14:10', 66, 'SuggestionReady_kindred', 'Domus domain sending an error back to suggestion.cobaltcascade.localhost domain for request:', '{"action":"SuggestionReady","request_data":{"status":"ready"},"error_code":"SuggestionReady_kindred","request_guid":"65ACC700-DF87-440C-83A5-F1CDEEF97A3F"}'),
	(3009, '2013-11-07 14:14:10', 66, 'FilterReady_kindred', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"FilterReady","request_data":{"status":"ready"},"error_code":"FilterReady_kindred","request_guid":"4CA73DC8-702F-4311-902E-7C7903708FA2"}'),
	(3010, '2013-11-07 14:14:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : 227E87FC-3330-486B-8BF9-D53DD79203C9', '{}'),
	(3011, '2013-11-07 14:14:10', 66, 'KindredReady_kindred', 'Domus domain sending an error back to kindred.cobaltcascade.localhost domain for request:', '{"action":"KindredReady","request_data":{"status":"ready"},"error_code":"KindredReady_kindred","request_guid":"55DE5C69-291B-41EE-AFC4-2E6266AB7C6C"}'),
	(3012, '2013-11-07 14:14:10', 67, 'domus_action_error', 'Callback object not found for returning_guid : F115FFD3-29C4-4F95-82EB-DDFCCA815C87', '{}'),
	(3013, '2013-11-07 14:15:03', 66, 'SuggestionReady_kindred', 'Domus domain sending an error back to suggestion.cobaltcascade.localhost domain for request:', '{"action":"SuggestionReady","request_data":{"status":"ready"},"error_code":"SuggestionReady_kindred","request_guid":"0C718605-ED53-4A9E-93EB-367E49BE22DC"}'),
	(3014, '2013-11-07 14:15:03', 66, 'KindredReady_kindred', 'Domus domain sending an error back to kindred.cobaltcascade.localhost domain for request:', '{"action":"KindredReady","request_data":{"status":"ready"},"error_code":"KindredReady_kindred","request_guid":"1D87AAE8-4C2E-4314-BD12-FF8F72804EA3"}'),
	(3015, '2013-11-07 14:15:22', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : 99965391-DED2-4DEC-8820-EDEBF047690E', '{}'),
	(3016, '2013-11-07 14:15:22', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : 4F7988B8-FCD6-402D-BB79-38FD0A0AB89E', '{}'),
	(3017, '2013-11-07 14:32:55', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test5","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"2C219D31-66A3-4FAA-A860-D7B05046CAE0"}'),
	(3018, '2013-11-07 14:32:55', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"F5C9729B-40C4-41D8-A728-A62C30857E1B"}'),
	(3019, '2013-11-07 14:58:54', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"A825E744-3670-4731-84E9-2FA9583C2EA5"}'),
	(3020, '2013-11-07 14:58:54', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test5","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"71E99094-F7A3-4479-A655-5EB9E4C6AB08"}'),
	(3021, '2013-11-08 06:58:33', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"chat","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"fghfdh fdgh fdgh dfgh fgd hgfd hfgdh fgdh gfd hdf g hdfghdfhdfg"},{"display_order":"2"},{"display_order":"3","text":""}],"private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"C4482B9A-8C41-4C8D-9AC3-96F9729AACCC"}'),
	(3022, '2013-11-08 06:58:33', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"chat","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"fghfdh fdgh fdgh dfgh fgd hgfd hfgdh fgdh gfd hdf g hdfghdfhdfg"},{"display_order":"2"},{"display_order":"3","text":""}],"private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"31FB48B8-FD37-449A-AA70-7EB23EA51D8B"}'),
	(3023, '2013-11-08 06:59:08', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"chat","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"dfghfdhh fgddfgh df hdfh dfhdfgh df hdfh dfh fd dfh fdh fd hdfgh fghfg"},{"display_order":"2"},{"display_order":"3","text":"fgh"}],"private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"69D74AD6-361F-49E6-A4D0-99045AA42813"}'),
	(3024, '2013-11-08 06:59:08', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"chat","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"dfghfdhh fgddfgh df hdfh dfhdfgh df hdfh dfh fd dfh fdh fd hdfgh fghfg"},{"display_order":"2"},{"display_order":"3","text":"fgh"}],"private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"4E4DCC15-7515-4452-B5EB-6A17FD887F05"}'),
	(3025, '2013-11-08 07:08:50', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D34D5FAF-BC71-4F40-8701-94FA7D3EBEB4"}'),
	(3026, '2013-11-08 07:08:50', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"DF1274B4-6857-4F77-B4E6-B76134AA409E"}'),
	(3027, '2013-11-08 07:17:41', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"chat","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"sfasdfasgasdfg sadf saf sd fsa sad fsa fsdf sadf sa fsa fsadfsad fsa "},{"display_order":"2"},{"display_order":"3","text":""}],"private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"71D8A869-A332-4106-8A93-6AAD5FD67696"}'),
	(3028, '2013-11-08 07:17:41', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"chat","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"sfasdfasgasdfg sadf saf sd fsa sad fsa fsdf sadf sa fsa fsadfsad fsa "},{"display_order":"2"},{"display_order":"3","text":""}],"private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"E8D12207-CC6D-4F6F-BB11-15148C6584F6"}'),
	(3029, '2013-11-08 07:25:12', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"comments","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh "},{"display_order":"2"}],"parent_id":"10434","top_parent_id":"10434","private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"DEE5BB52-A263-4157-8BDD-8373CF8E5EA0"}'),
	(3030, '2013-11-08 07:25:12', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"comments","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh fdgh dfgh "},{"display_order":"2"}],"parent_id":"10434","top_parent_id":"10434","private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"3555108E-3439-41B2-AC93-C0DEEC3540D8"}'),
	(3031, '2013-11-08 07:37:07', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10433"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10433/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"F4D441DC-B988-4ED4-BF88-1B80C1C5A0CD"}'),
	(3032, '2013-11-08 07:37:07', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10432"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10432/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"31C803A3-D8DB-4843-B825-B887273B9099"}'),
	(3033, '2013-11-08 07:37:07', 65, 'StoreOwnersStreamSortResults_post_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"StoreOwnersStreamSortResults","request_data":{"posts":[{"post_id":"10429","score":8616171059},{"post_id":"10431","score":8616106428},{"post_id":"10432","score":8616106346},{"post_id":"10433","score":8616106337},{"post_id":"10434","score":8616104505}],"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"chat","version":"latest/latest/latest"},"filter_rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"oldest","version":{"major":"latest","minor":"latest","patch":"latest"}}},"error_code":"StoreOwnersStreamSortResults_post_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/chat/latest/latest/latest/storeownersstreamsortresults Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"CCF522F7-601B-4344-920A-3B1C2C096FA2"}'),
	(3034, '2013-11-08 07:37:08', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/chat/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest/json","priority":11,"name":"oldest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"96D32532-0526-405A-A72B-311812ADF36F"}'),
	(3035, '2013-11-08 07:37:08', 67, 'domus_action_error', 'Callback object not found for returning_guid : 96D32532-0526-405A-A72B-311812ADF36F', '{}'),
	(3036, '2013-11-08 07:44:09', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10429"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"995034CF-0140-48CB-BAAE-54B61F4CEA4B"}'),
	(3037, '2013-11-08 08:04:48', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"451C545E-379F-41D5-BC46-1EA48057CFDE"}'),
	(3038, '2013-11-08 08:04:48', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"8331E4B4-E439-46C8-A0C2-BB8DFEC6627C"}'),
	(3039, '2013-11-08 09:12:22', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"B359A658-D5B5-46A9-AE25-893A273F409B"}'),
	(3040, '2013-11-08 09:12:22', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"D65838CE-8D23-48A8-A771-B29AB51A55B4"}'),
	(3041, '2013-11-08 10:24:01', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"44FEA3F3-FC7D-4D3F-9576-0296E6F669EE"}'),
	(3042, '2013-11-08 10:24:01', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"AFFBBE5D-7F2D-43E7-9E55-8F4416AB32AD"}'),
	(3043, '2013-11-08 13:59:06', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"63985487-D300-4AB8-A915-6B6EB15E0734"}'),
	(3044, '2013-11-08 13:59:06', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"C4B9A31D-BD8A-47A4-AD89-F9FB35B47FC3"}'),
	(3045, '2013-11-08 14:21:28', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"17941CFB-A131-4A71-971A-FDFEF96DA920"}'),
	(3046, '2013-11-08 14:21:28', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"7C80518F-2A3E-4359-B7CE-87F1E6B4CFEF"}'),
	(3047, '2013-11-08 15:28:18', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"F1A44B82-1385-4B8A-9BDA-3612E45C1462"}'),
	(3048, '2013-11-08 15:28:18', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"3FC500E3-F56C-4EAA-BE54-7EF120C03A59"}'),
	(3049, '2013-11-08 15:49:21', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"A307E778-E2B6-4375-A866-499F8062C96B"}'),
	(3050, '2013-11-08 15:49:21', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"657AF9D8-0813-4215-82D7-F6E78D716283"}'),
	(3051, '2013-11-12 10:29:50', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : 98488210-F09C-4218-9915-0E91A6F705F6', '{"stream":{"domain":"domus.cobaltcascade.localhost","username":"sky","name":"snippets","version":"0/0/0"}}'),
	(3052, '2013-11-12 10:29:51', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 09D9C74A-B92F-46C8-B1AB-E718B14B87BA', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(3053, '2013-11-12 10:29:51', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : BA6C7E8E-6701-4307-B810-6F3D53CE0655', '{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"}}'),
	(3054, '2013-11-12 10:29:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : DF325915-7C32-47FA-A74E-4D65926E8EA9', '{"sort_request":{"type":"stream","stream_url":"domus.cobaltcascade.localhost/sky/stream/snippets/0/0/0/posts","filter":{"url":"domus.cobaltcascade.localhost/sky/rhythm/popular+recently/latest/latest/latest/json","name":"popular recently","priority":1},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(3055, '2013-11-12 10:29:52', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 27F18955-E5AA-474C-A66C-7139BF15FEDD', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(3056, '2013-11-12 10:29:53', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : 172E2F1B-4354-470D-ACF3-EADB5B6AE65C', '{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"}}'),
	(3057, '2013-11-12 10:29:53', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : AAF5C318-8A5E-484C-96C0-4894DDDA9404', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test reverse datesort/latest/latest/latest/json","priority":10,"name":"test reverse datesort"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(3058, '2013-11-12 10:29:54', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : 6EC978F1-E8BC-4F82-9C25-680B3DCA8E29', '{}'),
	(3059, '2013-11-12 10:29:54', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : 877CF6C9-4546-4058-97D6-72D56A4C453D', '{}'),
	(3060, '2013-11-12 10:35:17', 66, 'SuggestionReady_kindred', 'Domus domain sending an error back to suggestion.cobaltcascade.localhost domain for request:', '{"action":"SuggestionReady","request_data":{"status":"ready"},"error_code":"SuggestionReady_kindred","request_guid":"F263B882-19A7-4869-BC86-D2D284E41034"}'),
	(3061, '2013-11-12 10:40:45', 67, 'domus_action_error', 'Callback object not found for returning_guid : 6C094624-8E39-4AC1-A6B8-688DD99F63FF', '{}'),
	(3062, '2013-11-12 10:40:45', 67, 'domus_action_error', 'Callback object not found for returning_guid : 31A20130-7924-4B4C-9E0D-546FAFBF7559', '{}'),
	(3063, '2013-11-12 11:31:09', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"7C0E33D6-C217-43EC-8550-D92C599AE674"}'),
	(3064, '2013-11-12 11:31:09', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"D3A698DC-5E88-4EE5-9FE1-1E825E721768"}'),
	(3065, '2013-11-12 11:43:13', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"3D0F218E-BD67-4CE1-93B0-AF7006E2A699"}'),
	(3066, '2013-11-12 11:43:13', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"FB796342-FCEA-4890-B371-C273B4D69A2E"}'),
	(3067, '2013-11-12 11:54:45', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"124"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/124/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"A095E21D-393F-416D-88F3-9249BEC3DE99"}'),
	(3068, '2013-11-12 11:55:05', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : A7AFE7E0-772F-4C1C-835D-8924315B59FB', '{"domain":"cobaltcascade.localhost","post_id":"124"}'),
	(3069, '2013-11-12 12:04:23', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"1E1B0A80-AFD5-41AA-87D8-80050250A4A0"}'),
	(3070, '2013-11-12 12:04:23', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"6FB0633C-9B0B-4625-BFA2-D53BA53BDE19"}'),
	(3071, '2013-11-12 13:34:20', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D55C1A73-6940-40F0-9DE0-8CD2990B5814"}'),
	(3072, '2013-11-12 13:34:20', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"52F53DC9-46BF-48E6-B6BB-A9EBE7581ECB"}'),
	(3073, '2013-11-12 13:56:51', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"C5D4C814-839D-4256-B971-209558DD3343"}'),
	(3074, '2013-11-12 13:56:51', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"A0FE9E11-C057-4AAC-AF9B-615174F6E186"}'),
	(3075, '2013-11-12 14:32:57', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"F79E22AF-2C84-459E-9B05-122A8C94882A"}'),
	(3076, '2013-11-12 14:32:58', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"F2692B34-C5F9-42D0-968B-3382C489FB56"}'),
	(3077, '2013-11-12 15:28:24', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D5DFDB78-34AA-4DB7-8F3C-AC2E30A140ED"}'),
	(3078, '2013-11-12 15:28:24', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"0D21ADB7-1118-4DBE-8AC1-1FD3E904328C"}'),
	(3079, '2013-11-12 16:13:19', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"23B74BF6-C44B-4250-9149-AE7895E88F39"}'),
	(3080, '2013-11-12 16:13:19', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"3617820D-3E28-40CD-9FA9-C97EFC6A2AB1"}'),
	(3081, '2013-11-13 09:41:37', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"32B02905-60C5-40B1-B85A-A57ADE6DC7B7"}'),
	(3082, '2013-11-13 09:41:37', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"FBC436C1-6D7C-4F72-8FF5-9CC33B4517B0"}'),
	(3083, '2013-11-13 10:07:45', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"94170695-092D-4995-B7DC-AAB1B08D5189"}'),
	(3084, '2013-11-13 10:07:46', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"61101CCF-77BD-4B2A-BC80-3E1CA6C5E45C"}'),
	(3085, '2013-11-13 11:19:06', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"BBBB552D-FB13-4861-A573-A3EE5644BAAE"}'),
	(3086, '2013-11-13 11:19:06', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"FD91916C-AC0C-4B91-80F5-FC096B8D6FB3"}'),
	(3087, '2013-11-13 11:27:37', 66, 'KindredReady_kindred', 'Domus domain sending an error back to kindred.cobaltcascade.localhost domain for request:', '{"action":"KindredReady","request_data":{"status":"ready"},"error_code":"KindredReady_kindred","request_guid":"5D9F9C38-D3D5-4C8D-8B4F-5F989110A11F"}'),
	(3088, '2013-11-13 11:27:38', 66, 'SuggestionReady_kindred', 'Domus domain sending an error back to suggestion.cobaltcascade.localhost domain for request:', '{"action":"SuggestionReady","request_data":{"status":"ready"},"error_code":"SuggestionReady_kindred","request_guid":"70981C2B-DE74-4BBC-981A-988BB2C4B944"}'),
	(3089, '2013-11-13 11:27:43', 66, 'FilterReady_kindred', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"FilterReady","request_data":{"status":"ready"},"error_code":"FilterReady_kindred","request_guid":"ECA33B30-BF68-4AEB-814F-F7C6D15658CE"}'),
	(3090, '2013-11-13 11:27:52', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : BBB55FE9-261B-4FC2-BB20-36C2CF8C6CD6', '{}'),
	(3091, '2013-11-13 11:27:52', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : FEBAE264-0DC7-4FC9-9AC3-FA753F0FCB1F', '{}'),
	(3092, '2013-11-13 11:27:52', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : C159122F-CD53-4199-898C-3A660347B988', '{}'),
	(3093, '2013-11-13 11:28:14', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : 8F5BBFB1-0908-462F-A2FA-DB3A0F81959A', '{}'),
	(3094, '2013-11-13 11:37:44', 67, 'client_timeout', 'A timeout occoured when calling an action: GetSuggestions. GUID : EA611B1E-BD39-46A7-9C21-292B404A9035', '{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"}'),
	(3095, '2013-11-13 15:10:26', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"31A26D39-2FE9-422B-82D3-C9FEBDB75C26"}'),
	(3096, '2013-11-13 15:10:26', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"1765BBB6-97F4-4088-A6DD-1E45048BEFD7"}'),
	(3097, '2013-11-13 16:15:16', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"C0CDC683-AEFB-4446-AEE1-DD98D5784104"}'),
	(3098, '2013-11-13 16:15:16', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"01C19B3F-DEE9-4DCC-92E7-E1889364F0B9"}'),
	(3099, '2013-11-14 09:46:02', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"8B466FE2-AAD5-4F43-87B2-649D7DB0DC42"}'),
	(3100, '2013-11-14 09:46:02', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"D8809E60-2035-4352-8291-9417FCC1E718"}'),
	(3101, '2013-11-14 10:49:51', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"C79B9650-59C6-4B90-B793-BBB0398FDD1A"}'),
	(3102, '2013-11-14 10:49:51', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"25DF6081-FAA7-4CAD-8157-21F327DDF228"}'),
	(3103, '2013-11-14 10:49:55', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"3BEA50F4-F253-488F-9AF9-1E3179DEF495"}'),
	(3104, '2013-11-14 10:49:56', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"CB98FA41-C3A0-4C47-8A67-B66A5CA5FBA8"}'),
	(3105, '2013-11-14 12:47:28', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"F5ED7FFC-64F0-44FC-A031-A04846134C0A"}'),
	(3106, '2013-11-14 12:47:28', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"22569540-E2FA-418B-9D7F-268A83FBC565"}'),
	(3107, '2013-11-14 14:46:17', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"756EBF98-1E6B-4A46-AE54-AC7D437108DC"}'),
	(3108, '2013-11-14 14:46:17', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"A7ECD562-B7FD-4A54-99ED-415B4B38AE31"}'),
	(3109, '2013-11-14 15:19:24', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/everything/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"5D5DC2F4-A9B9-4365-A72F-E0F2A52485C3"}'),
	(3110, '2013-11-14 15:19:24', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"2AD0596C-DF0B-46BE-A04F-84C2E025BB9F"}'),
	(3111, '2013-11-14 15:19:24', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/everything/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"A9E71CE5-2E85-4D39-B346-0E2976DBA571"}'),
	(3112, '2013-11-14 15:19:24', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"44B6E8DE-CB09-4DAB-A09E-B2C65A8F09F5"}'),
	(3113, '2013-11-14 15:19:37', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/everything/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"4B5149D7-69FB-412B-AAE3-1C612A6E7ADD"}'),
	(3114, '2013-11-14 15:19:37', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"CEC3842D-C3DE-4944-8B1B-B379165166AB"}'),
	(3115, '2013-11-14 15:19:38', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/everything/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"4CA307D3-735F-4B5F-8730-5AE82312B377"}'),
	(3116, '2013-11-14 15:19:38', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"67F28612-8033-485B-96DD-27A371F8F526"}'),
	(3117, '2013-11-14 15:19:46', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything stream","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/everything stream/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"430E0871-B077-4EFD-A692-56C4FBDE0632"}'),
	(3118, '2013-11-14 15:19:46', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything stream","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"118205B7-78A0-4041-84D4-A54199D612FC"}'),
	(3119, '2013-11-14 15:19:46', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything stream","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/everything stream/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"7EC37D7F-0F13-40E1-AD26-F8BB270B6A69"}'),
	(3120, '2013-11-14 15:19:46', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything stream","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"5AD58767-6AFE-4447-A3CD-E649BA19BF2A"}'),
	(3121, '2013-11-14 15:19:46', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"B365754A-DFAB-457F-BBB4-76D65AE38F63"}'),
	(3122, '2013-11-14 15:19:47', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/everything stream/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"B365754A-DFAB-457F-BBB4-76D65AE38F63"},"request_guid":"2496541A-74FF-4D91-A4F3-185A340D00F2"}'),
	(3123, '2013-11-14 15:19:47', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/everything stream/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"AF6C76E7-F8B3-49A1-A1EE-14DA69556580"}'),
	(3124, '2013-11-14 15:19:47', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/everything stream/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"5C4F34CC-1F53-4991-9CA0-4611E43B2B9E"}'),
	(3125, '2013-11-14 15:19:48', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"B5D7C0FE-87DE-4806-BFBD-6733975FE39D"}'),
	(3126, '2013-11-14 15:19:48', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"newest","version":"0/0/0","date_created":1371201607,"status":"public","description":"Sort items by date, with the newest first.","js":"function () {\\r\\n\\tvar main = function (post) {\\r\\n      var sort_value = post.timestamp;\\r\\n      BabblingBrook.Filter.processNextPost(sort_value);\\r\\n\\t};\\r\\n  \\r\\n\\treturn {\\r\\n      main : main\\r\\n\\t};\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/everything stream/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"B5D7C0FE-87DE-4806-BFBD-6733975FE39D"},"request_guid":"A1CE4161-128B-4C45-830A-D9C5B9D74F94"}'),
	(3127, '2013-11-14 15:19:48', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/everything stream/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"5098C3FB-3BBE-4D06-85FB-215E5C376D0A"}'),
	(3128, '2013-11-14 15:20:13', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1384442441834},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"32AF5BBD-15E3-4307-B00E-90C13389F138"}'),
	(3129, '2013-11-14 15:20:14', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1384442441834},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"32AF5BBD-15E3-4307-B00E-90C13389F138"},"request_guid":"E32473BF-EF74-4BA0-9FBE-DCFAE0E0144C"}'),
	(3130, '2013-11-14 15:20:14', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1384442441834},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/news/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"32AF5BBD-15E3-4307-B00E-90C13389F138"},"request_guid":"E32473BF-EF74-4BA0-9FBE-DCFAE0E0144C"},"request_guid":"69943545-853C-48E7-A30A-C2FA7C5D3901"}'),
	(3131, '2013-11-14 15:20:14', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"8A8C2DD7-C95C-43CE-A240-0BB16805110F"}'),
	(3132, '2013-11-14 15:20:14', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3287F88E-1788-40F6-B77F-56CA0548B4CE"}'),
	(3133, '2013-11-14 15:30:15', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"BF665BB1-5BEB-4DDF-9354-FAEA64EB631C"}'),
	(3134, '2013-11-14 15:30:15', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"4E79BA63-F81B-49F9-8129-4088F86A47D0"}'),
	(3135, '2013-11-14 15:44:56', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"2624170D-4E14-4144-9C16-59B9FEA47638"}'),
	(3136, '2013-11-14 15:44:56', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"01639626-2F62-401E-A152-E4AEF8EF547A"}'),
	(3137, '2013-11-15 10:20:53', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"0/0/0"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/everything/0/0/0/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"00F8E879-AAF7-4B61-8E92-AA693CEBBE4B"}'),
	(3138, '2013-11-15 10:20:54', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"0/0/0"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"258D4854-0687-425E-9E1A-E3401F4D70B1"}'),
	(3139, '2013-11-15 10:20:54', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"0/0/0"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/everything/0/0/0/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"B37AA557-BDA2-470C-B3FA-3D0F3D0343B4"}'),
	(3140, '2013-11-15 10:20:54', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"everything","version":"0/0/0"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"C008D7DF-7E89-42B0-B5A7-54F610C6C943"}'),
	(3141, '2013-11-15 10:21:00', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"E0D9EFF5-7F10-4CDA-8EFA-382DBB650D87"}'),
	(3142, '2013-11-15 10:21:00', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys priority","version":"0/0/0","date_created":1371549635,"status":"public","description":"Order the results by the take value that user sky has given the main value.","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;    \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        var post_id = post.post_id; \\r\\n        var sort = 0;\\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        if (sky_takes_fetched === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {      \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           \\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/everything/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"E0D9EFF5-7F10-4CDA-8EFA-382DBB650D87"},"request_guid":"19A18DE7-F508-44B1-862D-10B5A9197B75"}'),
	(3143, '2013-11-15 10:21:00', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/everything/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"A836D36D-4054-4E3C-8FBB-1CC96366FD64"}'),
	(3144, '2013-11-15 10:21:00', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/everything/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3D57F07B-2756-4BC4-93C2-DA5BF02ABABD"}'),
	(3145, '2013-11-15 10:21:00', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"D996A9CB-D934-4620-B3A2-423EAAAA1B4D"}'),
	(3146, '2013-11-15 10:21:00', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"newest","version":"0/0/0","date_created":1371201607,"status":"public","description":"Sort items by date, with the newest first.","js":"function () {\\r\\n\\tvar main = function (post) {\\r\\n      var sort_value = post.timestamp;\\r\\n      BabblingBrook.Filter.processNextPost(sort_value);\\r\\n\\t};\\r\\n  \\r\\n\\treturn {\\r\\n      main : main\\r\\n\\t};\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/everything/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"D996A9CB-D934-4620-B3A2-423EAAAA1B4D"},"request_guid":"22FB4347-CD1B-4FF3-8071-3FA8DC96C7E3"}'),
	(3147, '2013-11-15 10:21:00', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/everything/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"581A22EC-C2FE-4821-BF88-12C5F4C3AC20"}'),
	(3148, '2013-11-15 10:21:50', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":3,"client_timeout":1384510938592},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"DCCD017D-F12A-4E5C-96A8-F7742E03622D"}'),
	(3149, '2013-11-15 10:21:50', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":3,"client_timeout":1384510938592},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"DCCD017D-F12A-4E5C-96A8-F7742E03622D"},"request_guid":"236FD3C7-C97B-48DE-82E1-2A5D4ECE1BAB"}'),
	(3150, '2013-11-15 10:21:50', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":3,"client_timeout":1384510938592},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"DCCD017D-F12A-4E5C-96A8-F7742E03622D"},"request_guid":"236FD3C7-C97B-48DE-82E1-2A5D4ECE1BAB"},"request_guid":"6D3227A1-C60E-4546-87A2-92C0B24E0283"}'),
	(3151, '2013-11-15 10:21:50', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"E05655F9-4416-4A06-A172-790559C9A820"}'),
	(3152, '2013-11-15 10:21:51', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","priority":10,"name":"test datesort"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"071A97DC-54A8-4057-A45E-FCB7A168EB89"}'),
	(3153, '2013-11-15 10:56:18', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"8502A320-F48C-4705-8394-6C70DD09B947"}'),
	(3154, '2013-11-15 10:56:18', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"4869E523-6103-4BF4-962A-F8C1274AD007"}'),
	(3155, '2013-11-15 11:00:00', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : 80D7B713-4BC2-43F3-A220-7C4E216B057F', '{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test everything stream","version":"0/0/0"}}'),
	(3156, '2013-11-15 11:23:01', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"34166BA1-3AE9-4B03-A21C-46E7D516987E"}'),
	(3157, '2013-11-15 11:23:01', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"C5583EAF-B5AF-4B27-98EF-0A66A2D24678"}'),
	(3158, '2013-11-15 12:50:24', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":272,"block_numbers":[0],"client_timeout":1384519851812},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"9FEFB535-9C8F-48EB-943D-13EB236BC682"},"request_guid":"F9B0DF6A-C1CF-43EB-812E-CA89F7F02507"}'),
	(3159, '2013-11-15 12:50:24', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":272,"block_numbers":[0],"client_timeout":1384519851812},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"9FEFB535-9C8F-48EB-943D-13EB236BC682"},"request_guid":"F9B0DF6A-C1CF-43EB-812E-CA89F7F02507"},"request_guid":"3E326309-379D-49DC-AF7F-DE6BAEC71BDD"}'),
	(3160, '2013-11-15 12:50:24', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":272,"block_numbers":[0],"client_timeout":1384519851812},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"9FEFB535-9C8F-48EB-943D-13EB236BC682"}'),
	(3161, '2013-11-15 12:50:24', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[],"refresh_frequency":20,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"22DC23D7-C097-4C26-AC76-E6FDC6C10BAA"}'),
	(3162, '2013-11-15 12:51:06', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : 8DDE3D84-CEBD-49A6-BACE-7117B3254D0C', '{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test everything stream","version":"0/0/0"}}'),
	(3163, '2013-11-15 12:58:42', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0"},"content":[{"display_order":"1","text":"testes"},{"display_order":"2"},{"display_order":"3","text":"set"},{"display_order":"4","checked":true},{"display_order":"5"},{"display_order":"6","selected":["first short list item","third short list item"]},{"display_order":"7","selected":["long list item 1","long list item 11","long list item 12"]},{"display_order":"8","selected":["item1","item2","something"]},{"display_order":"9"},{"display_order":"10"},{"display_order":"11","value_min":"0","value_max":"10"},{"display_order":"12"},{"display_order":"13","value_min":"0","value_max":"10"},{"display_order":"14"},{"display_order":"15","text":"24"},{"display_order":"16","checked":true},{"display_order":"17"},{"display_order":"18"},{"display_order":"19"},{"display_order":"20"},{"display_order":"21"},{"display_order":"22"},{"display_order":"23"},{"display_order":"24"},{"display_order":"25"},{"display_order":"26"},{"display_order":"27"},{"display_order":"28"},{"display_order":"29","value_min":"10","value_max":"100"},{"display_order":"30","value_min":"0","value_max":"10"},{"display_order":"31"},{"display_order":"32","value_min":"0","value_max":"3"},{"display_order":"33"}],"private_addresses":[],"submitting_user":{"username":"test","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"3804A182-4331-48E8-AC48-5E43F8C2ED3B"}'),
	(3164, '2013-11-15 12:58:42', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0"},"content":[{"display_order":"1","text":"testes"},{"display_order":"2"},{"display_order":"3","text":"set"},{"display_order":"4","checked":true},{"display_order":"5"},{"display_order":"6","selected":["first short list item","third short list item"]},{"display_order":"7","selected":["long list item 1","long list item 11","long list item 12"]},{"display_order":"8","selected":["item1","item2","something"]},{"display_order":"9"},{"display_order":"10"},{"display_order":"11","value_min":"0","value_max":"10"},{"display_order":"12"},{"display_order":"13","value_min":"0","value_max":"10"},{"display_order":"14"},{"display_order":"15","text":"24"},{"display_order":"16","checked":true},{"display_order":"17"},{"display_order":"18"},{"display_order":"19"},{"display_order":"20"},{"display_order":"21"},{"display_order":"22"},{"display_order":"23"},{"display_order":"24"},{"display_order":"25"},{"display_order":"26"},{"display_order":"27"},{"display_order":"28"},{"display_order":"29","value_min":"10","value_max":"100"},{"display_order":"30","value_min":"0","value_max":"10"},{"display_order":"31"},{"display_order":"32","value_min":"0","value_max":"3"},{"display_order":"33"}],"private_addresses":[],"submitting_user":{"username":"test","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  Returned data for \\"/data/makepost\\" is not parsing to JSON."},"request_guid":"878065D0-B1C1-4706-AA18-694DDAD194EC"}'),
	(3165, '2013-11-15 12:59:32', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":10,"block_numbers":[0],"client_timeout":1384520400960},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"63A8FCE4-BD8F-4E2E-8DB4-9C6DE6328CF3"},"request_guid":"4FFCC71A-C919-40FD-8386-9184526D8076"}'),
	(3166, '2013-11-15 12:59:33', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":10,"block_numbers":[0],"client_timeout":1384520400960},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"63A8FCE4-BD8F-4E2E-8DB4-9C6DE6328CF3"},"request_guid":"4FFCC71A-C919-40FD-8386-9184526D8076"},"request_guid":"BBC2B420-CFB3-4083-ABF9-A2D1C683612F"}'),
	(3167, '2013-11-15 12:59:33', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[],"refresh_frequency":20,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"8DE65770-E26F-4400-9452-823A3582CDB6"}'),
	(3168, '2013-11-15 12:59:33', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":10,"block_numbers":[0],"client_timeout":1384520400960},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"63A8FCE4-BD8F-4E2E-8DB4-9C6DE6328CF3"}'),
	(3169, '2013-11-15 12:59:40', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10441"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10441/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"EBEEF3D8-1E9B-441A-9C10-66BC1D612EB6"}'),
	(3170, '2013-11-15 13:00:08', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : 5B4D74B4-8AEF-4145-B204-DBC8F64B00EC', '{"domain":"cobaltcascade.localhost","post_id":"10441"}'),
	(3171, '2013-11-15 13:08:11', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10441"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10441/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"15DB84E7-3B0B-4692-8CAC-F7AC16516641"}'),
	(3172, '2013-11-15 13:08:15', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0"},"content":[{"display_order":"1","text":"dfg"},{"display_order":"2"},{"display_order":"3","text":"sdfg"},{"display_order":"4","checked":true},{"display_order":"5"},{"display_order":"6","selected":["first short list item","second short list item"]},{"display_order":"7","selected":["long list item 10","long list item 11","long list item 18"]},{"display_order":"8","selected":["test1","something"]},{"display_order":"9"},{"display_order":"10"},{"display_order":"11","value_min":"100","value_max":"1000"},{"display_order":"12"},{"display_order":"13","value_min":"10","value_max":"100"},{"display_order":"14"},{"display_order":"15","text":"10"},{"display_order":"16","checked":true},{"display_order":"17"},{"display_order":"18"},{"display_order":"19"},{"display_order":"20"},{"display_order":"21"},{"display_order":"22"},{"display_order":"23"},{"display_order":"24"},{"display_order":"25"},{"display_order":"26"},{"display_order":"27"},{"display_order":"28"},{"display_order":"29","value_min":"10","value_max":"100"},{"display_order":"30","value_min":"10","value_max":"100"},{"display_order":"31"},{"display_order":"32","value_min":"0","value_max":"10"},{"display_order":"33"}],"private_addresses":[],"submitting_user":{"username":"test","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"40106705-A052-4352-8BFF-95D8CE839B56"}'),
	(3173, '2013-11-15 13:08:15', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0"},"content":[{"display_order":"1","text":"dfg"},{"display_order":"2"},{"display_order":"3","text":"sdfg"},{"display_order":"4","checked":true},{"display_order":"5"},{"display_order":"6","selected":["first short list item","second short list item"]},{"display_order":"7","selected":["long list item 10","long list item 11","long list item 18"]},{"display_order":"8","selected":["test1","something"]},{"display_order":"9"},{"display_order":"10"},{"display_order":"11","value_min":"100","value_max":"1000"},{"display_order":"12"},{"display_order":"13","value_min":"10","value_max":"100"},{"display_order":"14"},{"display_order":"15","text":"10"},{"display_order":"16","checked":true},{"display_order":"17"},{"display_order":"18"},{"display_order":"19"},{"display_order":"20"},{"display_order":"21"},{"display_order":"22"},{"display_order":"23"},{"display_order":"24"},{"display_order":"25"},{"display_order":"26"},{"display_order":"27"},{"display_order":"28"},{"display_order":"29","value_min":"10","value_max":"100"},{"display_order":"30","value_min":"10","value_max":"100"},{"display_order":"31"},{"display_order":"32","value_min":"0","value_max":"10"},{"display_order":"33"}],"private_addresses":[],"submitting_user":{"username":"test","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : PHP Error."},"request_guid":"D21BE822-67B1-4FAF-9438-A1B5D4289C06"}'),
	(3174, '2013-11-15 13:08:40', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : DE9F918D-80BD-44FE-B711-D8E301711418', '{"domain":"cobaltcascade.localhost","post_id":"10441"}'),
	(3175, '2013-11-15 13:18:14', 157, 'rhythm_getMiscData_error', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"rhythm_getMiscData_error","error_data":"GetData_failed","request_guid":"AD0E0A06-E566-41CF-8A07-370B27AD7583"}'),
	(3176, '2013-11-15 13:18:14', 66, 'GetData_failed', 'Domus domain sending an error back to suggestion.cobaltcascade.localhost domain for request:', '{"action":"GetMiscData","request_data":{"url":"cobaltcascade.localhost/test/clientdata/getdeclinedsuggestions/?client_domain=cobaltcascade.localhost&type=undefined"},"error_code":"GetData_failed","error_data":"scientia_server_fetch_data","request_guid":"F37D9ED0-BA42-47B4-9872-1E7B8B3A18E3"}'),
	(3177, '2013-11-15 13:18:15', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"663CF578-DC15-45FD-ABBC-E7511616057E"}'),
	(3178, '2013-11-15 13:18:16', 65, 'scientia_server_fetch_data', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchData","request_data":{"url":"cobaltcascade.localhost/test/clientdata/getdeclinedsuggestions/?client_domain=cobaltcascade.localhost&type=undefined","data":{}},"error_code":"scientia_server_fetch_data","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : http://scientia.cobaltcascade.localhost/test/clientdata/getdeclinedsuggestions/?client_domain=cobaltcascade.localhost&type=undefined Domain : scientia.cobaltcascade.localhost  ajax request text status : timeout. ajax request error thrown : timeout."},"request_guid":"49640815-1A19-40B9-BFA7-937FFD36A10D"}'),
	(3179, '2013-11-15 13:35:54', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"7D187F2B-1D25-4F8C-A319-946B73C410FF"}'),
	(3180, '2013-11-15 13:35:54', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"95B950F5-D51F-4AD3-8A78-784BC6AAFF58"}'),
	(3181, '2013-11-15 13:36:57', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10441"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10441/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"DCE5D573-17C0-4B08-A006-96860EC988DD"}'),
	(3182, '2013-11-15 13:37:32', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10441"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10441/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"6EF35DCF-29B5-41C5-B53E-DB601C754C71"}'),
	(3183, '2013-11-15 13:38:08', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10441"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10441/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"FF70ED03-CBEA-4FE3-982C-BB39FFFE9621"}'),
	(3184, '2013-11-15 13:38:30', 67, 'client_timeout', 'A timeout occoured when calling an action: GetPost. GUID : F248D3AB-5D1E-4900-9C3C-E6B4DAC23A66', '{"domain":"cobaltcascade.localhost","post_id":"10441"}'),
	(3185, '2013-11-15 13:40:02', 65, 'GetPost_not_found', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10441"},"error_code":"GetPost_not_found","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10441/json Domain : scientia.cobaltcascade.localhost No details provided."},"request_guid":"CC4CADDA-9E86-4644-A099-4EE8BC6C1379"}'),
	(3186, '2013-11-15 13:40:02', 66, 'GetPost_not_found', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10441"},"error_code":"GetPost_not_found","error_data":"GetPost_not_found","request_guid":"B8027B7D-047B-4A3C-A2BE-82F1B1206BAE"}'),
	(3187, '2013-11-15 13:45:21', 66, 'CheckUsernameValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchOpenListSuggestions","request_data":{"text_to_fetch_suggestions_for":"","stream":{"name":"test everything stream","local_id":"6","kind":"standard","domain":"cobaltcascade.localhost","username":"test","timestamp":1325755761,"description":"A test stream containing all types of field and value","meta_url":"cobaltcascade.localhost/post/cobaltcascade.localhost/66","status":"private","version":"0/0/0","post_mode":"owner","child_streams":[{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0","post_mode":"owner"},{"name":"cobalt meta","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0","post_mode":"anyone"}],"cooldown":55,"edit_mode":"owner","fields":[null,{"type":"textbox","label":"Title","display_order":"1","max_size":"200","required":true,"regex":null,"regex_error":null},{"type":"value","label":"Main Value","display_order":"2","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":null,"who_can_take":"anyone"},{"type":"textbox","label":"a required textbox","display_order":"3","max_size":"2000","required":true,"regex":null,"regex_error":""},{"type":"checkbox","label":"a link fieldd","display_order":"4","checkbox_default":true},{"type":"value","label":"a checkbox","display_order":"5","value_min":null,"value_max":null,"value_type":"list","value_options":"rhythmpost","rhythm_check_url":null,"value_list":[],"who_can_take":"anyone"},{"type":"list","label":"a short list","display_order":"6","select_qty_max":"2","select_qty_min":"2","list":["first short list item","second short list item","third short list item"]},{"type":"list","label":"a long list","display_order":"7","select_qty_max":"5","select_qty_min":"3","list":["long list item 1","long list item 10","long list item 11","long list item 12","long list item 13","long list item 14","long list item 15","long list item 16","long list item 17","long list item 18","long list item 19","long list item 2","long list item 20","long list item 3","long list item 4","long list item 5","long list item 6","long list item 7","long list item 8","long list item 9"]},{"type":"openlist","label":"an open list","display_order":"8","select_qty_max":"4","select_qty_min":"2"},{"type":"value","label":"an updown value","display_order":"9","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints","display_order":"10","value_min":"-3","value_max":"4","value_type":"updown","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints on the post","display_order":"11","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value","display_order":"12","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value with constraints on the post","display_order":"13","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a button value","display_order":"14","value_min":"0","value_max":"1","value_type":"button","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"textbox","label":"textbox with regex","display_order":"15","max_size":"10","required":true,"regex":"^[0-9]+$","regex_error":""},{"type":"checkbox","label":"checkbox with default on","display_order":"16","checkbox_default":true},{"type":"value","label":"a linear scale value","display_order":"17","value_min":"-1000","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value","display_order":"18","value_min":"-1000000000","value_max":"1000000000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear positive scale","display_order":"19","value_min":"0","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear negative scale","display_order":"20","value_min":"-1000","value_max":"0","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset positive scale 150-250","display_order":"21","value_min":"150","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value 0 - 10000","display_order":"22","value_min":"0","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value -10000 0","display_order":"23","value_min":"-10000","value_max":"0","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value 100 - 100000","display_order":"24","value_min":"100","value_max":"100000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset negative scale -150- -250","display_order":"25","value_min":"-250","value_max":"-150","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an uneven linear scale -100 - 250","display_order":"26","value_min":"-100","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log uneven scale -100 - 10000","display_order":"27","value_min":"-100","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value -100000 - -100","display_order":"28","value_min":"-100000","value_max":"-100","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale with constraints on the post","display_order":"29","value_min":"-100","value_max":"100","value_type":"logarithmic","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear scale with constraints on the post","display_order":"30","value_min":"-100","value_max":"100","value_type":"linear","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value","display_order":"31","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value with constraint on the post","display_order":"32","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a take list","display_order":"33","value_min":null,"value_max":null,"value_type":"list","value_options":"any","rhythm_check_url":"","value_list":[{"value":"1","name":"first take value"},{"value":"2","name":"second take value"},{"value":"3","name":"third take value"}],"who_can_take":"anyone"}]},"field_id":8},"error_code":"CheckUsernameValid_failed","error_data":"domus_request_timed_out","request_guid":"125F5730-0A8B-4543-A4DD-B823FB5410A7"}'),
	(3188, '2013-11-15 13:46:54', 66, 'CheckUsernameValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchOpenListSuggestions","request_data":{"text_to_fetch_suggestions_for":"","stream":{"name":"test everything stream","local_id":"6","kind":"standard","domain":"cobaltcascade.localhost","username":"test","timestamp":1325755761,"description":"A test stream containing all types of field and value","meta_url":"cobaltcascade.localhost/post/cobaltcascade.localhost/66","status":"private","version":"0/0/0","post_mode":"owner","child_streams":[{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0","post_mode":"owner"},{"name":"cobalt meta","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0","post_mode":"anyone"}],"cooldown":55,"edit_mode":"owner","fields":[null,{"type":"textbox","label":"Title","display_order":"1","max_size":"200","required":true,"regex":null,"regex_error":null},{"type":"value","label":"Main Value","display_order":"2","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":null,"who_can_take":"anyone"},{"type":"textbox","label":"a required textbox","display_order":"3","max_size":"2000","required":true,"regex":null,"regex_error":""},{"type":"checkbox","label":"a link fieldd","display_order":"4","checkbox_default":true},{"type":"value","label":"a checkbox","display_order":"5","value_min":null,"value_max":null,"value_type":"list","value_options":"rhythmpost","rhythm_check_url":null,"value_list":[],"who_can_take":"anyone"},{"type":"list","label":"a short list","display_order":"6","select_qty_max":"2","select_qty_min":"2","list":["first short list item","second short list item","third short list item"]},{"type":"list","label":"a long list","display_order":"7","select_qty_max":"5","select_qty_min":"3","list":["long list item 1","long list item 10","long list item 11","long list item 12","long list item 13","long list item 14","long list item 15","long list item 16","long list item 17","long list item 18","long list item 19","long list item 2","long list item 20","long list item 3","long list item 4","long list item 5","long list item 6","long list item 7","long list item 8","long list item 9"]},{"type":"openlist","label":"an open list","display_order":"8","select_qty_max":"4","select_qty_min":"2"},{"type":"value","label":"an updown value","display_order":"9","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints","display_order":"10","value_min":"-3","value_max":"4","value_type":"updown","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints on the post","display_order":"11","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value","display_order":"12","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value with constraints on the post","display_order":"13","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a button value","display_order":"14","value_min":"0","value_max":"1","value_type":"button","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"textbox","label":"textbox with regex","display_order":"15","max_size":"10","required":true,"regex":"^[0-9]+$","regex_error":""},{"type":"checkbox","label":"checkbox with default on","display_order":"16","checkbox_default":true},{"type":"value","label":"a linear scale value","display_order":"17","value_min":"-1000","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value","display_order":"18","value_min":"-1000000000","value_max":"1000000000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear positive scale","display_order":"19","value_min":"0","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear negative scale","display_order":"20","value_min":"-1000","value_max":"0","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset positive scale 150-250","display_order":"21","value_min":"150","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value 0 - 10000","display_order":"22","value_min":"0","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value -10000 0","display_order":"23","value_min":"-10000","value_max":"0","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value 100 - 100000","display_order":"24","value_min":"100","value_max":"100000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset negative scale -150- -250","display_order":"25","value_min":"-250","value_max":"-150","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an uneven linear scale -100 - 250","display_order":"26","value_min":"-100","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log uneven scale -100 - 10000","display_order":"27","value_min":"-100","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value -100000 - -100","display_order":"28","value_min":"-100000","value_max":"-100","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale with constraints on the post","display_order":"29","value_min":"-100","value_max":"100","value_type":"logarithmic","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear scale with constraints on the post","display_order":"30","value_min":"-100","value_max":"100","value_type":"linear","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value","display_order":"31","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value with constraint on the post","display_order":"32","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a take list","display_order":"33","value_min":null,"value_max":null,"value_type":"list","value_options":"any","rhythm_check_url":"","value_list":[{"value":"1","name":"first take value"},{"value":"2","name":"second take value"},{"value":"3","name":"third take value"}],"who_can_take":"anyone"}]},"field_id":8},"error_code":"CheckUsernameValid_failed","error_data":"scientia_server_get_rhythm","request_guid":"951A65C2-A1BD-40F4-859C-E18C94D25D47"}'),
	(3189, '2013-11-15 13:46:54', 65, 'scientia_server_get_rhythm', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchOpenListSuggestions","request_data":{"text_to_fetch_suggestions_for":"","stream":{"name":"test everything stream","local_id":"6","kind":"standard","domain":"cobaltcascade.localhost","username":"test","timestamp":1325755761,"description":"A test stream containing all types of field and value","meta_url":"cobaltcascade.localhost/post/cobaltcascade.localhost/66","status":"private","version":"0/0/0","post_mode":"owner","child_streams":[{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0","post_mode":"owner"},{"name":"cobalt meta","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0","post_mode":"anyone"}],"cooldown":55,"edit_mode":"owner","fields":[null,{"type":"textbox","label":"Title","display_order":"1","max_size":"200","required":true,"regex":null,"regex_error":null},{"type":"value","label":"Main Value","display_order":"2","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":null,"who_can_take":"anyone"},{"type":"textbox","label":"a required textbox","display_order":"3","max_size":"2000","required":true,"regex":null,"regex_error":""},{"type":"checkbox","label":"a link fieldd","display_order":"4","checkbox_default":true},{"type":"value","label":"a checkbox","display_order":"5","value_min":null,"value_max":null,"value_type":"list","value_options":"rhythmpost","rhythm_check_url":null,"value_list":[],"who_can_take":"anyone"},{"type":"list","label":"a short list","display_order":"6","select_qty_max":"2","select_qty_min":"2","list":["first short list item","second short list item","third short list item"]},{"type":"list","label":"a long list","display_order":"7","select_qty_max":"5","select_qty_min":"3","list":["long list item 1","long list item 10","long list item 11","long list item 12","long list item 13","long list item 14","long list item 15","long list item 16","long list item 17","long list item 18","long list item 19","long list item 2","long list item 20","long list item 3","long list item 4","long list item 5","long list item 6","long list item 7","long list item 8","long list item 9"]},{"type":"openlist","label":"an open list","display_order":"8","select_qty_max":"4","select_qty_min":"2"},{"type":"value","label":"an updown value","display_order":"9","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints","display_order":"10","value_min":"-3","value_max":"4","value_type":"updown","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints on the post","display_order":"11","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value","display_order":"12","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value with constraints on the post","display_order":"13","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a button value","display_order":"14","value_min":"0","value_max":"1","value_type":"button","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"textbox","label":"textbox with regex","display_order":"15","max_size":"10","required":true,"regex":"^[0-9]+$","regex_error":""},{"type":"checkbox","label":"checkbox with default on","display_order":"16","checkbox_default":true},{"type":"value","label":"a linear scale value","display_order":"17","value_min":"-1000","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value","display_order":"18","value_min":"-1000000000","value_max":"1000000000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear positive scale","display_order":"19","value_min":"0","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear negative scale","display_order":"20","value_min":"-1000","value_max":"0","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset positive scale 150-250","display_order":"21","value_min":"150","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value 0 - 10000","display_order":"22","value_min":"0","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value -10000 0","display_order":"23","value_min":"-10000","value_max":"0","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value 100 - 100000","display_order":"24","value_min":"100","value_max":"100000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset negative scale -150- -250","display_order":"25","value_min":"-250","value_max":"-150","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an uneven linear scale -100 - 250","display_order":"26","value_min":"-100","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log uneven scale -100 - 10000","display_order":"27","value_min":"-100","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value -100000 - -100","display_order":"28","value_min":"-100000","value_max":"-100","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale with constraints on the post","display_order":"29","value_min":"-100","value_max":"100","value_type":"logarithmic","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear scale with constraints on the post","display_order":"30","value_min":"-100","value_max":"100","value_type":"linear","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value","display_order":"31","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value with constraint on the post","display_order":"32","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a take list","display_order":"33","value_min":null,"value_max":null,"value_type":"list","value_options":"any","rhythm_check_url":"","value_list":[{"value":"1","name":"first take value"},{"value":"2","name":"second take value"},{"value":"3","name":"third take value"}],"who_can_take":"anyone"}]},"field_id":8},"error_code":"scientia_server_get_rhythm","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : cobaltcascade.localhost/test/stream/test everything stream/0/0/0/openlistsuggestionsfetch Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"9C27516A-EF3F-4BD4-8A75-C55C8020EDC5"}'),
	(3190, '2013-11-15 13:47:43', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : D6357F88-D806-487E-B656-598697B6BD91', '{"stream":{"domain":"scientia.cobaltcascade.localhost","username":"sky","name":"snippets","version":"0/0/0"}}'),
	(3191, '2013-11-15 13:47:44', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : C99ADDDB-49E4-415E-9BB9-F32E2C45DA06', '{"sort_request":{"type":"stream","stream_url":"scientia.cobaltcascade.localhost/sky/stream/snippets/0/0/0/posts","filter":{"url":"scientia.cobaltcascade.localhost/sky/rhythm/popular+recently/latest/latest/latest/json","name":"popular recently","priority":1},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(3192, '2013-11-15 13:47:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : 543E5B80-A432-482A-A1FD-2CD6EDA63F98', '{}'),
	(3193, '2013-11-15 13:47:45', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : AB170237-1FE1-4BA0-862B-3D552330A90D', '{}'),
	(3194, '2013-11-15 13:47:46', 67, 'client_timeout', 'A timeout occoured when calling an action: GetKindred. GUID : A69BAB95-5E60-4739-AEA4-BA32B63E2BD2', '{}'),
	(3195, '2013-11-15 13:48:45', 66, 'CheckUsernameValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchOpenListSuggestions","request_data":{"text_to_fetch_suggestions_for":"","stream":{"name":"test everything stream","local_id":"6","kind":"standard","domain":"cobaltcascade.localhost","username":"test","timestamp":1325755761,"description":"A test stream containing all types of field and value","meta_url":"cobaltcascade.localhost/post/cobaltcascade.localhost/66","status":"private","version":"0/0/0","post_mode":"owner","child_streams":[{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0","post_mode":"owner"},{"name":"cobalt meta","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0","post_mode":"anyone"}],"cooldown":55,"edit_mode":"owner","fields":[null,{"type":"textbox","label":"Title","display_order":"1","max_size":"200","required":true,"regex":null,"regex_error":null},{"type":"value","label":"Main Value","display_order":"2","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":null,"who_can_take":"anyone"},{"type":"textbox","label":"a required textbox","display_order":"3","max_size":"2000","required":true,"regex":null,"regex_error":""},{"type":"checkbox","label":"a link fieldd","display_order":"4","checkbox_default":true},{"type":"value","label":"a checkbox","display_order":"5","value_min":null,"value_max":null,"value_type":"list","value_options":"rhythmpost","rhythm_check_url":null,"value_list":[],"who_can_take":"anyone"},{"type":"list","label":"a short list","display_order":"6","select_qty_max":"2","select_qty_min":"2","list":["first short list item","second short list item","third short list item"]},{"type":"list","label":"a long list","display_order":"7","select_qty_max":"5","select_qty_min":"3","list":["long list item 1","long list item 10","long list item 11","long list item 12","long list item 13","long list item 14","long list item 15","long list item 16","long list item 17","long list item 18","long list item 19","long list item 2","long list item 20","long list item 3","long list item 4","long list item 5","long list item 6","long list item 7","long list item 8","long list item 9"]},{"type":"openlist","label":"an open list","display_order":"8","select_qty_max":"4","select_qty_min":"2"},{"type":"value","label":"an updown value","display_order":"9","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints","display_order":"10","value_min":"-3","value_max":"4","value_type":"updown","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints on the post","display_order":"11","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value","display_order":"12","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value with constraints on the post","display_order":"13","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a button value","display_order":"14","value_min":"0","value_max":"1","value_type":"button","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"textbox","label":"textbox with regex","display_order":"15","max_size":"10","required":true,"regex":"^[0-9]+$","regex_error":""},{"type":"checkbox","label":"checkbox with default on","display_order":"16","checkbox_default":true},{"type":"value","label":"a linear scale value","display_order":"17","value_min":"-1000","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value","display_order":"18","value_min":"-1000000000","value_max":"1000000000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear positive scale","display_order":"19","value_min":"0","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear negative scale","display_order":"20","value_min":"-1000","value_max":"0","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset positive scale 150-250","display_order":"21","value_min":"150","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value 0 - 10000","display_order":"22","value_min":"0","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value -10000 0","display_order":"23","value_min":"-10000","value_max":"0","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value 100 - 100000","display_order":"24","value_min":"100","value_max":"100000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset negative scale -150- -250","display_order":"25","value_min":"-250","value_max":"-150","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an uneven linear scale -100 - 250","display_order":"26","value_min":"-100","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log uneven scale -100 - 10000","display_order":"27","value_min":"-100","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value -100000 - -100","display_order":"28","value_min":"-100000","value_max":"-100","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale with constraints on the post","display_order":"29","value_min":"-100","value_max":"100","value_type":"logarithmic","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear scale with constraints on the post","display_order":"30","value_min":"-100","value_max":"100","value_type":"linear","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value","display_order":"31","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value with constraint on the post","display_order":"32","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a take list","display_order":"33","value_min":null,"value_max":null,"value_type":"list","value_options":"any","rhythm_check_url":"","value_list":[{"value":"1","name":"first take value"},{"value":"2","name":"second take value"},{"value":"3","name":"third take value"}],"who_can_take":"anyone"}]},"field_id":8},"error_code":"CheckUsernameValid_failed","error_data":"scientia_server_get_rhythm","request_guid":"3B72DA08-26B3-4615-9E1C-07D0F660EF0B"}'),
	(3196, '2013-11-15 13:48:45', 65, 'scientia_server_get_rhythm', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchOpenListSuggestions","request_data":{"text_to_fetch_suggestions_for":"","stream":{"name":"test everything stream","local_id":"6","kind":"standard","domain":"cobaltcascade.localhost","username":"test","timestamp":1325755761,"description":"A test stream containing all types of field and value","meta_url":"cobaltcascade.localhost/post/cobaltcascade.localhost/66","status":"private","version":"0/0/0","post_mode":"owner","child_streams":[{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0","post_mode":"owner"},{"name":"cobalt meta","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0","post_mode":"anyone"}],"cooldown":55,"edit_mode":"owner","fields":[null,{"type":"textbox","label":"Title","display_order":"1","max_size":"200","required":true,"regex":null,"regex_error":null},{"type":"value","label":"Main Value","display_order":"2","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":null,"who_can_take":"anyone"},{"type":"textbox","label":"a required textbox","display_order":"3","max_size":"2000","required":true,"regex":null,"regex_error":""},{"type":"checkbox","label":"a link fieldd","display_order":"4","checkbox_default":true},{"type":"value","label":"a checkbox","display_order":"5","value_min":null,"value_max":null,"value_type":"list","value_options":"rhythmpost","rhythm_check_url":null,"value_list":[],"who_can_take":"anyone"},{"type":"list","label":"a short list","display_order":"6","select_qty_max":"2","select_qty_min":"2","list":["first short list item","second short list item","third short list item"]},{"type":"list","label":"a long list","display_order":"7","select_qty_max":"5","select_qty_min":"3","list":["long list item 1","long list item 10","long list item 11","long list item 12","long list item 13","long list item 14","long list item 15","long list item 16","long list item 17","long list item 18","long list item 19","long list item 2","long list item 20","long list item 3","long list item 4","long list item 5","long list item 6","long list item 7","long list item 8","long list item 9"]},{"type":"openlist","label":"an open list","display_order":"8","select_qty_max":"4","select_qty_min":"2"},{"type":"value","label":"an updown value","display_order":"9","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints","display_order":"10","value_min":"-3","value_max":"4","value_type":"updown","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints on the post","display_order":"11","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value","display_order":"12","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value with constraints on the post","display_order":"13","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a button value","display_order":"14","value_min":"0","value_max":"1","value_type":"button","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"textbox","label":"textbox with regex","display_order":"15","max_size":"10","required":true,"regex":"^[0-9]+$","regex_error":""},{"type":"checkbox","label":"checkbox with default on","display_order":"16","checkbox_default":true},{"type":"value","label":"a linear scale value","display_order":"17","value_min":"-1000","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value","display_order":"18","value_min":"-1000000000","value_max":"1000000000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear positive scale","display_order":"19","value_min":"0","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear negative scale","display_order":"20","value_min":"-1000","value_max":"0","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset positive scale 150-250","display_order":"21","value_min":"150","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value 0 - 10000","display_order":"22","value_min":"0","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value -10000 0","display_order":"23","value_min":"-10000","value_max":"0","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value 100 - 100000","display_order":"24","value_min":"100","value_max":"100000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset negative scale -150- -250","display_order":"25","value_min":"-250","value_max":"-150","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an uneven linear scale -100 - 250","display_order":"26","value_min":"-100","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log uneven scale -100 - 10000","display_order":"27","value_min":"-100","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value -100000 - -100","display_order":"28","value_min":"-100000","value_max":"-100","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale with constraints on the post","display_order":"29","value_min":"-100","value_max":"100","value_type":"logarithmic","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear scale with constraints on the post","display_order":"30","value_min":"-100","value_max":"100","value_type":"linear","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value","display_order":"31","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value with constraint on the post","display_order":"32","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a take list","display_order":"33","value_min":null,"value_max":null,"value_type":"list","value_options":"any","rhythm_check_url":"","value_list":[{"value":"1","name":"first take value"},{"value":"2","name":"second take value"},{"value":"3","name":"third take value"}],"who_can_take":"anyone"}]},"field_id":8},"error_code":"scientia_server_get_rhythm","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : http://cobaltcascade.localhost/test/stream/test everything stream/0/0/0/openlistsuggestionsfetch Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"E01F64E7-D2F8-4DC1-866B-D6D030C0868C"}'),
	(3197, '2013-11-15 13:52:40', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":11,"block_numbers":[0],"client_timeout":1384523543137},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : timeout. ajax request error thrown : timeout."},"request_guid":"5E88E429-B741-485C-BA0C-C3F8205507E4"},"request_guid":"9A90B801-1BC1-43DA-B94B-4A41721B1D3C"}'),
	(3198, '2013-11-15 13:52:40', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":11,"block_numbers":[0],"client_timeout":1384523543137},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : timeout. ajax request error thrown : timeout."},"request_guid":"5E88E429-B741-485C-BA0C-C3F8205507E4"},"request_guid":"9A90B801-1BC1-43DA-B94B-4A41721B1D3C"},"request_guid":"AC253C6A-F219-4067-9C80-82B22EFF2E11"}'),
	(3199, '2013-11-15 13:52:40', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[],"refresh_frequency":20,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"42A0BBBA-8C21-420C-A7A0-0516F9CA3429"}'),
	(3200, '2013-11-15 13:52:41', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":11,"block_numbers":[0],"client_timeout":1384523543137},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : timeout. ajax request error thrown : timeout."},"request_guid":"5E88E429-B741-485C-BA0C-C3F8205507E4"}'),
	(3201, '2013-11-15 13:54:57', 66, 'CheckUsernameValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchOpenListSuggestions","request_data":{"text_to_fetch_suggestions_for":"","stream":{"name":"test everything stream","local_id":"6","kind":"standard","domain":"cobaltcascade.localhost","username":"test","timestamp":1325755761,"description":"A test stream containing all types of field and value","meta_url":"cobaltcascade.localhost/post/cobaltcascade.localhost/66","status":"private","version":"0/0/0","post_mode":"owner","child_streams":[{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0","post_mode":"owner"},{"name":"cobalt meta","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0","post_mode":"anyone"}],"cooldown":55,"edit_mode":"owner","fields":[null,{"type":"textbox","label":"Title","display_order":"1","max_size":"200","required":true,"regex":null,"regex_error":null},{"type":"value","label":"Main Value","display_order":"2","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":null,"who_can_take":"anyone"},{"type":"textbox","label":"a required textbox","display_order":"3","max_size":"2000","required":true,"regex":null,"regex_error":""},{"type":"checkbox","label":"a link fieldd","display_order":"4","checkbox_default":true},{"type":"value","label":"a checkbox","display_order":"5","value_min":null,"value_max":null,"value_type":"list","value_options":"rhythmpost","rhythm_check_url":null,"value_list":[],"who_can_take":"anyone"},{"type":"list","label":"a short list","display_order":"6","select_qty_max":"2","select_qty_min":"2","list":["first short list item","second short list item","third short list item"]},{"type":"list","label":"a long list","display_order":"7","select_qty_max":"5","select_qty_min":"3","list":["long list item 1","long list item 10","long list item 11","long list item 12","long list item 13","long list item 14","long list item 15","long list item 16","long list item 17","long list item 18","long list item 19","long list item 2","long list item 20","long list item 3","long list item 4","long list item 5","long list item 6","long list item 7","long list item 8","long list item 9"]},{"type":"openlist","label":"an open list","display_order":"8","select_qty_max":"4","select_qty_min":"2"},{"type":"value","label":"an updown value","display_order":"9","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints","display_order":"10","value_min":"-3","value_max":"4","value_type":"updown","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints on the post","display_order":"11","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value","display_order":"12","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value with constraints on the post","display_order":"13","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a button value","display_order":"14","value_min":"0","value_max":"1","value_type":"button","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"textbox","label":"textbox with regex","display_order":"15","max_size":"10","required":true,"regex":"^[0-9]+$","regex_error":""},{"type":"checkbox","label":"checkbox with default on","display_order":"16","checkbox_default":true},{"type":"value","label":"a linear scale value","display_order":"17","value_min":"-1000","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value","display_order":"18","value_min":"-1000000000","value_max":"1000000000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear positive scale","display_order":"19","value_min":"0","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear negative scale","display_order":"20","value_min":"-1000","value_max":"0","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset positive scale 150-250","display_order":"21","value_min":"150","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value 0 - 10000","display_order":"22","value_min":"0","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value -10000 0","display_order":"23","value_min":"-10000","value_max":"0","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value 100 - 100000","display_order":"24","value_min":"100","value_max":"100000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset negative scale -150- -250","display_order":"25","value_min":"-250","value_max":"-150","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an uneven linear scale -100 - 250","display_order":"26","value_min":"-100","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log uneven scale -100 - 10000","display_order":"27","value_min":"-100","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value -100000 - -100","display_order":"28","value_min":"-100000","value_max":"-100","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale with constraints on the post","display_order":"29","value_min":"-100","value_max":"100","value_type":"logarithmic","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear scale with constraints on the post","display_order":"30","value_min":"-100","value_max":"100","value_type":"linear","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value","display_order":"31","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value with constraint on the post","display_order":"32","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a take list","display_order":"33","value_min":null,"value_max":null,"value_type":"list","value_options":"any","rhythm_check_url":"","value_list":[{"value":"1","name":"first take value"},{"value":"2","name":"second take value"},{"value":"3","name":"third take value"}],"who_can_take":"anyone"}]},"field_id":8},"error_code":"CheckUsernameValid_failed","error_data":"scientia_server_get_rhythm","request_guid":"B3BD3F5C-D96E-4A99-A4C8-060FD801CFAF"}'),
	(3202, '2013-11-15 13:54:57', 65, 'scientia_server_get_rhythm', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchOpenListSuggestions","request_data":{"text_to_fetch_suggestions_for":"","stream":{"name":"test everything stream","local_id":"6","kind":"standard","domain":"cobaltcascade.localhost","username":"test","timestamp":1325755761,"description":"A test stream containing all types of field and value","meta_url":"cobaltcascade.localhost/post/cobaltcascade.localhost/66","status":"private","version":"0/0/0","post_mode":"owner","child_streams":[{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0","post_mode":"owner"},{"name":"cobalt meta","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0","post_mode":"anyone"}],"cooldown":55,"edit_mode":"owner","fields":[null,{"type":"textbox","label":"Title","display_order":"1","max_size":"200","required":true,"regex":null,"regex_error":null},{"type":"value","label":"Main Value","display_order":"2","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":null,"who_can_take":"anyone"},{"type":"textbox","label":"a required textbox","display_order":"3","max_size":"2000","required":true,"regex":null,"regex_error":""},{"type":"checkbox","label":"a link fieldd","display_order":"4","checkbox_default":true},{"type":"value","label":"a checkbox","display_order":"5","value_min":null,"value_max":null,"value_type":"list","value_options":"rhythmpost","rhythm_check_url":null,"value_list":[],"who_can_take":"anyone"},{"type":"list","label":"a short list","display_order":"6","select_qty_max":"2","select_qty_min":"2","list":["first short list item","second short list item","third short list item"]},{"type":"list","label":"a long list","display_order":"7","select_qty_max":"5","select_qty_min":"3","list":["long list item 1","long list item 10","long list item 11","long list item 12","long list item 13","long list item 14","long list item 15","long list item 16","long list item 17","long list item 18","long list item 19","long list item 2","long list item 20","long list item 3","long list item 4","long list item 5","long list item 6","long list item 7","long list item 8","long list item 9"]},{"type":"openlist","label":"an open list","display_order":"8","select_qty_max":"4","select_qty_min":"2"},{"type":"value","label":"an updown value","display_order":"9","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints","display_order":"10","value_min":"-3","value_max":"4","value_type":"updown","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints on the post","display_order":"11","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value","display_order":"12","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value with constraints on the post","display_order":"13","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a button value","display_order":"14","value_min":"0","value_max":"1","value_type":"button","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"textbox","label":"textbox with regex","display_order":"15","max_size":"10","required":true,"regex":"^[0-9]+$","regex_error":""},{"type":"checkbox","label":"checkbox with default on","display_order":"16","checkbox_default":true},{"type":"value","label":"a linear scale value","display_order":"17","value_min":"-1000","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value","display_order":"18","value_min":"-1000000000","value_max":"1000000000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear positive scale","display_order":"19","value_min":"0","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear negative scale","display_order":"20","value_min":"-1000","value_max":"0","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset positive scale 150-250","display_order":"21","value_min":"150","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value 0 - 10000","display_order":"22","value_min":"0","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value -10000 0","display_order":"23","value_min":"-10000","value_max":"0","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value 100 - 100000","display_order":"24","value_min":"100","value_max":"100000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset negative scale -150- -250","display_order":"25","value_min":"-250","value_max":"-150","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an uneven linear scale -100 - 250","display_order":"26","value_min":"-100","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log uneven scale -100 - 10000","display_order":"27","value_min":"-100","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value -100000 - -100","display_order":"28","value_min":"-100000","value_max":"-100","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale with constraints on the post","display_order":"29","value_min":"-100","value_max":"100","value_type":"logarithmic","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear scale with constraints on the post","display_order":"30","value_min":"-100","value_max":"100","value_type":"linear","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value","display_order":"31","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value with constraint on the post","display_order":"32","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a take list","display_order":"33","value_min":null,"value_max":null,"value_type":"list","value_options":"any","rhythm_check_url":"","value_list":[{"value":"1","name":"first take value"},{"value":"2","name":"second take value"},{"value":"3","name":"third take value"}],"who_can_take":"anyone"}]},"field_id":8},"error_code":"scientia_server_get_rhythm","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : http://cobaltcascade.localhost/test/stream/test everything stream/0/0/0/openlistsuggestionsfetch Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"64214C57-97C2-4E1C-966C-5A44EC925CBD"}'),
	(3203, '2013-11-15 13:55:46', 66, 'CheckUsernameValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchOpenListSuggestions","request_data":{"text_to_fetch_suggestions_for":"","stream":{"name":"test everything stream","local_id":"6","kind":"standard","domain":"cobaltcascade.localhost","username":"test","timestamp":1325755761,"description":"A test stream containing all types of field and value","meta_url":"cobaltcascade.localhost/post/cobaltcascade.localhost/66","status":"private","version":"0/0/0","post_mode":"owner","child_streams":[{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0","post_mode":"owner"},{"name":"cobalt meta","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0","post_mode":"anyone"}],"cooldown":55,"edit_mode":"owner","fields":[null,{"type":"textbox","label":"Title","display_order":"1","max_size":"200","required":true,"regex":null,"regex_error":null},{"type":"value","label":"Main Value","display_order":"2","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":null,"who_can_take":"anyone"},{"type":"textbox","label":"a required textbox","display_order":"3","max_size":"2000","required":true,"regex":null,"regex_error":""},{"type":"checkbox","label":"a link fieldd","display_order":"4","checkbox_default":true},{"type":"value","label":"a checkbox","display_order":"5","value_min":null,"value_max":null,"value_type":"list","value_options":"rhythmpost","rhythm_check_url":null,"value_list":[],"who_can_take":"anyone"},{"type":"list","label":"a short list","display_order":"6","select_qty_max":"2","select_qty_min":"2","list":["first short list item","second short list item","third short list item"]},{"type":"list","label":"a long list","display_order":"7","select_qty_max":"5","select_qty_min":"3","list":["long list item 1","long list item 10","long list item 11","long list item 12","long list item 13","long list item 14","long list item 15","long list item 16","long list item 17","long list item 18","long list item 19","long list item 2","long list item 20","long list item 3","long list item 4","long list item 5","long list item 6","long list item 7","long list item 8","long list item 9"]},{"type":"openlist","label":"an open list","display_order":"8","select_qty_max":"4","select_qty_min":"2"},{"type":"value","label":"an updown value","display_order":"9","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints","display_order":"10","value_min":"-3","value_max":"4","value_type":"updown","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints on the post","display_order":"11","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value","display_order":"12","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value with constraints on the post","display_order":"13","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a button value","display_order":"14","value_min":"0","value_max":"1","value_type":"button","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"textbox","label":"textbox with regex","display_order":"15","max_size":"10","required":true,"regex":"^[0-9]+$","regex_error":""},{"type":"checkbox","label":"checkbox with default on","display_order":"16","checkbox_default":true},{"type":"value","label":"a linear scale value","display_order":"17","value_min":"-1000","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value","display_order":"18","value_min":"-1000000000","value_max":"1000000000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear positive scale","display_order":"19","value_min":"0","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear negative scale","display_order":"20","value_min":"-1000","value_max":"0","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset positive scale 150-250","display_order":"21","value_min":"150","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value 0 - 10000","display_order":"22","value_min":"0","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value -10000 0","display_order":"23","value_min":"-10000","value_max":"0","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value 100 - 100000","display_order":"24","value_min":"100","value_max":"100000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset negative scale -150- -250","display_order":"25","value_min":"-250","value_max":"-150","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an uneven linear scale -100 - 250","display_order":"26","value_min":"-100","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log uneven scale -100 - 10000","display_order":"27","value_min":"-100","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value -100000 - -100","display_order":"28","value_min":"-100000","value_max":"-100","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale with constraints on the post","display_order":"29","value_min":"-100","value_max":"100","value_type":"logarithmic","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear scale with constraints on the post","display_order":"30","value_min":"-100","value_max":"100","value_type":"linear","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value","display_order":"31","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value with constraint on the post","display_order":"32","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a take list","display_order":"33","value_min":null,"value_max":null,"value_type":"list","value_options":"any","rhythm_check_url":"","value_list":[{"value":"1","name":"first take value"},{"value":"2","name":"second take value"},{"value":"3","name":"third take value"}],"who_can_take":"anyone"}]},"field_id":8},"error_code":"CheckUsernameValid_failed","error_data":"domus_request_timed_out","request_guid":"EB9DC856-2954-4CFA-8869-D59DC57837F0"}'),
	(3204, '2013-11-15 13:56:31', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10448"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10448/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"3A1586D5-4D37-4860-98CA-27E16BF2386B"}'),
	(3205, '2013-11-15 13:56:31', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10447"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10447/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"4213DA5C-2C14-4240-9DF4-1B14AE9CD856"}'),
	(3206, '2013-11-15 13:56:31', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10446"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10446/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"5142E476-356D-4D1B-8648-BF90B061AB86"}'),
	(3207, '2013-11-15 13:56:32', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10445"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10445/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"B7B2614D-0943-43AB-AD13-E090BD2BC051"}'),
	(3208, '2013-11-15 13:56:32', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10442"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10442/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"40DAF9D8-7E59-48E3-B9FD-FD030D9B1140"}'),
	(3209, '2013-11-15 13:56:33', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10444"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10444/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"843E18F3-572B-4363-8B07-40D9470835AE"}'),
	(3210, '2013-11-15 13:56:33', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10443"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10443/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"13DFB0CE-3181-4B53-B556-9D3E21DE9176"}'),
	(3211, '2013-11-15 14:09:17', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"6F4BA339-9F4F-4253-B7ED-358165AB3208"}'),
	(3212, '2013-11-15 14:09:17', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"6F4BA339-9F4F-4253-B7ED-358165AB3208"},"request_guid":"2F8698D5-AC1F-42F9-8648-2354B55368DB"}'),
	(3213, '2013-11-15 14:09:17', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[],"refresh_frequency":20,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"03BC5B8F-67B3-4E05-99B7-1EFFF4ED4C86"}'),
	(3214, '2013-11-15 14:11:36', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchOpenListSuggestions. GUID : 8944CAF4-62E7-4284-8E13-6EE7DA4F7234', '{"text_to_fetch_suggestions_for":"","stream":{"name":"test everything stream","local_id":"6","kind":"standard","domain":"cobaltcascade.localhost","username":"test","timestamp":1325755761,"description":"A test stream containing all types of field and value","meta_url":"cobaltcascade.localhost/post/cobaltcascade.localhost/66","status":"private","version":"0/0/0","post_mode":"owner","child_streams":[{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0","post_mode":"owner"},{"name":"cobalt meta","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0","post_mode":"anyone"}],"cooldown":55,"edit_mode":"owner","fields":[null,{"type":"textbox","label":"Title","display_order":"1","max_size":"200","required":true,"regex":null,"regex_error":null},{"type":"value","label":"Main Value","display_order":"2","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":null,"who_can_take":"anyone"},{"type":"textbox","label":"a required textbox","display_order":"3","max_size":"2000","required":true,"regex":null,"regex_error":""},{"type":"checkbox","label":"a link fieldd","display_order":"4","checkbox_default":true},{"type":"value","label":"a checkbox","display_order":"5","value_min":null,"value_max":null,"value_type":"list","value_options":"rhythmpost","rhythm_check_url":null,"value_list":[],"who_can_take":"anyone"},{"type":"list","label":"a short list","display_order":"6","select_qty_max":"2","select_qty_min":"2","list":["first short list item","second short list item","third short list item"]},{"type":"list","label":"a long list","display_order":"7","select_qty_max":"5","select_qty_min":"3","list":["long list item 1","long list item 10","long list item 11","long list item 12","long list item 13","long list item 14","long list item 15","long list item 16","long list item 17","long list item 18","long list item 19","long list item 2","long list item 20","long list item 3","long list item 4","long list item 5","long list item 6","long list item 7","long list item 8","long list item 9"]},{"type":"openlist","label":"an open list","display_order":"8","select_qty_max":"4","select_qty_min":"2"},{"type":"value","label":"an updown value","display_order":"9","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints","display_order":"10","value_min":"-3","value_max":"4","value_type":"updown","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an updown value with constraints on the post","display_order":"11","value_min":"-1000000000","value_max":"1000000000","value_type":"updown","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value","display_order":"12","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a textbox value with constraints on the post","display_order":"13","value_min":"-1000000000","value_max":"1000000000","value_type":"textbox","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a button value","display_order":"14","value_min":"0","value_max":"1","value_type":"button","value_options":"any","rhythm_check_url":"","who_can_take":"anyone"},{"type":"textbox","label":"textbox with regex","display_order":"15","max_size":"10","required":true,"regex":"^[0-9]+$","regex_error":""},{"type":"checkbox","label":"checkbox with default on","display_order":"16","checkbox_default":true},{"type":"value","label":"a linear scale value","display_order":"17","value_min":"-1000","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value","display_order":"18","value_min":"-1000000000","value_max":"1000000000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear positive scale","display_order":"19","value_min":"0","value_max":"1000","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear negative scale","display_order":"20","value_min":"-1000","value_max":"0","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset positive scale 150-250","display_order":"21","value_min":"150","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value 0 - 10000","display_order":"22","value_min":"0","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale value -10000 0","display_order":"23","value_min":"-10000","value_max":"0","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value 100 - 100000","display_order":"24","value_min":"100","value_max":"100000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear offset negative scale -150- -250","display_order":"25","value_min":"-250","value_max":"-150","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"an uneven linear scale -100 - 250","display_order":"26","value_min":"-100","value_max":"250","value_type":"linear","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log uneven scale -100 - 10000","display_order":"27","value_min":"-100","value_max":"10000","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale offset value -100000 - -100","display_order":"28","value_min":"-100000","value_max":"-100","value_type":"logarithmic","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a log scale with constraints on the post","display_order":"29","value_min":"-100","value_max":"100","value_type":"logarithmic","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a linear scale with constraints on the post","display_order":"30","value_min":"-100","value_max":"100","value_type":"linear","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value","display_order":"31","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminglobal","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a stars value with constraint on the post","display_order":"32","value_min":"0","value_max":"5","value_type":"stars","value_options":"maxminpost","rhythm_check_url":"","who_can_take":"anyone"},{"type":"value","label":"a take list","display_order":"33","value_min":null,"value_max":null,"value_type":"list","value_options":"any","rhythm_check_url":"","value_list":[{"value":"1","name":"first take value"},{"value":"2","name":"second take value"},{"value":"3","name":"third take value"}],"who_can_take":"anyone"}]},"field_id":8}'),
	(3215, '2013-11-15 14:16:58', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":6,"block_numbers":[0],"client_timeout":1384525046497},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"E5A04A68-FF96-455B-8E72-DBCE81080BE9"},"request_guid":"D821E8BA-8330-4E60-ADDD-B9DF51C582FB"}'),
	(3216, '2013-11-15 14:16:58', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":6,"block_numbers":[0],"client_timeout":1384525046497},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"E5A04A68-FF96-455B-8E72-DBCE81080BE9"},"request_guid":"D821E8BA-8330-4E60-ADDD-B9DF51C582FB"},"request_guid":"985BCC1D-34F6-4854-8B1C-F80D8B4D17B6"}'),
	(3217, '2013-11-15 14:16:58', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[],"refresh_frequency":20,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"0AEBA9AA-F29B-4094-8F9A-602F65AE99C7"}'),
	(3218, '2013-11-15 14:16:58', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":6,"block_numbers":[0],"client_timeout":1384525046497},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"E5A04A68-FF96-455B-8E72-DBCE81080BE9"}'),
	(3219, '2013-11-15 14:17:29', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : 6771DD20-B910-4774-A6CD-0E1453245FC8', '{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test everything stream","version":"0/0/0"}}'),
	(3220, '2013-11-15 14:17:53', 66, 'scientia_server_get_posts', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":4,"block_numbers":[0],"client_timeout":1384525101185},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getpostslatest Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"0974A0ED-AFCF-45A0-8223-861F2E7D85DF"},"request_guid":"2C39DD0F-7F00-4566-95CC-93C6FB491EA3"}'),
	(3221, '2013-11-15 14:17:53', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"test","name":"test datesort","version":"0/0/0","date_created":1320743440,"status":"public","description":"Sort items by date","js":"function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":4,"block_numbers":[0],"client_timeout":1384525101185},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getpostslatest Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"0974A0ED-AFCF-45A0-8223-861F2E7D85DF"},"request_guid":"2C39DD0F-7F00-4566-95CC-93C6FB491EA3"},"request_guid":"5833F63E-1597-4329-92BD-861061BCA7E8"}'),
	(3222, '2013-11-15 14:17:53', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/test/rhythm/test datesort/latest/latest/latest/json","name":"test datesort"},"moderation_rings":[],"refresh_frequency":20,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"3C015F29-188D-483D-B0E1-88D63D8297F8"}'),
	(3223, '2013-11-15 14:17:53', 65, 'scientia_server_get_posts', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/test/stream/test everything stream/0/0/0/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":true,"sort_id":4,"block_numbers":[0],"client_timeout":1384525101185},"with_content":false},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /test/stream/test everything stream/0/0/0/getpostslatest Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"0974A0ED-AFCF-45A0-8223-861F2E7D85DF"}'),
	(3224, '2013-11-18 08:39:00', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"5411E036-0F42-47DC-A2A3-3017D4C7B3B0"}'),
	(3225, '2013-11-18 08:39:00', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"14E4B9CC-2109-4A3B-96F6-4598D55E746A"}'),
	(3226, '2013-11-18 09:26:27', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"A81253A3-0E90-4A1F-8EAD-B29A3316ECF9"}'),
	(3227, '2013-11-18 09:26:27', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"2E3BEDDD-4D5F-4169-8EE2-2944F91A6C29"}'),
	(3228, '2013-11-18 10:25:43', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"DC15E559-610B-4BE9-B916-C3AC27829A12"}'),
	(3229, '2013-11-18 10:25:43', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"5B30CD2C-47C5-443E-B4DA-90A2E3B5CC24"}'),
	(3230, '2013-11-18 11:37:05', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : BCE851FF-40EA-4344-AF21-7E3D1E599E18', '{"stream":{"domain":"cobaltcascade.localhost","username":"test","name":"test everything stream","version":"0/0/0"}}'),
	(3231, '2013-11-18 12:17:11', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"B8342FE7-4F71-44D7-A952-25DE5714BFA1"}'),
	(3232, '2013-11-18 12:17:11', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"ABF6DC44-2961-4A44-942F-0409B245561A"}'),
	(3233, '2013-11-18 13:23:52', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"B8E8E49D-9FDE-4947-AF9D-4404AA4FBE9F"}'),
	(3234, '2013-11-18 13:23:52', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"3ACD9B26-80DA-4D10-B998-C9E89441D0C4"}'),
	(3235, '2013-11-18 13:37:36', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0"},"content":[{"display_order":"1","text":"test"},{"display_order":"2"},{"display_order":"3","text":"test"},{"display_order":"4","checked":true},{"display_order":"5"},{"display_order":"6","selected":[]},{"display_order":"7","selected":[]},{"display_order":"8","selected":["test","what would this be","tr"]},{"display_order":"9"},{"display_order":"10"},{"display_order":"11","value_min":"10","value_max":"100"},{"display_order":"12"},{"display_order":"13","value_min":"10","value_max":"2100"},{"display_order":"14"},{"display_order":"15","text":"10"},{"display_order":"16","checked":true},{"display_order":"17"},{"display_order":"18"},{"display_order":"19"},{"display_order":"20"},{"display_order":"21"},{"display_order":"22"},{"display_order":"23"},{"display_order":"24"},{"display_order":"25"},{"display_order":"26"},{"display_order":"27"},{"display_order":"28"},{"display_order":"29","value_min":"10","value_max":"100"},{"display_order":"30","value_min":"10","value_max":"100"},{"display_order":"31"},{"display_order":"32","value_min":"0","value_max":"10"},{"display_order":"33"}],"post_id":"10455","private_addresses":[],"submitting_user":{"username":"test","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"E43A1022-1C0F-4FB9-88CA-C2E4E2ADC498"}'),
	(3236, '2013-11-18 13:37:36', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"test everything stream","domain":"cobaltcascade.localhost","username":"test","version":"0/0/0"},"content":[{"display_order":"1","text":"test"},{"display_order":"2"},{"display_order":"3","text":"test"},{"display_order":"4","checked":true},{"display_order":"5"},{"display_order":"6","selected":[]},{"display_order":"7","selected":[]},{"display_order":"8","selected":["test","what would this be","tr"]},{"display_order":"9"},{"display_order":"10"},{"display_order":"11","value_min":"10","value_max":"100"},{"display_order":"12"},{"display_order":"13","value_min":"10","value_max":"2100"},{"display_order":"14"},{"display_order":"15","text":"10"},{"display_order":"16","checked":true},{"display_order":"17"},{"display_order":"18"},{"display_order":"19"},{"display_order":"20"},{"display_order":"21"},{"display_order":"22"},{"display_order":"23"},{"display_order":"24"},{"display_order":"25"},{"display_order":"26"},{"display_order":"27"},{"display_order":"28"},{"display_order":"29","value_min":"10","value_max":"100"},{"display_order":"30","value_min":"10","value_max":"100"},{"display_order":"31"},{"display_order":"32","value_min":"0","value_max":"10"},{"display_order":"33"}],"post_id":"10455","private_addresses":[],"submitting_user":{"username":"test","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"5477FC2F-CA62-46B0-8042-12809F707895"}'),
	(3237, '2013-11-18 13:43:18', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"babbling brook alpha tasks","version":"0/0/0","date_created":1380721587,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"29EA88E9-2014-49B0-AED3-C958B6C63023"}'),
	(3238, '2013-11-18 13:43:18', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/babbling brook alpha tasks/latest/latest/latest/json","name":"babbling brook alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"73736EB7-BBD7-422C-BFFB-364B2612FE19"}'),
	(3239, '2013-11-18 13:52:59', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"babbling brook alpha tasks","version":"0/0/0","date_created":1380721587,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"84073B95-F0F9-4132-A395-F961F02A1DDF"}'),
	(3240, '2013-11-18 13:52:59', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/babbling brook alpha tasks/latest/latest/latest/json","name":"babbling brook alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"45818495-B1CC-48D5-8761-48154D269D14"}'),
	(3241, '2013-11-18 13:59:24', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"CC51F581-D1C5-4648-9C38-4C37962CBA04"}'),
	(3242, '2013-11-18 13:59:24', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"EB86130E-3BC7-4EEB-9001-2D2A645795B2"}'),
	(3243, '2013-11-18 14:06:46', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"babbling brook alpha tasks","version":"0/0/0","date_created":1380721587,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"94E18E62-D98C-425E-9E39-37D3833BE492"}'),
	(3244, '2013-11-18 14:06:46', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/babbling brook alpha tasks/latest/latest/latest/json","name":"babbling brook alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"E7C5E472-F589-4883-8ACF-30BB53D69D7D"}'),
	(3245, '2013-11-18 14:11:51', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"babbling brook alpha tasks","version":"0/0/0","date_created":1380721587,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"649963EE-1AE4-4597-8511-6975DE1ACBCE"}'),
	(3246, '2013-11-18 14:11:51', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/babbling brook alpha tasks/latest/latest/latest/json","name":"babbling brook alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"563F7003-8B86-4A19-B6BA-F0E400C646B8"}'),
	(3247, '2013-11-18 14:18:09', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"FFE22908-28CB-43F4-A083-D833208C7148"}'),
	(3248, '2013-11-18 14:18:10', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"2DFAB15F-973D-4057-BEA6-AEEE2EB14F3F"}'),
	(3249, '2013-11-18 14:36:50', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"4B3B660C-E8F5-40FD-86FB-694510A46C28"}'),
	(3250, '2013-11-18 14:36:51', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"57110554-BCAD-47DA-9B19-B87A1C12FBA1"}'),
	(3251, '2013-11-18 14:37:57', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"F6068A30-31BA-438C-B3D7-E21C68236C8B"}'),
	(3252, '2013-11-18 14:37:57', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"69C8DCC1-02A2-4FDB-8879-C9F529EBDF01"}'),
	(3253, '2013-11-18 14:51:57', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"D15D672F-3478-4DE5-92CF-622412AD0E96"}'),
	(3254, '2013-11-18 14:51:57', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/latest/latest/latest/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"58846D9A-FE8A-49E7-86F8-C197C4CD08FD"}'),
	(3255, '2013-11-18 14:54:59', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"119B2E13-EC97-4579-87E9-F76904D68493"}'),
	(3256, '2013-11-18 14:54:59', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"905BB0B7-83D1-4DB2-BADD-5935B36D37E1"}'),
	(3257, '2013-11-18 14:58:19', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"00044A6F-CDE3-4DD6-B6A8-29151D65B539"}'),
	(3258, '2013-11-18 14:58:19', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"BF937EA6-B03A-40E7-9707-6538ACFB4CF0"}'),
	(3259, '2013-11-18 15:25:26', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"public","description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post       \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"72CD8DCE-1F0D-4520-84B6-3805CC21673F"}'),
	(3260, '2013-11-18 15:25:26', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/latest/latest/latest/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"79B94FF2-1553-4E1F-B6F0-5A064EF8E513"}'),
	(3261, '2013-11-18 15:31:45', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"DBA1FF59-6820-43DA-A177-7352ADF06067"}'),
	(3262, '2013-11-18 15:31:45', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"5ED6666C-1C52-4D3A-954C-D7FB8FD6102D"}'),
	(3263, '2013-11-18 16:15:37', 158, 'rhythm_getMiscData_error', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"private","params":[{"name":"meta task","hint":"Select a meta task to limit the results to just that task"}],"description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var client_params;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        client_params = BabblingBrook.Filter.getClientParams();\\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        \\r\\n        // remove tasks that are not in the filter\\r\\n        if (typeof client_params[\'meta task\'] === \'string\' && client_params[\'meta task\'] !== \'\') {\\r\\n            if (jQuery.inArray(client_params[\'meta task\'], post.content[4].selected) === -1) {\\r\\n                BabblingBrook.Filter.processNextPost(-10000);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/0/0/0/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"rhythm_getMiscData_error","error_data":"filter_request_timed_out","request_guid":"2108D2BA-A01D-4293-9E94-8B5EB2AABBA4"}'),
	(3264, '2013-11-18 16:15:37', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/0/0/0/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/0/0/0/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"6819769E-D84C-472C-BE0B-3E38A476DA81"}'),
	(3265, '2013-11-18 16:22:01', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","params":[],"description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"12229078-103D-4A5A-8A52-DEDE71115FD6"}'),
	(3266, '2013-11-18 16:22:01', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"713054D8-DDE3-4D24-9C97-8C66CA1296D8"}'),
	(3267, '2013-11-18 16:40:43', 66, 'SortRequest_filter', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json","priority":10,"name":"skys task priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"SortRequest_filter","error_data":{},"request_guid":"6041174C-A0D4-4290-B91C-5333B253747D"}'),
	(3268, '2013-11-18 16:40:43', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"tasks","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"F49E1D60-839B-4FB3-BE8D-457DE39AE718"}'),
	(3269, '2013-11-18 16:40:43', 65, 'scientia_server_get_rhythm', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RhythmFetch","request_data":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json"},"error_code":"scientia_server_get_rhythm","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/rhythm/skys task priority/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"F330829C-ADB2-487B-8008-611093ECA8C7"}'),
	(3270, '2013-11-18 16:40:43', 66, 'SortRequest_filter', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"SortRequest_filter","error_data":{},"request_guid":"1A39454E-39DF-4A33-8EF9-580D01B8F7C2"}'),
	(3271, '2013-11-18 16:40:44', 65, 'scientia_server_get_rhythm', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RhythmFetch","request_data":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json"},"error_code":"scientia_server_get_rhythm","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/rhythm/newest/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"B4D42D42-229C-425B-89F5-74046DA03EA9"}'),
	(3272, '2013-11-18 16:40:44', 66, 'SortRequest_filter', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json","priority":10,"name":"skys task priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"SortRequest_filter","error_data":{},"request_guid":"60067EC5-07FC-4D91-939B-8FAD96A86464"}'),
	(3273, '2013-11-18 16:40:44', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"tasks","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"40F5EA28-4A5A-4A60-B0C6-1E26784FCBEE"}'),
	(3274, '2013-11-18 16:40:44', 65, 'scientia_server_get_stream', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"tasks","version":"latest/latest/latest"}},"error_code":"scientia_server_get_stream","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"AF1DA5E1-407E-45CE-A0EE-5A4801C2F9AA"}'),
	(3275, '2013-11-18 16:40:44', 66, 'CheckDomainValid_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"FetchStream","request_data":{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"tasks","version":"latest/latest/latest"}},"error_code":"CheckDomainValid_failed","error_data":"scientia_server_get_stream","request_guid":"682F2968-1D5F-4247-9369-281DD0D2EA3C"}'),
	(3276, '2013-11-18 16:41:04', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10144"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10144/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"B52EA578-34FC-4E51-8EAB-B660512291F7"}'),
	(3277, '2013-11-18 16:41:04', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10232"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10232/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"CC69C134-7C86-49A2-A0FB-D7BC4AEF23BD"}'),
	(3278, '2013-11-18 16:41:05', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10231"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10231/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"3989020C-FA33-48DD-83F7-A2D61F209919"}'),
	(3279, '2013-11-18 16:41:05', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":true},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"727AEE0F-359E-42F9-ADBD-36B592ACB0BA"}'),
	(3280, '2013-11-18 16:41:05', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10264"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"5108E735-18CA-45D8-A0F5-8D169B66613D"}'),
	(3281, '2013-11-18 16:41:05', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10145"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10145/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"536262EA-3DEC-4C81-8D08-08E3AF1F0F41"}'),
	(3282, '2013-11-18 16:41:05', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10261"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"601C503A-0F68-4D60-B3FB-E2F7CA82CA2B"}'),
	(3283, '2013-11-18 16:41:05', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10109"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"D69EB383-7C0F-4AD8-9EF6-90DB152E4401"}'),
	(3284, '2013-11-18 16:41:05', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10263"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"79C2CAC3-CE33-4739-9D88-FE02B4E4ADC6"}'),
	(3285, '2013-11-18 16:41:05', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"private","params":[{"name":"meta task","hint":"Select a meta task to limit the results to just that task"}],"description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var client_params;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        client_params = BabblingBrook.Filter.getClientParams();\\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        \\r\\n        // remove tasks that are not in the filter\\r\\n        if (typeof client_params[\'meta task\'] === \'string\' && client_params[\'meta task\'] !== \'\') {\\r\\n            if (jQuery.inArray(client_params[\'meta task\'], post.content[6].selected) === -1) {\\r\\n                BabblingBrook.Filter.processNextPost(-10000);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":true},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"727AEE0F-359E-42F9-ADBD-36B592ACB0BA"},"request_guid":"0B503A0D-D1FB-45CF-A46F-F679C80A9FF4"}'),
	(3286, '2013-11-18 16:41:05', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10265"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"A3F370C0-5711-4F61-9A7F-6E7B27C936D8"}'),
	(3287, '2013-11-18 16:41:06', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10110"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"9E885FAF-71F3-454C-B623-A9446C53B33E"}'),
	(3288, '2013-11-18 16:41:07', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/latest/latest/latest/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"0F11CC74-5B47-4A07-85B6-400006430874"}'),
	(3289, '2013-11-18 16:41:23', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/latest/latest/latest/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"posts_to_timestamp":null,"client_params":{"meta task":"test"},"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"BD49B4BB-9BDD-4AE8-BE03-A16F6A503D5A"}'),
	(3290, '2013-11-18 16:41:27', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/latest/latest/latest/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"posts_to_timestamp":null,"client_params":{"meta task":"test"},"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"0D465CAA-7941-4CD8-9437-A5580313DB62"}'),
	(3291, '2013-11-18 16:41:27', 158, 'filter_rhythm_main', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"private","params":[{"name":"meta task","hint":"Select a meta task to limit the results to just that task"}],"description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var client_params;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        client_params = BabblingBrook.Filter.getClientParams();\\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        \\r\\n        // remove tasks that are not in the filter\\r\\n        if (typeof client_params[\'meta task\'] === \'string\' && client_params[\'meta task\'] !== \'\') {\\r\\n            if (jQuery.inArray(client_params[\'meta task\'], post.content[6].selected) === -1) {\\r\\n                BabblingBrook.Filter.processNextPost(-10000);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","client_params":{"meta task":"test"}},"error_code":"filter_rhythm_main","error_data":{"error_message":"post.content[6] is undefined"},"request_guid":"8289DEDD-B5A5-4985-AF46-CB7583145C7D"}'),
	(3292, '2013-11-18 16:41:27', 158, 'filter_rhythm_main', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"private","params":[{"name":"meta task","hint":"Select a meta task to limit the results to just that task"}],"description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var client_params;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        client_params = BabblingBrook.Filter.getClientParams();\\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        \\r\\n        // remove tasks that are not in the filter\\r\\n        if (typeof client_params[\'meta task\'] === \'string\' && client_params[\'meta task\'] !== \'\') {\\r\\n            if (jQuery.inArray(client_params[\'meta task\'], post.content[6].selected) === -1) {\\r\\n                BabblingBrook.Filter.processNextPost(-10000);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","client_params":{"meta task":"test"}},"error_code":"filter_rhythm_main","error_data":{"error_message":"post.content[6] is undefined"},"request_guid":"158FA6D9-C7AB-406B-A725-9D812C94F1D7"}'),
	(3293, '2013-11-18 16:41:27', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/latest/latest/latest/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"posts_to_timestamp":null,"client_params":{"meta task":"test"},"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"5DD863C0-DB4D-4E35-98CD-813B6ACEA7A0"}'),
	(3294, '2013-11-18 16:45:36', 66, 'GetPosts_private', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"C5C6BF91-3673-4DEA-986D-C72A9B4D7191"}'),
	(3295, '2013-11-18 16:45:37', 158, 'SortRequest_private', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"newest","version":"0/0/0","date_created":1371201607,"status":"public","params":[],"description":"Sort items by date, with the newest first.","js":"function () {\\r\\n\\tvar main = function (post) {\\r\\n      var sort_value = post.timestamp;\\r\\n      BabblingBrook.Filter.processNextPost(sort_value);\\r\\n\\t};\\r\\n  \\r\\n\\treturn {\\r\\n      main : main\\r\\n\\t};\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_private","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"GetPosts_private","error_data":"filter_getprivateposts","request_guid":"C5C6BF91-3673-4DEA-986D-C72A9B4D7191"},"request_guid":"9EF26149-9CDA-45F5-B7BE-2B441456B13B"}'),
	(3296, '2013-11-18 16:45:37', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"2789ABEA-0028-4DD4-B03B-70C8222F2BFA"}'),
	(3297, '2013-11-18 16:45:58', 158, 'filter_rhythm_main', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"private","params":[{"name":"meta task","hint":"Select a meta task to limit the results to just that task"}],"description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var client_params;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        client_params = BabblingBrook.Filter.getClientParams();\\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        \\r\\n        // remove tasks that are not in the filter\\r\\n        if (typeof client_params[\'meta task\'] === \'string\' && client_params[\'meta task\'] !== \'\') {\\r\\n            if (jQuery.inArray(client_params[\'meta task\'], post.content[6].selected) === -1) {\\r\\n                BabblingBrook.Filter.processNextPost(-10000);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","client_params":{"meta task":"test"}},"error_code":"filter_rhythm_main","error_data":{"error_message":"post.content[6] is undefined"},"request_guid":"89B3A31F-E18F-41F3-B5AE-330F8D7A9120"}'),
	(3298, '2013-11-18 16:45:58', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/latest/latest/latest/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"posts_to_timestamp":null,"client_params":{"meta task":"test"},"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"ABA996DD-1551-4A12-80D9-190796269692"}'),
	(3299, '2013-11-18 16:47:38', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10265"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10265/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"5DFAC721-8F1C-49AF-91B9-FCA66150D5C3"}'),
	(3300, '2013-11-18 16:47:38', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10091"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10091/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"81A8249B-12C2-4C45-A840-F1611D9B26E7"}'),
	(3301, '2013-11-18 16:47:38', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10092"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10092/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"8C0DF565-E1EB-45FE-B7DD-16C6BCEF0441"}'),
	(3302, '2013-11-18 16:47:38', 65, 'scientia_server_get_posts', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":3,"client_timeout":1384793284362},"with_content":true},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/getpostsblock Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"2AAE8E18-7C65-455E-A082-7C6460ECB4F7"}'),
	(3303, '2013-11-18 16:47:38', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10231"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10231/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"0995A912-51E6-42F6-9268-E932F1F1E670"}'),
	(3304, '2013-11-18 16:47:38', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10261"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10261/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"F52D0EB6-6841-4B30-BFAA-19F2CE391D59"}'),
	(3305, '2013-11-18 16:47:39', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10048"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"C8248BCE-5465-4855-8CD8-4595A8E8C635"}'),
	(3306, '2013-11-18 16:47:39', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10064"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"42F286DD-8760-4825-846D-7B0028C3D00D"}'),
	(3307, '2013-11-18 16:47:39', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10456"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"90121D0E-8FC5-4DF1-8CC6-2C362FB6C9AB"}'),
	(3308, '2013-11-18 16:47:39', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10038"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"E3F978A2-B3B8-48E0-9D59-23D0F242E954"}'),
	(3309, '2013-11-18 16:47:39', 66, 'GetPost_takes_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"domain":"cobaltcascade.localhost","post_id":"10130"},"error_code":"GetPost_takes_failed","error_data":"GetTakes_failed","request_guid":"418576CB-E96F-49C1-B0A4-BFC9EF17A04C"}'),
	(3310, '2013-11-18 16:47:40', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"private","params":[{"name":"meta task","hint":"Select a meta task to limit the results to just that task"}],"description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var client_params;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        client_params = BabblingBrook.Filter.getClientParams();\\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        \\r\\n        // remove tasks that are not in the filter\\r\\n        if (typeof client_params[\'meta task\'] === \'string\' && client_params[\'meta task\'] !== \'\') {\\r\\n            if (jQuery.inArray(client_params[\'meta task\'], post.content[6].selected) === -1) {\\r\\n                BabblingBrook.Filter.processNextPost(-10000);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":true},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":3,"client_timeout":1384793284362},"with_content":true},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/getpostsblock Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"2AAE8E18-7C65-455E-A082-7C6460ECB4F7"},"request_guid":"E0F839C0-7055-4435-B115-DEB13094FCA7"},"request_guid":"DD7E5772-B6AD-4662-B482-F7A9EB49182C"}'),
	(3311, '2013-11-18 16:47:40', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10263"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10263/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"30CCD21B-CB3C-4C8B-A589-07A646A057A4"}'),
	(3312, '2013-11-18 16:47:40', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10145"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10145/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"8992320B-16E3-4AF2-94C1-FA3345C9D3E7"}'),
	(3313, '2013-11-18 16:47:40', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10144"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10144/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"78283585-6095-4543-A695-8414224DA6A5"}'),
	(3314, '2013-11-18 16:47:40', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10232"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10232/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"D10ADE30-DFDF-420D-971B-AB6C0D7F9136"}'),
	(3315, '2013-11-18 16:47:40', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10110"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10110/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"B2DECAEF-A829-49F4-ABBE-943B0635729A"}'),
	(3316, '2013-11-18 16:47:40', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10097"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10097/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"92F05C3A-C1E3-496E-A217-D4C7EB12A10A"}'),
	(3317, '2013-11-18 16:47:41', 66, 'scientia_server_get_posts', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":true},"error_code":"scientia_server_get_posts","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":3,"client_timeout":1384793284362},"with_content":true},"error_code":"scientia_server_get_posts","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/getpostsblock Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"2AAE8E18-7C65-455E-A082-7C6460ECB4F7"},"request_guid":"E0F839C0-7055-4435-B115-DEB13094FCA7"}'),
	(3318, '2013-11-18 16:47:41', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10090"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10090/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"3BBDBD91-FB44-4EA5-8714-C469651A072C"}'),
	(3319, '2013-11-18 16:47:41', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10109"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10109/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"B81C4FEA-4927-4AB6-9457-11F07F56558F"}'),
	(3320, '2013-11-18 16:47:41', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10264"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10264/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"14F9238C-B323-4CC6-AC27-875C1077A4F7"}'),
	(3321, '2013-11-18 16:48:26', 158, 'filter_rhythm_main', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"private","params":[{"name":"meta task","hint":"Select a meta task to limit the results to just that task"}],"description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var client_params;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        client_params = BabblingBrook.Filter.getClientParams();\\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        \\r\\n        // remove tasks that are not in the filter\\r\\n        if (typeof client_params[\'meta task\'] === \'string\' && client_params[\'meta task\'] !== \'\') {\\r\\n            if (jQuery.inArray(client_params[\'meta task\'], post.content[6].selected) === -1) {\\r\\n                BabblingBrook.Filter.processNextPost(-10000);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","client_params":{"meta task":"test"}},"error_code":"filter_rhythm_main","error_data":{"error_message":"post.content[6] is undefined"},"request_guid":"752E92B0-8A78-48C8-9F52-6F645F0E05DC"}'),
	(3322, '2013-11-18 16:48:26', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/latest/latest/latest/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"posts_to_timestamp":null,"client_params":{"meta task":"test"},"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"9A85493B-D989-4834-B8C3-8894F3AA7469"}'),
	(3323, '2013-11-18 16:52:28', 158, 'filter_rhythm_main', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"cobalt cascade alpha tasks","version":"0/0/0","date_created":1380712525,"status":"private","params":[{"name":"meta task","hint":"Select a meta task to limit the results to just that task"}],"description":"A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\\r\\n","js":"function () {\\r\\n\\r\\n    var sky_takes_fetched = false;\\r\\n  \\r\\n    var sky_takes_fetched_count = 0;\\r\\n\\r\\n    var sky_status_takes_fetched = false;\\r\\n  \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n  \\r\\n    var calculate_ready = false;  \\r\\n  \\r\\n    var sky_takes = [];\\r\\n  \\r\\n    var sky_status_takes = [];\\r\\n  \\r\\n    var stream_name;\\r\\n  \\r\\n    var stream_version;\\r\\n  \\r\\n    var stream_domain;\\r\\n  \\r\\n    var stream_username;\\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var client_params;\\r\\n  \\r\\n    var onTakesFetched = function (block_numbers_length, data) {           \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n\\tvar onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n  \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort = 0;\\r\\n        var post_id = post.post_id;\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\t\\r\\n\\t\\t\\r\\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\\r\\n            sort = -10000;\\r\\n\\t\\t} else if (status_value === 2) {\\r\\n            sort = -10000;\\t\\r\\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort = 0;\\r\\n        }  \\r\\n\\t\\t\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n  \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys open bugs filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n\\t\\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };    \\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \\r\\n        client_params = BabblingBrook.Filter.getClientParams();\\r\\n        BabblingBrook.Filter.setPostsWithContent(true);\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n  \\r\\n    var main = function (current_post) {\\r\\n        post = current_post;\\r\\n        \\r\\n        if (typeof post.content[6] === \'undefined\') {\\r\\n            console.log(post.post_id);\\r\\n            BabblingBrook.Filter.processNextPost(-10000);\\r\\n            return;\\r\\n        }\\r\\n        \\r\\n        // remove tasks that are not in the filter\\r\\n        if (typeof client_params[\'meta task\'] === \'string\' && client_params[\'meta task\'] !== \'\') {\\r\\n            if (jQuery.inArray(client_params[\'meta task\'], post.content[6].selected) === -1) {\\r\\n                BabblingBrook.Filter.processNextPost(-10000);\\r\\n                return;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                            block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=5\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  \\t\\t\\t\\t\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return {\\r\\n      init : init,\\r\\n      main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"filter_rhythm_main","error_data":{"error_message":"post.content is undefined"},"request_guid":"73A9ED7E-6CF1-411C-ABE2-0778DB42EDC9"}'),
	(3324, '2013-11-18 16:52:28', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","post_id":null,"filter":{"url":"cobaltcascade.localhost/sky/rhythm/cobalt cascade alpha tasks/latest/latest/latest/json","name":"cobalt cascade alpha tasks"},"moderation_rings":[],"refresh_frequency":180,"update":true,"block_numbers":[0],"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"F2E8A025-A547-4BE2-98F3-22AAC28867A6"}'),
	(3325, '2013-11-18 16:58:38', 65, 'scientia_server_get_rhythm', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RhythmFetch","request_data":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json"},"error_code":"scientia_server_get_rhythm","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/rhythm/newest/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"61CD45CC-3FC2-4A01-A075-A139989AE719"}'),
	(3326, '2013-11-18 16:58:38', 66, 'SortRequest_filter', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"SortRequest_filter","error_data":{},"request_guid":"3BA65F55-9B0F-4BBE-8FAC-08B0CFDBF484"}'),
	(3327, '2013-11-18 17:01:35', 65, 'scientia_server_get_rhythm', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RhythmFetch","request_data":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json"},"error_code":"scientia_server_get_rhythm","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/rhythm/newest/latest/latest/latest/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"67A5A189-FC57-4F4F-879D-CEF72DF5861C"}'),
	(3328, '2013-11-18 17:01:35', 65, 'scientia_server_get_block_details', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1384794121034},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"47ED2786-057D-4638-B0B2-3B2DF118E544"}'),
	(3329, '2013-11-18 17:01:36', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json","priority":10,"name":"skys task priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"85BA5E8D-69F6-479F-8811-07235DEF19B0"}'),
	(3330, '2013-11-18 17:01:36', 158, 'SortRequest_stream', 'filter domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"stream","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"skys task priority","version":"0/0/0","date_created":1372846552,"status":"public","params":[],"description":"Removes tasks that have been completed and orders the results by the take value that user sky has given the main value","js":"function () {\\r\\n    var sky_takes_fetched = false;\\r\\n    \\r\\n    var sky_takes_fetched_count = 0;\\r\\n    \\r\\n    var sky_status_takes_fetched = false;\\r\\n    \\r\\n    var sky_status_takes_fetched_count = 0;\\r\\n    \\r\\n    var calculate_ready = false;  \\r\\n    \\r\\n    var sky_takes = [];\\r\\n    \\r\\n    var sky_status_takes = [];\\r\\n    \\r\\n    var stream_name;\\r\\n    \\r\\n    var stream_version;\\r\\n    \\r\\n    var stream_domain;\\r\\n    \\r\\n    var stream_username;  \\r\\n    \\r\\n    var post;\\r\\n    \\r\\n    var onTakesFetched = function (block_numbers_length, data) {   \\r\\nconsole.debug(data);        \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_takes_fetched_count++;\\r\\n        if (sky_takes_fetched_count === block_numbers_length) {\\r\\n            sky_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        } \\r\\n    };\\r\\n    \\r\\n    var onStatusTakesFetched = function (block_numbers_length, data) {   \\r\\n        var data_length = data.takes.length;\\r\\n        for (var j = 0; j < data_length; j++) {                      \\r\\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\\r\\n        }\\r\\n        sky_status_takes_fetched_count++;\\r\\n        if (sky_status_takes_fetched_count === block_numbers_length) {\\r\\n            sky_status_takes_fetched = true;\\r\\n        }\\r\\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    var calculateSort = function () {  \\r\\n        calculate_ready = true;\\r\\n        var sort_value = 0;\\r\\n        var post_id = post.post_id;   \\r\\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\\r\\n            sort_value = sky_takes[\'o_\' + post_id];\\r\\n        } else {\\r\\n            sort_value = 0;\\r\\n        }\\r\\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \\r\\n        if (isNaN(status_value) === false) {\\r\\n            if (status_value === 3) {\\r\\n                sort_value = -10000;\\r\\n            }\\r\\n        }      \\r\\n        BabblingBrook.Filter.processNextPost(sort_value);\\r\\n    };\\r\\n    \\r\\n    var onTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching takes failed.\\");\\r\\n    };\\r\\n    \\r\\n    var onStatusTakesFetchedError = function () {\\r\\n        console.error(\\"skys task priority filter error. Fetching status takes failed.\\");\\r\\n    };\\r\\n    var init = function () {\\r\\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\\r\\n        stream_name = BabblingBrook.Library.extractName(stream_url);\\r\\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\\r\\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\\r\\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);              \\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (current_post) {\\r\\n        post = current_post\\r\\n        if (calculate_ready === false) {            \\r\\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \\r\\n            for (var i = 0; i < block_numbers_length; i++) {   \\r\\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];         \\r\\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\\r\\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \\r\\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \\r\\n                        block_number + \'&type=stream&field_id=6\';\\r\\n\\t\\t\\t\\tBabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));\\r\\n            }\\r\\n        } else {\\r\\n            calculateSort();\\r\\n        }\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"},"stream":{"url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","posts_from_timestamp":null,"posts_to_timestamp":null},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost"},"error_code":"SortRequest_stream","error_data":{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1384794121034},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"47ED2786-057D-4638-B0B2-3B2DF118E544"},"request_guid":"8D9FE390-D41A-4C0C-85BB-008256C5A15C"},"request_guid":"AB714A75-FEEB-4D75-ABB2-2B55114EF02D"}'),
	(3331, '2013-11-18 17:01:36', 66, 'scientia_server_get_block_details', 'Domus domain sending an error back to filter.cobaltcascade.localhost domain for request:', '{"action":"GetPosts","request_data":{"sort_qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"action":"GetPosts","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","qty":1000,"posts_from_timestamp":null,"posts_to_timestamp":null,"moderation_rings":[],"update":false,"sort_id":1,"client_timeout":1384794121034},"with_content":false},"error_code":"scientia_server_get_block_details","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/getblockheader Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"47ED2786-057D-4638-B0B2-3B2DF118E544"},"request_guid":"8D9FE390-D41A-4C0C-85BB-008256C5A15C"}'),
	(3332, '2013-11-18 17:01:36', 66, 'filter_run_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys task priority/latest/latest/latest/json","priority":10,"name":"skys task priority"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"filter_run_rhythm","error_data":{},"request_guid":"0479A569-E731-4A38-9371-76A0D2480841"}'),
	(3333, '2013-11-18 17:01:36', 66, 'SortRequest_filter', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"SortRequest_filter","error_data":{},"request_guid":"FCF13A2B-2FE4-4B1B-9A61-D906BE513598"}'),
	(3334, '2013-11-18 17:03:10', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"tasks","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"test task"},{"display_order":"2"},{"display_order":"3","text":"test"},{"display_order":"4","selected":[]},{"display_order":"5"},{"display_order":"6","selected":["test"]},{"display_order":"7","selected":["Before Cobalt Cascade alpha"]},{"display_order":"8","text":"00:00"},{"display_order":"9","text":"00:00"}],"post_id":"10456","private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"E71FB87E-391B-415D-B86B-36F6D945B275"}'),
	(3335, '2013-11-18 17:03:10', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"tasks","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"test task"},{"display_order":"2"},{"display_order":"3","text":"test"},{"display_order":"4","selected":[]},{"display_order":"5"},{"display_order":"6","selected":["test"]},{"display_order":"7","selected":["Before Cobalt Cascade alpha"]},{"display_order":"8","text":"00:00"},{"display_order":"9","text":"00:00"}],"post_id":"10456","private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"50F3BA0C-1EFD-4C2B-8F81-DEE051E7E9C0"}'),
	(3336, '2013-11-18 17:03:38', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"tasks","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"test task"},{"display_order":"2"},{"display_order":"3","text":"test"},{"display_order":"4","selected":[]},{"display_order":"5"},{"display_order":"6","selected":["test"]},{"display_order":"7","selected":["Before Cobalt Cascade alpha"]},{"display_order":"8","text":"00:00"},{"display_order":"9","text":"00:00"}],"post_id":"10456","private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"6C7DC0A7-E1C9-48C6-AB26-2908F8C42489"}'),
	(3337, '2013-11-18 17:03:38', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"tasks","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"test task"},{"display_order":"2"},{"display_order":"3","text":"test"},{"display_order":"4","selected":[]},{"display_order":"5"},{"display_order":"6","selected":["test"]},{"display_order":"7","selected":["Before Cobalt Cascade alpha"]},{"display_order":"8","text":"00:00"},{"display_order":"9","text":"00:00"}],"post_id":"10456","private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"B610F4B9-6F19-4F16-B490-223EB2B8C649"}'),
	(3338, '2013-11-18 17:05:02', 65, 'scientia_server_make_post', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"tasks","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"test task"},{"display_order":"2"},{"display_order":"3","text":"test"},{"display_order":"4","selected":[]},{"display_order":"5"},{"display_order":"6","selected":["test"]},{"display_order":"7","selected":["Before Cobalt Cascade alpha"]},{"display_order":"8","text":"00:00"},{"display_order":"9","text":"00:00"}],"post_id":"10456","private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"},"secret":"false"}},"error_code":"scientia_server_make_post","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /data/makepost Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : CHttpException."},"request_guid":"B061E927-94AC-4858-82D4-907985638140"}'),
	(3339, '2013-11-18 17:05:02', 66, 'MakePost_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"MakePost","request_data":{"post":{"stream":{"name":"tasks","domain":"cobaltcascade.localhost","username":"sky","version":"0/0/0"},"content":[{"display_order":"1","text":"test task"},{"display_order":"2"},{"display_order":"3","text":"test"},{"display_order":"4","selected":[]},{"display_order":"5"},{"display_order":"6","selected":["test"]},{"display_order":"7","selected":["Before Cobalt Cascade alpha"]},{"display_order":"8","text":"00:00"},{"display_order":"9","text":"00:00"}],"post_id":"10456","private_addresses":[],"submitting_user":{"username":"sky","domain":"cobaltcascade.localhost"}}},"error_code":"MakePost_failed","request_guid":"90F7C3EF-C5AB-4258-8A25-D7BBDCF41458"}'),
	(3340, '2013-11-18 17:05:25', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10038"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10038/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"DA1AFD77-EE27-4BBF-95AE-833AFA731F89"}'),
	(3341, '2013-11-18 17:05:25', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10130"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10130/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"CB2D76A3-1E8D-48D5-8DBB-F2EDF9B66502"}'),
	(3342, '2013-11-18 17:05:26', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10064"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10064/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"1885EC4F-21DA-417C-9477-6C4D0B0029EF"}'),
	(3343, '2013-11-18 17:05:26', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10084"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10084/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"7170EB1D-DBF3-4973-BF8B-9337172A4D3F"}'),
	(3344, '2013-11-18 17:05:26', 65, 'GetPost_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"GetPost","request_data":{"post_id":"10048"},"error_code":"GetPost_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /post/cobaltcascade.localhost/10048/json Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"99109B15-320D-4A9A-95B2-C2D0A86C5B58"}'),
	(3345, '2013-11-18 17:05:26', 65, 'StoreOwnersStreamSortResults_post_failed', 'scientia domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"StoreOwnersStreamSortResults","request_data":{"posts":[{"post_id":"10456","score":"1384790987"},{"post_id":"10265","score":"1381487013"},{"post_id":"10264","score":"1381486713"},{"post_id":"10263","score":"1381486105"},{"post_id":"10261","score":"1381485763"},{"post_id":"10232","score":"1381221603"},{"post_id":"10231","score":"1381215183"},{"post_id":"10145","score":"1375444236"},{"post_id":"10144","score":"1375439434"},{"post_id":"10130","score":"1375346383"},{"post_id":"10110","score":"1374655770"},{"post_id":"10109","score":"1374655456"},{"post_id":"10097","score":"1373531205"},{"post_id":"10092","score":"1373017195"},{"post_id":"10091","score":"1373014464"},{"post_id":"10090","score":"1373006803"},{"post_id":"10088","score":"1372955738"},{"post_id":"10087","score":"1372952292"},{"post_id":"10086","score":"1372851786"},{"post_id":"10084","score":"1372849145"},{"post_id":"10083","score":"1372848992"},{"post_id":"10082","score":"1372848909"},{"post_id":"10069","score":"1371829051"},{"post_id":"10065","score":"1371632561"},{"post_id":"10064","score":"1371622454"},{"post_id":"10063","score":"1371620467"},{"post_id":"10060","score":"1371617766"},{"post_id":"10059","score":"1371567300"},{"post_id":"10052","score":"1371550772"},{"post_id":"10049","score":"1371548297"},{"post_id":"10048","score":"1371548231"},{"post_id":"10047","score":"1371548134"},{"post_id":"10044","score":"1371547678"},{"post_id":"10043","score":"1371547640"},{"post_id":"10042","score":"1371547243"},{"post_id":"10041","score":"1371547129"},{"post_id":"10040","score":"1371547043"},{"post_id":"10038","score":"1371546544"},{"post_id":"10037","score":"1371546473"},{"post_id":"10036","score":"1371546350"},{"post_id":"10033","score":"1371545733"},{"post_id":"10032","score":"1371545518"},{"post_id":"10028","score":"1371541272"},{"post_id":"10024","score":"1371455734"},{"post_id":"10022","score":"1371454574"},{"post_id":"10021","score":"1371453800"}],"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"tasks","version":"latest/latest/latest"},"filter_rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"newest","version":{"major":"latest","minor":"latest","patch":"latest"}}},"error_code":"StoreOwnersStreamSortResults_post_failed","error_data":{"error_message":"Attempt to retrieve data from the server failed. URL : /sky/stream/tasks/latest/latest/latest/storeownersstreamsortresults Domain : scientia.cobaltcascade.localhost  ajax request text status : error. ajax request error thrown : ."},"request_guid":"58D09C48-9AD3-4298-B944-FB048E3A0C61"}'),
	(3346, '2013-11-18 17:05:27', 67, 'domus_action_error', 'Callback object not found for returning_guid : D8EB2C2A-2AE5-4DF5-A001-9DA05D5ACD2D', '{}'),
	(3347, '2013-11-18 17:05:27', 66, 'StoreOwnersStreamSortResults_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"SortRequest","request_data":{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/tasks/latest/latest/latest/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null,"domain":"cobaltcascade.localhost"}},"error_code":"StoreOwnersStreamSortResults_failed","error_data":{},"request_guid":"D8EB2C2A-2AE5-4DF5-A001-9DA05D5ACD2D"}'),
	(3348, '2013-11-19 12:52:18', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","params":[],"description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"D814B5EC-ED90-4309-822F-49C1E3537CA9"}'),
	(3349, '2013-11-19 12:52:18', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"9DD522D1-1D9B-4130-BA2E-83FA433F442A"}'),
	(3350, '2013-11-20 08:11:07', 66, 'WaitingPostCount_failed', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetWaitingPostCount","request_data":{},"error_code":"WaitingPostCount_failed","error_data":"domaus_waitingpostcount","request_guid":"8CE04E17-8724-47B0-BA36-A71E9A8187F7"}'),
	(3351, '2013-11-27 13:22:48', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"sky","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","params":[],"description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"9D7B0654-BF2D-47E2-B964-1045ED938924"}'),
	(3352, '2013-11-27 13:22:48', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"EC158F82-774B-4AE9-BE75-20263CE0E18A"}'),
	(3353, '2014-02-19 09:49:48', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test10","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","params":[],"description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"68FA4F46-2883-4002-9A9D-E6B55F301013"}'),
	(3354, '2014-02-19 09:49:48', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"5513846A-A2F0-443E-9C0F-01333587A1F3"}'),
	(3355, '2014-02-19 10:33:49', 157, 'suggestion_rhythm_init', 'suggestion domain sending an error back to domus.cobaltcascade.localhost domain for request:', '{"action":"RunRhythm","request_data":{"type":"user_suggestion","paramaters":{},"user":{"username":"test10","domain":"cobaltcascade.localhost"},"client_domain":"cobaltcascade.localhost","rhythm":{"domain":"cobaltcascade.localhost","username":"sky","name":"basic user suggestion","version":"0/0/0","date_created":1375445274,"status":"public","params":[],"description":"A simple rhythm for suggesting new users.","js":"/**\\r\\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n\\tvar client_domain;\\r\\n\\tvar suggestion_type;\\r\\n\\tvar kindred;\\r\\n\\tvar user_kindred = [];\\r\\n\\tvar declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n\\t */\\r\\n\\tvar max_kindred_to_process = 30;\\r\\n\\tvar max_sub_kindred_to_process = 10;    \\r\\n    \\r\\n\\t/**\\r\\n\\t * Scores for each stream indexed by domain/username/name.\\r\\n\\t */\\r\\n\\tvar kindred_scores ={};\\r\\n\\tvar final_scores;\\r\\n\\t\\r\\n\\tvar suggestions = [];\\r\\n\\t\\r\\n\\tvar max_kindred_points = 100;\\r\\n\\tvar kindred_points_divider = 0.8;\\t\\r\\n\\tvar sub_max_kindred_points = 100;\\r\\n\\tvar sub_kindred_points_divider = 0.8;\\t    \\r\\n\\t\\r\\n\\tvar max_results_to_return = 25;\\r\\n\\t\\r\\n\\tvar init_done = false;\\r\\n\\t\\r\\n\\t/**\\r\\n\\t * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n\\t */\\r\\n\\tvar isInitDone = function () {\\r\\n\\t\\tif (Object.keys(user_kindred).length === max_kindred_to_process) {\\r\\n\\t\\t\\tif (typeof declined_suggestions !== \'undefined\') {\\t\\r\\n\\t\\t\\t\\tif (init_done === false) {\\t\\t\\r\\n\\t\\t\\t\\t\\tinit_done = true;\\r\\n\\t\\t\\t\\t\\tBabblingBrook.Suggestion.processSuggestions();\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onKindredDataFetched = function (index, data) {\\r\\n\\t\\tuser_kindred[index] = data;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetched = function (data) {\\t\\r\\n\\t\\tdeclined_suggestions = data.suggestions_declined;\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\t\\r\\n\\t\\r\\n\\r\\n\\t/**\\r\\n\\t * If a users kindred data does not respond then just\\r\\n\\t * use an empty array, so that the rhythm can proceed without it.\\r\\n\\t * \\r\\n\\t * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n\\t *\\r\\n\\t * return {void}\\r\\n\\t */\\r\\n\\tvar onKindredDataFetchedError = function (index) {\\r\\n\\t\\tuser_kindred[index] = [];\\r\\n\\t\\tisInitDone();\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar onUserDeclinedSuggestionsFetchedError = function () {\\r\\n\\t\\tthrow \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\\r\\n\\t};\\t\\r\\n\\t\\r\\n    var init = function () {\\r\\n\\t\\tparams = BabblingBrook.Suggestion.getParamaters();\\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n\\t\\tclient_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n\\t\\tsuggestion_type = BabblingBrook.Suggestion.suggestion_type;\\r\\n\\t\\t\\r\\n        url = user.domain + \'/\' + user.username + \\r\\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \\r\\n\\t\\t\\t\'&type=\' + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\turl, \\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetched,\\r\\n\\t\\t\\tonUserDeclinedSuggestionsFetchedError\\r\\n\\t\\t); \\t\\t\\r\\n\\t\\t\\r\\n\\t\\tkindred = BabblingBrook.Suggestion.kindred;\\r\\n\\t\\tvar kindred_length = Object.keys(kindred).length;\\r\\n\\t\\tif (kindred_length < max_kindred_to_process) {\\r\\n\\t\\t\\tmax_kindred_to_process = kindred_length;\\r\\n\\t\\t}\\r\\n\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n\\t\\t\\tvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n\\t\\t\\tvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n            var url = kindred_domain + \'/data/getkindreddata/?username=\' + kindred_username;\\r\\n            BabblingBrook.Suggestion.getMiscData(\\r\\n\\t\\t\\t    url, \\r\\n\\t\\t\\t    onKindredDataFetched.bind(null, i),\\r\\n\\t\\t\\t    onKindredDataFetchedError.bind(null, i)\\r\\n\\t\\t    );\\r\\n\\t\\t\\ti++; \\r\\n\\t\\t}\\r\\n\\t\\tisInitDone();\\r\\n    };\\r\\n\\t\\r\\n\\tvar createScoreObject = function (domain, username) {\\r\\n        var kindred_name = domain + \'/\' + username;\\r\\n\\t\\tif (typeof kindred_scores[kindred_name] === \'undefined\') {\\r\\n            kindred_scores[kindred_name] = {};\\r\\n            kindred_scores[kindred_name].domain = domain;\\r\\n            kindred_scores[kindred_name].username = username;            \\r\\n\\t\\t\\tkindred_scores[kindred_name].score = 0;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar calculateScores = function () {\\r\\n        var max_kindred = max_kindred_to_process;\\r\\n        if (max_kindred > kindred.legnth - 1) {\\r\\n            max_kindred = kindred.legnth - 1;\\r\\n        }\\r\\n        for (var i=0; i < max_kindred; i++) {\\r\\n            var kindred_blob = user_kindred[i];\\r\\n            var j = 0;\\r\\n\\t\\t    for (var user in kindred_blob) {     \\r\\n                if (j === max_sub_kindred_to_process) {\\r\\n                    break;\\r\\n                }\\r\\n                j++;\\r\\n                var kindred_domain = BabblingBrook.Library.extractDomain(user);\\r\\n                var kindred_username = BabblingBrook.Library.extractUsername(user);                        \\r\\n                createScoreObject(kindred_domain, kindred_username);\\r\\n                var kindred_divider = kindred_points_divider * (i + 1);\\r\\n                var kindred_score = max_kindred_points / kindred_divider;\\r\\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\\r\\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\\r\\n\\t\\t\\t\\tkindred_scores[user].score += Math.round(kindred_score + sub_kindred_score);\\r\\n\\r\\n\\t\\t\\t}\\r\\n\\t\\t}     \\r\\n\\t};\\r\\n\\t\\r\\n\\tvar sortScores = function () {      \\r\\n\\t\\tvar final_scores = [];\\r\\n\\t\\tfor (var i in kindred_scores) {\\r\\n\\t\\t\\tif (kindred_scores[i].score > 0) {\\r\\n\\t\\t\\t\\tfinal_scores.push(kindred_scores[i]);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tfinal_scores.sort(function (a, b) {\\r\\n\\t\\t\\treturn b.score - a.score;\\r\\n\\t\\t});\\r\\n\\t\\tfor (var j=0; j<final_scores.length; j++) {\\r\\n\\t\\t\\tsuggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\t\\r\\n\\tvar removeDeclinedSuggestions = function () {\\r\\n        var users = declined_suggestions;\\r\\n        for (var k = 0; k < users.length; k++) {\\r\\n            for (var j in kindred_scores) {\\r\\n                var user = users[k];\\r\\n                var suggestion = kindred_scores[j];\\r\\n                if (user.domain === suggestion.domain\\r\\n                    && user.username === suggestion.username\\r\\n                    && user.name === suggestion.name\\r\\n                ) {\\r\\n                    suggestion.score = 0;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\t};\\t\\t\\r\\n\\t\\r\\n    var main = function () {     \\r\\n\\t\\tcalculateScores();\\r\\n\\t\\tremoveDeclinedSuggestions();\\r\\n\\t\\tsortScores();   \\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}"}},"error_code":"suggestion_rhythm_init","error_data":{"error_message":"kindred is not an object"},"request_guid":"381D8B05-D56B-48D0-AB7F-A89C12055F50"}'),
	(3356, '2014-02-19 10:33:49', 66, 'GetSuggestions_rhythm', 'Domus domain sending an error back to cobaltcascade.localhost domain for request:', '{"action":"GetSuggestions","request_data":{"type":"user_suggestion","paramaters":{},"rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json"},"error_code":"GetSuggestions_rhythm","error_data":"suggestion_rhythm_init","request_guid":"5D1A9830-D1D2-47C7-9709-770B029ED3E5"}'),
	(3357, '2014-02-20 08:41:18', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : 26B356FD-9A44-4B89-AB51-7411C282EC5F', '{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"}}'),
	(3358, '2014-02-20 08:41:18', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 1840E259-0574-406F-B50C-C1C8752EE795', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(3359, '2014-02-20 08:41:19', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 67DFA341-C509-478C-8313-25646FACAA7A', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/skys priority/latest/latest/latest/json","priority":10,"name":"skys priority"},"moderation_rings":[],"posts_to_timestamp":null}}'),
	(3360, '2014-02-20 08:41:19', 67, 'client_timeout', 'A timeout occoured when calling an action: FetchStream. GUID : 082E009A-8CFD-4BFD-BA32-1B7A06510F39', '{"stream":{"domain":"cobaltcascade.localhost","username":"sky","name":"news","version":"0/0/0"}}'),
	(3361, '2014-02-20 08:41:19', 67, 'client_timeout', 'A timeout occoured when calling an action: SortRequest. GUID : 6CA70C62-076D-48C3-8E9B-316B00BEDEEB', '{"sort_request":{"type":"stream","stream_url":"cobaltcascade.localhost/sky/stream/news/0/0/0/json","filter":{"url":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest/json","priority":11,"name":"newest"},"moderation_rings":[],"posts_to_timestamp":null}}');
/*!40000 ALTER TABLE `js_error` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.js_error_code
CREATE TABLE IF NOT EXISTS `js_error_code` (
  `code` varchar(255) COLLATE utf8_unicode_ci NOT NULL COMMENT 'A js error code.',
  `description` text COLLATE utf8_unicode_ci COMMENT 'The description for this error code.',
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='A list of the types of error codes reported from javascript.';

-- Dumping data for table cobalt_cascade.js_error_code: ~34 rows (approximately)
/*!40000 ALTER TABLE `js_error_code` DISABLE KEYS */;
INSERT INTO `js_error_code` (`code`, `description`) VALUES
	('CheckDomainValid_failed', NULL),
	('CheckUsernameValid_failed', NULL),
	('client_timeout', NULL),
	('domus_action_error', NULL),
	('filter_rhythm_main', NULL),
	('filter_run_rhythm', NULL),
	('FilterReady_kindred', NULL),
	('GetData_failed', NULL),
	('GetPost_failed', NULL),
	('GetPost_not_found', NULL),
	('GetPost_takes_failed', NULL),
	('GetPosts_failed_block_number_missing', NULL),
	('GetPosts_private', NULL),
	('GetSuggestions_rhythm', NULL),
	('GetTakes_failed', NULL),
	('InfoRequest_failed', NULL),
	('KindredReady_kindred', NULL),
	('MakePost_failed', NULL),
	('rhythm_getMiscData_error', NULL),
	('scientia_server_fetch_data', NULL),
	('scientia_server_get_block_details', NULL),
	('scientia_server_get_posts', NULL),
	('scientia_server_get_rhythm', NULL),
	('scientia_server_get_stream', NULL),
	('scientia_server_make_post', NULL),
	('server_SetWaitingPostCount_failed', NULL),
	('SortRequest_filter', NULL),
	('SortRequest_private', NULL),
	('SortRequest_stream', NULL),
	('StoreOwnersStreamSortResults_failed', NULL),
	('StoreOwnersStreamSortResults_post_failed', NULL),
	('suggestion_rhythm_init', NULL),
	('SuggestionReady_kindred', NULL),
	('WaitingPostCount_failed', NULL);
/*!40000 ALTER TABLE `js_error_code` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.kindred
CREATE TABLE IF NOT EXISTS `kindred` (
  `kindred_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'The primary key.',
  `user_id` int(10) unsigned NOT NULL COMMENT 'The id of the user whose kindred are indexed.',
  `kindred_user_id` int(10) unsigned NOT NULL COMMENT 'The id of the kindred user.',
  `score` int(10) NOT NULL COMMENT 'The total score of this kindred relaitonship.',
  `user_rhythm_id` int(10) unsigned NOT NULL COMMENT 'The rhythm that generated this score. Links to user_rhythm becaus it may be a partial version.',
  PRIMARY KEY (`kindred_id`),
  KEY `user_id` (`user_id`),
  KEY `rhythm_extra_id` (`user_rhythm_id`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Records all the kindred scores for  users';

-- Dumping data for table cobalt_cascade.kindred: ~13 rows (approximately)
/*!40000 ALTER TABLE `kindred` DISABLE KEYS */;
INSERT INTO `kindred` (`kindred_id`, `user_id`, `kindred_user_id`, `score`, `user_rhythm_id`) VALUES
	(12, 10000, 10106, 2, 10000),
	(16, 10106, 10000, 14, 10000),
	(17, 10106, 10098, 1, 10000),
	(18, 10106, 10000, 15, 10080),
	(19, 10106, 10098, 1, 10080),
	(20, 10165, 10000, 2, 10139),
	(21, 10165, 10158, 2, 10139),
	(22, 10165, 10161, 0, 10139),
	(23, 10165, 10163, 1, 10139),
	(27, 1, 2, 35, 1),
	(28, 1, 4, 5, 1),
	(29, 1, 5, 5, 1),
	(30, 1, 10000, 5, 1);
/*!40000 ALTER TABLE `kindred` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.login
CREATE TABLE IF NOT EXISTS `login` (
  `login_id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(128) COLLATE utf8_unicode_ci NOT NULL,
  `domain` text COLLATE utf8_unicode_ci NOT NULL,
  `secret` varchar(36) COLLATE utf8_unicode_ci NOT NULL,
  `return_location` text COLLATE utf8_unicode_ci NOT NULL,
  `create_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`login_id`),
  UNIQUE KEY `secret` (`secret`),
  KEY `create_date` (`create_date`)
) ENGINE=InnoDB AUTO_INCREMENT=258 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Stores sessions data on the user before redirecting them to their data store to enter their password. Data is temporary.';

-- Dumping data for table cobalt_cascade.login: ~6 rows (approximately)
/*!40000 ALTER TABLE `login` DISABLE KEYS */;
INSERT INTO `login` (`login_id`, `username`, `domain`, `secret`, `return_location`, `create_date`) VALUES
	(33, 'test86', 'brookbank.localhost', '4EA30385-FA10-4156-A874-D8684F0D361C', 'http://cobaltcascade.localhost/sky/stream/news/0/0/0', '2014-02-25 12:55:16'),
	(104, 'test6', 'cobaltcascade.localhost', '79E37AEC-F740-46E7-A540-D3215451B0B1', 'http://cobaltcascade.localhost/sky/stream/news/0/0/0', '2014-05-20 10:07:51'),
	(212, 'testtut1', 'cobaltcascade.localhost', '505D278F-7500-4F97-8AD5-C07DC5AA4539', 'http://cobaltcascade.localhost/sky/stream/news/0/0/0', '2014-07-16 06:20:34'),
	(251, 'test15', 'cobaltcascade.localhost', '310B6004-735C-41B5-8C81-884396096255', 'http://cobaltcascade.localhost/sky/stream/news/0/0/0', '2014-09-01 08:42:29'),
	(254, 'sky', 'cobaltcascade.localhost', 'EBBCDF72-8F7A-4EDB-B7B1-A2EE9536D2EB', 'http://cobaltcascade.localhost/sky/stream/news/0/0/0', '2014-09-11 09:51:57'),
	(257, 'test', 'cobaltcascade.localhost', 'BCA94DDE-D2B7-42D5-80F3-54B33FA11445', 'http://cobaltcascade.localhost/sky/stream/news/0/0/0', '2014-09-11 11:01:05');
/*!40000 ALTER TABLE `login` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.lookup
CREATE TABLE IF NOT EXISTS `lookup` (
  `lookup_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `column_name` varchar(128) COLLATE utf8_unicode_ci NOT NULL COMMENT 'Column name for lookup in format table.column, if table is missing then many tables are using it',
  `value` varchar(128) COLLATE utf8_unicode_ci NOT NULL COMMENT 'A valid value for this column',
  `description` text COLLATE utf8_unicode_ci,
  `sort_order` int(11) NOT NULL DEFAULT '0' COMMENT 'Sort order for the values in the defined column',
  PRIMARY KEY (`lookup_id`),
  KEY `column` (`column_name`,`value`),
  KEY `value` (`value`)
) ENGINE=InnoDB AUTO_INCREMENT=208 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='generic lookup table for valid column values';

-- Dumping data for table cobalt_cascade.lookup: ~193 rows (approximately)
/*!40000 ALTER TABLE `lookup` DISABLE KEYS */;
INSERT INTO `lookup` (`lookup_id`, `column_name`, `value`, `description`, `sort_order`) VALUES
	(2, 'stream_field.field_type', 'textbox', NULL, 0),
	(3, 'stream_field.field_type', 'checkbox', NULL, 0),
	(4, 'stream_field.field_type', 'list', NULL, 0),
	(12, 'stream_field.field_type', 'value', NULL, 0),
	(13, 'stream_field.value_type', 'updown', 'A simple up and down vote arrows', 0),
	(14, 'stream_field.value_type', 'linear', 'A linear scale', 0),
	(15, 'stream_field.value_type', 'logarithmic', 'A logarithmic scale', 0),
	(16, 'stream_field.value_type', 'textbox', 'A textbox for a number', 0),
	(17, 'stream_field.value_options', 'any', 'User can enter any value', 1),
	(18, 'stream_field.value_options', 'maxminglobal', 'Maximum and minimum constraints. Defined here', 2),
	(19, 'stream_field.value_options', 'maxminpost', 'Maximum and minimum constraints. Defined on the post', 3),
	(20, 'stream_field.value_options', 'rhythmglobal', 'Rhythmic constraints. Defined here', 4),
	(21, 'stream_field.value_options', 'rhythmpost', 'Rhythmic constraints. Defined on the post', 5),
	(22, 'user.role', 'standard', 'Standard user', 0),
	(23, 'user.role', 'admin', 'Administrator user', 1),
	(24, 'stream_field.value_type', 'stars', 'Stars representing values', 0),
	(25, 'post_popular.type', 'best', 'How popular an post is using the best Rhythm', 0),
	(29, 'version.type', 'stream', 'stream', 0),
	(30, 'version.type', 'rhythm', 'rhythm', 0),
	(31, 'version.type', 'post_group', 'post_group', 0),
	(32, 'version_type', 'latest/latest/latest', 'Latest, Latest, Latest', 0),
	(33, 'version_type', 'major/latest/latest', 'Major, Latest, Latest', 0),
	(34, 'version_type', 'major/minor/latest', 'Major, Minor, Latest', 0),
	(35, 'version_type', 'major/minor/patch', 'Major, Minor, Patch', 0),
	(36, 'stream_field.field_type', 'link', 'A link', 0),
	(37, 'stream_field.field_type', 'openlist', 'An open list, where the taker can enter values, eg tags or poll questions for child posts', 0),
	(38, 'tag.thing', 'rhythm', 'Rhythm', 0),
	(39, 'tag.thing', 'stream', 'Stream', 0),
	(40, 'tag.thing', 'post_group', 'PostGroup', 0),
	(41, 'stream_extra.group_period', 'hourly', 'Group into hourly blocks', 0),
	(42, 'stream_extra.group_period', 'daily', 'Group into daily blocks', 0),
	(43, 'stream_extra.group_period', 'weekly', 'Group into weekly blocks', 0),
	(44, 'stream_extra.group_period', 'fourweekly', 'Group into monthly blocks', 0),
	(45, 'stream_extra.group_period', 'yearly', 'Group into yearly blocks', 0),
	(46, 'stream_field.value_type', 'button', 'Button with a take value of 1', 0),
	(47, 'user_feature_useage.feature', 'stream', NULL, 1),
	(48, 'user_feature_useage.feature', 'post_group', NULL, 2),
	(49, 'user_feature_useage.feature', 'filter', NULL, 3),
	(50, 'user_feature_useage.feature', 'kindred', NULL, 4),
	(51, 'stream.kind', 'standard', 'A standard stream', 1),
	(52, 'stream.kind', 'user', 'An stream only used for users', 2),
	(53, 'user_timming.name', 'popular_takes', NULL, 0),
	(54, 'ring.membership_type', 'public', 'Open to the public', 0),
	(55, 'ring.membership_type', 'invitation', 'By a members invitation', 2),
	(56, 'ring.membership_type', 'rhythm', 'By Rhythm', 3),
	(57, 'ring.membership_type', 'super_ring', 'By another Ring', 4),
	(58, 'ring.admin_type', 'only_me', 'Only me', 1),
	(59, 'ring.admin_type', 'invitation', 'By invitation', 2),
	(60, 'ring.admin_type', 'super_ring', 'Another Ring', 3),
	(61, 'invitation.type', 'admin', 'An admin invitation', 1),
	(62, 'invitation.type', 'member', 'A member invitation', 0),
	(63, 'js_error.type', 'iframe_not_loading', 'A nested iframe is not loading.', 0),
	(64, 'js_error.type', 'client_domus_error_error', 'An error has ocured whilst processing an error.', 0),
	(65, 'js_error.location', 'scientia', 'An error reported by the info domain JS', 0),
	(66, 'js_error.location', 'domus', 'An error reported by the domus domain JS', 0),
	(67, 'js_error.location', 'client', 'An error reported by the client domain JS', 0),
	(68, 'js_error.type', 'client_domus_sort_request', 'A sort request error.', 0),
	(69, 'js_error.type', 'generic', 'A generic error.', 0),
	(70, 'js_error.type', 'client_domus_make_post', 'A make post error.', 0),
	(71, 'js_error.type', 'client_domus_take', 'A take error.', 0),
	(72, 'js_error.type', 'client_domus_get_post', 'A get post error.', 0),
	(73, 'js_error.type', 'client_domus_fetch_suggestions', 'A suggestions error.', 0),
	(74, 'js_error.type', 'client_domus_ring_take', 'A ring take error.', 0),
	(75, 'js_error.type', 'domus_user_data', 'An error with the domus user data.', 0),
	(76, 'js_error.type', 'client_domus_ring_status', 'A ring status error.', 0),
	(77, 'js_error.type', 'client_domus_info_request', 'An info request error.', 0),
	(78, 'js_error.type', 'ring_domus_request_data', '', 0),
	(79, 'js_error.type', 'suggestion_domus_get_data', 'An error with a processing a suggestion Rhythm.', 0),
	(80, 'js_error.type', 'filter_domus_get_posts', 'An error with a processing filter Rhythm.', 0),
	(81, 'js_error.type', 'kindred_domus_request_data', 'An error with a processing kindred Rhythm.', 0),
	(82, 'js_error.type', 'scientia_domus_domain_ready', 'Info domain is not reporting ready correctly.', 0),
	(83, 'js_error.type', 'scientia_domus_ring_taken', 'Info domain is not reporting a ring has been taken correctly.', 0),
	(84, 'js_error.type', 'scientia_domus_ring_take_status', 'Info domain is not reporting a ring status correctly.', 0),
	(85, 'js_error.type', 'scientia_domus_posts', 'Info domain is sending bad posts data.', 0),
	(86, 'js_error.type', 'scientia_domus_post', 'Info domain is sending bad post data.', 0),
	(87, 'js_error.type', 'scientia_domus_user_take_block_number', 'Info domain is sending bad user take block number data.', 0),
	(88, 'js_error.type', 'scientia_user_take_block', 'Info domain is sending bad user take block data.', 0),
	(90, 'js_error.type', 'scientia_domus_data_fetched', 'Info domain is sending back bad data.', 0),
	(92, 'js_error.type', 'domus_error_error', 'An error has occured in error data passed to the info domain from a domus domain.', 0),
	(93, 'js_error.type', 'domus_scientia_ring_take', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(94, 'js_error.type', 'scientia_error_error', 'An error has occured in error data passed to the domus from an info domain', 0),
	(96, 'js_error.type', 'domus_make_post', 'A make post error.', 0),
	(97, 'js_error.type', 'domus_take', 'A take error.', 0),
	(98, 'js_error.type', 'domus_kindred_data', NULL, 0),
	(99, 'js_error.type', 'ring_domus_revceive_results', '', 0),
	(100, 'js_error.type', 'suggestion_domus_generated', NULL, 0),
	(101, 'js_error.type', 'domus_suggestion_url', NULL, 0),
	(102, 'js_error.type', 'filter_domus_sort_finished', 'An error with a processing filter Rhythm.', 0),
	(103, 'js_error.type', 'kindred_domus_receive_results', 'An error with a processing kindred Rhythm.', 0),
	(104, 'js_error.type', 'scientia_domus_rhythm', 'Info domain is sending bad user take block number data.', 0),
	(105, 'js_error.type', 'domus_fetch_data', 'Info domain is sending bad user take block data.', 0),
	(106, 'js_error.type', 'scientia_ring_take', '', 0),
	(107, 'js_error.type', 'scientia_ring_take_status', NULL, 0),
	(108, 'js_error.type', 'domus_scientia_get_ring_take_status', NULL, 0),
	(109, 'js_error.type', 'domus_scientia_get_posts', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(110, 'js_error.type', 'domus_scientia_get_post', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(111, 'js_error.type', 'domus_scientia_get_user_takes_block_number', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(112, 'js_error.type', 'domus_scientia_get_user_takes_block', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(113, 'js_error.type', 'domus_scientia_get_data', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(114, 'js_error.type', 'scientia_get_data', NULL, 0),
	(115, 'js_error.type', 'domus_scientia_get_rhythm', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(116, 'js_error.type', 'info_get_rhythm', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(117, 'js_error.type', 'domus_scientia_save_ring_results', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(118, 'js_error.type', 'scientia_get_user_take_block_number', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(119, 'js_error.type', 'scientia_get_user_take_block', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(120, 'js_error.type', 'scientia_get_posts_block', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(121, 'js_error.type', 'scientia_get_posts_block_number', NULL, 0),
	(122, 'js_error.type', 'scientia_get_posts_update', NULL, 0),
	(123, 'js_error.type', 'scientia_get_post', 'An error has occured in the ring take data passed to the info domain from a domus domain.', 0),
	(124, 'js_error.type', 'domus_save_kindred_results', 'An error with a processing kindred Rhythm.', 0),
	(125, 'js_error.type', 'domus_get_takes_for_kindred', 'An error with a processing kindred Rhythm.', 0),
	(126, 'js_error.type', 'client_domus_record_feature_used', NULL, 0),
	(127, 'js_error.type', 'domus_get_takes_user', 'Info domain is sending bad user take block data.', 0),
	(128, 'js_error.type', 'timeout', '...', 0),
	(129, 'js_error.type', 'domus_unknown_action', '...', 0),
	(130, 'js_error.type', 'domus_action_data_invalid', '...', 0),
	(131, 'js_error.type', 'domus_action_error', '...', 0),
	(132, 'js_error.type', 'domus_guid_invalid', '...', 0),
	(136, 'js_error.type', 'client_error_error', '...', 0),
	(137, 'js_error.type', 'filter_error_error', '...', 0),
	(138, 'js_error.type', 'domus_filter_init', '...', 0),
	(139, 'stream_extra.post_mode', 'anyone', 'Anyone', 0),
	(140, 'stream_extra.post_mode', 'owner', 'Only Me', 0),
	(141, 'messaging_sort_type', 'sent', 'Messages that have been sent by a user.', 0),
	(142, 'messaging_sort_type', 'received', 'Messages that have been received by a user.', 0),
	(143, 'post.status', 'public', 'A publicly viewable post', 0),
	(144, 'post.status', 'private', 'An post that can only be viewed by its owner and those it was sent to.', 0),
	(145, 'post.status', 'deleted', 'An post that has been deleted, but is still visible to the makers of children and takers.', 0),
	(146, 'stream_extra.edit_mode', 'owner', 'Only the owner can edit an post in this stream.', 0),
	(147, 'stream_extra.edit_mode', 'anyone', 'Anyone can edit an post in this stream.', 0),
	(148, 'stream_field.value_type', 'list', 'Each value is ascribed a text value', 0),
	(149, 'stream_field.who_can_take', 'anyone', 'Anyone can take this value field', 0),
	(150, 'stream_field.who_can_take', 'owner', 'Only the stream owner can take this value field', 0),
	(151, 'ring_rhythm_data.type', 'admin', 'This data was produced by an admin rhythm.', 0),
	(152, 'ring_rhythm_data.type', 'member', 'This data was produced by a member rhythm.', 0),
	(153, 'user_config_default.type', 'rhythm_url', 'This config item is a rhythm url', 0),
	(154, 'user_config_default.type', 'stream_url', 'This config item is a streamurl', 0),
	(155, 'user_config_default.type', 'uint', 'This config item is an unsigned integer', 0),
	(156, 'user_config_default.type', 'int', 'This config item is a signed integer', 0),
	(157, 'js_error.location', 'suggestion', 'An error reported by the suggestiondomain JS', 0),
	(158, 'js_error.location', 'filter', 'An error reported by the filter domain JS', 0),
	(159, 'js_error.location', 'ring', 'An error reported by the ring domain JS', 0),
	(160, 'js_error.location', 'kindred', 'An error reported by the kindred domain JS', 0),
	(161, 'js_error.type', 'suggestion_rhythm_init', '...', 0),
	(162, 'js_error.type', 'GetSuggestions_rhythm', '...', 0),
	(163, 'js_error.type', 'client_timeout', '...', 0),
	(164, 'waiting_post_time.type_id', 'private', 'Time since private post count fetched.', 0),
	(165, 'waiting_post_time.type_id', 'public', 'Time since public post count fetched.', 0),
	(166, 'user_level.tutorial_set', 'main', 'The main set of tutorials.', 0),
	(167, 'user_level.level_name', 'NOT_STARTED', NULL, 10),
	(168, 'user_level.level_name', 'READ_POSTS', NULL, 20),
	(169, 'user_level.level_name', 'VOTE_POSTS', NULL, 30),
	(170, 'user_level.level_name', 'STREAM_NAV', NULL, 40),
	(171, 'user_level.level_name', 'READ_COMMENTS', NULL, 50),
	(172, 'user_level.level_name', 'VOTE_COMMENTS', NULL, 60),
	(173, 'user_level.level_name', 'MAKE_COMMENT', NULL, 70),
	(174, 'user_level.level_name', 'EDIT_COMMENT', NULL, 80),
	(175, 'user_level.level_name', 'LINK_COMMENTS', NULL, 90),
	(176, 'user_level.level_name', 'MAKE_SELF_POST', NULL, 100),
	(177, 'user_level.level_name', 'STREAM_SORT', NULL, 110),
	(178, 'user_level.level_name', 'SUGGESTION_MESSAGES', NULL, 120),
	(179, 'user_level.level_name', 'SUBSCRIBE_LINK', NULL, 130),
	(181, 'user_level.level_name', 'FIND_SEARCH_STREAMS', NULL, 145),
	(182, 'user_level.level_name', 'BUGS', NULL, 160),
	(184, 'user_level.level_name', 'KINDRED_SCORE', NULL, 180),
	(185, 'user_level.level_name', 'VIEW_PROFILE', NULL, 190),
	(187, 'user_level.level_name', 'MAKE_PROFILE', NULL, 210),
	(188, 'user_level.level_name', 'PRIVATE_POSTS', NULL, 220),
	(189, 'user_level.level_name', 'META_LINKS', NULL, 240),
	(191, 'user_level.level_name', 'RING_MEMBERSHIP', NULL, 250),
	(192, 'user_level.level_name', 'SETTINGS', NULL, 300),
	(196, 'user_level.level_name', 'MODERATING_POSTS', NULL, 255),
	(197, 'user_level.level_name', 'MAKE_STREAMS', NULL, 245),
	(198, 'user_level.level_name', 'MAKE_RHYTHMS', NULL, 270),
	(199, 'user_level.level_name', 'EDIT_SUBSCRIPTIONS_LINK', NULL, 135),
	(200, 'user_level.level_name', 'CHANGE_STREAM_SORT_RHTYHM', NULL, 155),
	(201, 'user_level.level_name', 'CHANGE_STREAM_MODERATION_RING', NULL, 156),
	(202, 'ring.membership_type', 'admin_invitation', 'By an admins invitation', 1),
	(203, 'user_level.level_name', 'READ_PRIVATE_POSTS', NULL, 225),
	(204, 'user_level.level_name', 'MAKING_RINGS', NULL, 260),
	(205, 'user_level.level_name', 'FINISHED', NULL, 310),
	(206, 'user_config_default.type', 'string', 'This config item is a string', 0),
	(207, 'user_level.level_name', 'SEARCH_STREAMS', NULL, 150);
/*!40000 ALTER TABLE `lookup` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.post
CREATE TABLE IF NOT EXISTS `post` (
  `post_id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique identity for all posts stored here. It is the site_post_id for posts stored on this site',
  `site_id` int(11) unsigned NOT NULL COMMENT 'The site that owns this post',
  `site_post_id` int(11) unsigned DEFAULT NULL COMMENT 'The post_id on the site that owns this post - which is the domain of the stream that it is in. For new posts in the site, this is initially set to NULL and then imediatly updated to reflect the post_id',
  `stream_extra_id` int(11) unsigned NOT NULL COMMENT 'The stream that the post is placed in.',
  `user_id` int(11) unsigned NOT NULL COMMENT 'The user making the post',
  `date_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parent` int(11) unsigned DEFAULT NULL COMMENT 'If this post has a parent post_id, list it here. This is the post_id of the parent post in the domain of the stream that owns this post: If this is a differnet domain then it will connect to site_post_id.',
  `top_parent` int(11) unsigned DEFAULT NULL COMMENT 'If this post has a top parent post_id, list it here.  This is the post_id of the top parent post in the domain of the stream that owns this post: If this is a differnet domain then it will connect to site_post_id.',
  `block` int(11) unsigned NOT NULL DEFAULT '0' COMMENT 'Which stream block number does this post belong to. 0 = undefined',
  `block_tree` int(11) unsigned NOT NULL DEFAULT '0' COMMENT 'Which tree block number does this post belong to. 0 = undefined',
  `status` int(11) unsigned NOT NULL DEFAULT '143' COMMENT 'What is the permission status of this post. See lookup table for valid values.',
  `child_count` int(11) unsigned NOT NULL DEFAULT '0' COMMENT 'A count of all public child posts.',
  PRIMARY KEY (`post_id`),
  UNIQUE KEY `site_index` (`site_id`,`site_post_id`),
  KEY `post_master_id` (`stream_extra_id`),
  KEY `date_created` (`date_created`),
  KEY `block` (`block`),
  KEY `top_parent` (`top_parent`),
  KEY `block_tree` (`block_tree`)
) ENGINE=InnoDB AUTO_INCREMENT=10981 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Contains all revisions of posts by users';

-- Dumping data for table cobalt_cascade.post: ~420 rows (approximately)
/*!40000 ALTER TABLE `post` DISABLE KEYS */;
INSERT INTO `post` (`post_id`, `site_id`, `site_post_id`, `stream_extra_id`, `user_id`, `date_created`, `parent`, `top_parent`, `block`, `block_tree`, `status`, `child_count`) VALUES
	(1, 10000, 1, 1, 1, '2011-11-09 12:00:00', NULL, NULL, 1, 0, 143, 0),
	(2, 10000, 2, 1, 1, '2011-11-09 13:00:00', NULL, NULL, 1, 0, 143, 0),
	(3, 10000, 3, 1, 1, '2011-11-09 14:00:00', NULL, NULL, 1, 0, 143, 0),
	(4, 10000, 4, 1, 1, '2011-11-10 12:00:00', NULL, NULL, 2, 0, 143, 0),
	(5, 10000, 5, 1, 1, '2011-11-10 13:00:00', NULL, NULL, 2, 0, 143, 0),
	(6, 10000, 6, 1, 1, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(7, 10000, 7, 1, 1, '2011-11-11 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(8, 10000, 8, 1, 1, '2011-11-11 14:00:00', NULL, NULL, 0, 0, 143, 0),
	(9, 10000, 9, 3, 1, '2011-11-13 12:00:00', 1, 1, 0, 1, 143, 0),
	(10, 10000, 10, 3, 1, '2011-11-13 13:00:00', 1, 1, 0, 1, 143, 0),
	(11, 10000, 11, 3, 1, '2011-11-13 14:00:00', 1, 1, 0, 2, 143, 0),
	(12, 10000, 12, 3, 1, '2011-11-13 15:00:00', 1, 1, 0, 2, 143, 0),
	(13, 10000, 13, 3, 1, '2011-11-13 16:00:00', 1, 1, 0, 0, 143, 0),
	(14, 10000, 14, 3, 1, '2011-11-13 15:10:00', 10, 1, 0, 2, 143, 0),
	(15, 10000, 15, 3, 1, '2011-11-13 15:20:00', 10, 1, 0, 2, 143, 0),
	(16, 10000, 16, 3, 1, '2011-11-13 15:30:00', 14, 1, 0, 2, 143, 0),
	(19, 10000, 19, 1, 2, '2011-11-20 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(20, 10000, 20, 1, 4, '2011-11-20 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(21, 10000, 21, 1, 1, '2011-11-20 14:00:00', NULL, NULL, 0, 0, 143, 0),
	(22, 10000, 22, 1, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(24, 10000, 24, 1, 1, '2011-11-21 12:04:00', NULL, NULL, 0, 0, 143, 0),
	(25, 10000, 25, 1, 1, '2011-11-21 12:05:00', NULL, NULL, 0, 0, 143, 0),
	(26, 10000, 26, 1, 1, '2011-11-21 12:06:00', NULL, NULL, 0, 0, 143, 0),
	(27, 10000, 27, 1, 1, '2011-11-21 12:07:00', NULL, NULL, 0, 0, 143, 0),
	(28, 10000, 28, 1, 1, '2011-11-21 12:08:00', NULL, NULL, 0, 0, 143, 0),
	(29, 10000, 29, 1, 1, '2011-11-21 12:09:00', NULL, NULL, 0, 0, 143, 0),
	(30, 10000, 30, 1, 1, '2011-11-21 12:10:00', NULL, NULL, 0, 0, 143, 0),
	(31, 10000, 31, 1, 1, '2011-11-21 12:11:00', NULL, NULL, 0, 0, 143, 0),
	(32, 10000, 32, 1, 1, '2011-11-21 12:12:00', NULL, NULL, 0, 0, 143, 0),
	(33, 10000, 33, 1, 1, '2011-11-21 12:13:00', NULL, NULL, 0, 0, 143, 0),
	(34, 10000, 34, 1, 1, '2011-11-21 12:14:00', NULL, NULL, 0, 0, 143, 0),
	(35, 10000, 35, 1, 1, '2011-11-21 12:15:00', NULL, NULL, 0, 0, 143, 0),
	(36, 10000, 36, 1, 1, '2011-11-21 12:16:00', NULL, NULL, 0, 0, 143, 0),
	(37, 10000, 37, 1, 1, '2011-11-21 12:17:00', NULL, NULL, 0, 0, 143, 0),
	(38, 10000, 38, 0, 1, '2011-11-13 14:01:00', 1, 1, 0, 0, 143, 0),
	(39, 10000, 39, 0, 1, '2011-11-13 11:00:00', 1, 1, 0, 0, 143, 0),
	(40, 10000, 40, 0, 1, '2011-11-13 17:00:00', 1, 1, 0, 0, 143, 0),
	(41, 10000, 41, 0, 1, '2011-11-13 15:05:00', 10, 1, 0, 0, 143, 0),
	(42, 10000, 42, 0, 1, '2011-11-13 15:15:00', 10, 1, 0, 0, 143, 0),
	(43, 10000, 43, 0, 1, '2011-11-13 15:25:00', 10, 1, 0, 0, 143, 0),
	(44, 10000, 44, 0, 1, '2011-11-13 15:26:00', 14, 1, 0, 0, 143, 0),
	(45, 10000, 45, 0, 1, '2011-11-13 15:35:00', 14, 1, 0, 0, 143, 0),
	(46, 10000, 46, 0, 1, '2011-11-13 15:40:00', 16, 1, 0, 0, 143, 0),
	(47, 10000, 47, 3, 1, '2011-11-13 15:50:00', 9, 1, 0, 0, 143, 0),
	(48, 10000, 48, 3, 1, '2011-11-13 15:51:00', 47, 1, 0, 0, 143, 0),
	(49, 10000, 49, 0, 1, '2011-11-13 15:52:00', 48, 1, 0, 0, 143, 0),
	(50, 10000, 50, 2, 2, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(51, 10000, 51, 15, 2, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(52, 10000, 52, 16, 2, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(53, 10000, 53, 17, 2, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(54, 10000, 54, 18, 2, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(55, 10000, 55, 19, 2, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(56, 10000, 56, 3, 4, '2011-11-13 15:50:00', 52, 52, 0, 0, 143, 0),
	(57, 10000, 57, 16, 5, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(58, 10000, 58, 24, 2, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(59, 10000, 59, 10, 2, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(60, 10000, 60, 26, 2, '2011-11-11 12:00:00', 59, 59, 0, 0, 143, 0),
	(61, 10000, 61, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(62, 10000, 62, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(63, 10000, 63, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(64, 10000, 64, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(65, 10000, 65, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(66, 10000, 66, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(67, 10000, 67, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(68, 10000, 68, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(69, 10000, 69, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(70, 10000, 70, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(71, 10000, 71, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(72, 10000, 72, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(73, 10000, 73, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(74, 10000, 74, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(75, 10000, 75, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(76, 10000, 76, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(77, 10000, 77, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(78, 10000, 78, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(79, 10000, 79, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(80, 10000, 80, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(81, 10000, 81, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(82, 10000, 82, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(83, 10000, 83, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(84, 10000, 84, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(85, 10000, 85, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(86, 10000, 86, 10002, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(92, 10000, 92, 30, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(93, 10000, 93, 10004, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(94, 10000, 94, 10004, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(95, 10000, 95, 10004, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(96, 10000, 96, 10004, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(97, 10000, 97, 10004, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(98, 10000, 98, 10004, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(100, 10000, 100, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(101, 10000, 101, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(102, 10000, 102, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(103, 10000, 103, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(104, 10000, 104, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(105, 10000, 105, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(106, 10000, 106, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(107, 10000, 107, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(108, 10000, 108, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(109, 10000, 109, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(110, 10000, 110, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(111, 10000, 111, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(112, 10000, 112, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(113, 10000, 113, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(114, 10000, 114, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(115, 10000, 115, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(116, 10000, 116, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(117, 10000, 117, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(118, 10000, 118, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(119, 10000, 119, 10009, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(120, 10000, 120, 13, 1, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(121, 10000, 121, 13, 1, '2011-11-10 13:00:00', 120, 120, 0, 0, 143, 0),
	(122, 10000, 122, 13, 1, '2011-11-10 13:00:00', 121, 120, 0, 0, 143, 0),
	(123, 10000, 123, 13, 1, '2011-11-10 13:00:00', 122, 120, 0, 0, 143, 0),
	(124, 10000, 124, 26, 1, '2011-11-21 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(125, 10000, 125, 32, 1, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(126, 10000, 126, 10002, 1, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(127, 10000, 127, 33, 1, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(128, 10000, 128, 10009, 1, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(129, 10000, 129, 10002, 1, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(130, 10000, 130, 34, 1, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(131, 10000, 131, 34, 1, '2011-11-11 12:00:00', NULL, NULL, 0, 0, 143, 0),
	(132, 10000, 132, 34, 1, '2011-11-11 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(133, 10000, 133, 10009, 1, '2011-11-11 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(10000, 10000, 10000, 10002, 10000, '2013-06-10 09:46:32', NULL, NULL, 0, 0, 143, 0),
	(10001, 10000, 10001, 10002, 10000, '2012-09-12 15:53:50', NULL, NULL, 0, 0, 143, 0),
	(10002, 10000, 10002, 10002, 10000, '2012-09-12 15:53:50', NULL, NULL, 0, 0, 143, 0),
	(10003, 10000, 10003, 10002, 10000, '2012-09-12 15:53:50', NULL, NULL, 0, 0, 143, 0),
	(10004, 10000, 10004, 10002, 10000, '2012-09-12 15:53:50', NULL, NULL, 0, 0, 143, 0),
	(10005, 10000, 10005, 10002, 10000, '2013-06-13 13:37:34', NULL, NULL, 0, 0, 143, 0),
	(10006, 10000, 10006, 10006, 10000, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(10007, 10000, 10007, 10006, 10000, '2011-11-10 13:00:00', NULL, NULL, 0, 0, 143, 0),
	(10011, 10000, 10011, 10002, 10000, '2013-06-14 09:09:05', NULL, NULL, 0, 0, 143, 0),
	(10013, 10000, 10013, 10009, 10000, '2013-06-14 09:32:55', NULL, NULL, 0, 0, 143, 0),
	(10015, 10000, 10015, 10002, 10000, '2013-06-14 10:27:50', NULL, NULL, 0, 0, 143, 0),
	(10016, 10000, 10016, 10002, 10000, '2013-06-14 10:31:43', NULL, NULL, 0, 0, 143, 0),
	(10018, 10000, 10018, 10002, 10000, '2013-06-14 10:44:31', NULL, NULL, 0, 0, 143, 0),
	(10019, 10000, 10019, 10002, 10000, '2013-06-14 10:49:19', NULL, NULL, 0, 0, 143, 0),
	(10020, 10000, 10020, 10002, 10000, '2013-06-14 11:03:32', NULL, NULL, 0, 0, 143, 0),
	(10021, 10000, 10021, 10017, 10000, '2013-06-17 07:23:20', NULL, NULL, 0, 0, 143, 0),
	(10022, 10000, 10022, 10017, 10000, '2013-06-17 07:36:14', NULL, NULL, 0, 0, 143, 0),
	(10023, 10000, 10023, 10001, 10000, '2013-06-17 07:54:04', NULL, NULL, 0, 0, 143, 0),
	(10024, 10000, 10024, 10017, 10000, '2013-06-17 07:55:34', NULL, NULL, 0, 0, 143, 0),
	(10025, 10000, 10025, 10001, 10000, '2013-06-17 07:57:37', NULL, NULL, 0, 0, 143, 3),
	(10026, 10000, 10026, 10001, 10000, '2013-06-18 07:04:28', NULL, NULL, 0, 0, 143, 1),
	(10027, 10000, 10027, 10003, 10000, '2013-06-18 07:34:53', 10026, 10026, 0, 0, 143, 0),
	(10028, 10000, 10028, 10017, 10000, '2013-06-18 07:41:12', NULL, NULL, 0, 0, 143, 0),
	(10029, 10000, 10029, 10002, 10000, '2013-06-18 07:44:20', NULL, NULL, 0, 0, 143, 0),
	(10031, 10000, 10031, 10018, 10000, '2013-06-18 07:56:56', NULL, NULL, 0, 0, 143, 0),
	(10032, 10000, 10032, 10017, 10000, '2013-06-18 08:51:58', NULL, NULL, 0, 0, 143, 0),
	(10033, 10000, 10033, 10017, 10000, '2013-06-18 08:55:33', NULL, NULL, 0, 0, 143, 0),
	(10034, 10000, 10034, 10003, 10000, '2013-06-18 09:00:17', 10025, 10025, 0, 0, 143, 0),
	(10035, 10000, 10035, 10018, 10000, '2013-06-18 09:03:51', NULL, NULL, 0, 0, 143, 0),
	(10036, 10000, 10036, 10017, 10000, '2013-06-18 09:05:50', NULL, NULL, 0, 0, 143, 0),
	(10037, 10000, 10037, 10017, 10000, '2013-06-18 09:07:53', NULL, NULL, 0, 0, 143, 1),
	(10038, 10000, 10038, 10017, 10000, '2013-06-18 09:09:04', NULL, NULL, 0, 0, 143, 0),
	(10039, 10000, 10039, 10001, 10000, '2013-06-18 09:14:08', NULL, NULL, 0, 0, 143, 0),
	(10040, 10000, 10040, 10017, 10000, '2013-06-18 09:17:23', NULL, NULL, 0, 0, 143, 0),
	(10041, 10000, 10041, 10017, 10000, '2013-06-18 09:18:49', NULL, NULL, 0, 0, 143, 3),
	(10042, 10000, 10042, 10017, 10000, '2013-06-18 09:20:43', NULL, NULL, 0, 0, 143, 0),
	(10043, 10000, 10043, 10017, 10000, '2013-06-18 09:27:20', NULL, NULL, 0, 0, 143, 0),
	(10044, 10000, 10044, 10017, 10000, '2013-06-18 09:27:58', NULL, NULL, 0, 0, 143, 0),
	(10045, 10000, 10045, 10001, 10000, '2013-06-18 09:31:20', NULL, NULL, 0, 0, 143, 0),
	(10046, 10000, 10046, 10001, 10000, '2013-06-18 09:32:57', NULL, NULL, 0, 0, 143, 0),
	(10047, 10000, 10047, 10017, 10000, '2013-06-18 09:35:34', NULL, NULL, 0, 0, 143, 0),
	(10048, 10000, 10048, 10017, 10000, '2013-06-18 09:37:11', NULL, NULL, 0, 0, 143, 0),
	(10049, 10000, 10049, 10017, 10000, '2013-06-18 09:38:17', NULL, NULL, 0, 0, 143, 0),
	(10050, 10000, 10050, 10018, 10000, '2013-06-18 09:40:56', NULL, NULL, 0, 0, 143, 0),
	(10051, 10000, 10051, 10009, 10000, '2013-06-18 10:00:35', NULL, NULL, 0, 0, 143, 0),
	(10052, 10000, 10052, 10017, 10000, '2013-06-18 10:19:32', NULL, NULL, 0, 0, 143, 0),
	(10054, 10000, 10054, 10001, 10000, '2013-06-18 14:10:14', NULL, NULL, 0, 0, 143, 0),
	(10055, 10000, 10055, 10001, 10000, '2013-06-18 14:11:18', NULL, NULL, 0, 0, 143, 1),
	(10056, 10000, 10056, 10001, 10000, '2013-06-18 14:12:07', NULL, NULL, 0, 0, 143, 0),
	(10057, 10000, 10057, 10003, 10000, '2013-06-18 14:18:20', 10055, 10055, 0, 0, 143, 0),
	(10058, 10000, 10058, 10001, 10000, '2013-06-18 14:42:19', NULL, NULL, 0, 0, 143, 0),
	(10059, 10000, 10059, 10017, 10000, '2013-06-18 14:55:00', NULL, NULL, 0, 0, 143, 0),
	(10060, 10000, 10060, 10017, 10000, '2013-06-19 04:56:06', NULL, NULL, 0, 0, 143, 0),
	(10061, 10000, 10061, 10018, 10000, '2013-06-19 05:18:22', NULL, NULL, 0, 0, 143, 0),
	(10062, 10000, 10062, 10018, 10000, '2013-06-19 05:23:08', NULL, NULL, 0, 0, 143, 0),
	(10063, 10000, 10063, 10017, 10000, '2013-06-19 05:41:07', NULL, NULL, 0, 0, 143, 0),
	(10064, 10000, 10064, 10017, 10000, '2013-06-19 06:14:14', NULL, NULL, 0, 0, 143, 0),
	(10065, 10000, 10065, 10017, 10000, '2013-06-19 09:02:41', NULL, NULL, 0, 0, 143, 0),
	(10066, 10000, 10066, 10009, 10000, '2013-06-19 09:21:50', NULL, NULL, 0, 0, 143, 0),
	(10067, 10000, 10067, 10009, 10000, '2013-06-21 14:35:18', NULL, NULL, 0, 0, 143, 0),
	(10068, 10000, 10068, 10009, 10000, '2013-06-21 14:58:05', NULL, NULL, 0, 0, 143, 0),
	(10069, 10000, 10069, 10017, 10000, '2013-06-21 15:37:31', NULL, NULL, 0, 0, 143, 0),
	(10076, 10000, 10076, 10009, 10000, '2013-07-03 06:57:07', NULL, NULL, 0, 0, 143, 0),
	(10077, 10000, 10077, 10009, 10000, '2013-07-03 06:58:12', NULL, NULL, 0, 0, 143, 0),
	(10078, 10000, 10078, 10009, 10000, '2013-07-03 10:15:52', NULL, NULL, 0, 0, 143, 0),
	(10079, 10000, 10079, 10018, 10000, '2013-07-03 10:31:10', NULL, NULL, 0, 0, 143, 0),
	(10080, 10000, 10080, 10018, 10000, '2013-07-03 10:35:59', NULL, NULL, 0, 0, 143, 0),
	(10081, 10000, 10081, 10009, 10000, '2013-07-03 10:40:30', NULL, NULL, 0, 0, 143, 0),
	(10082, 10000, 10082, 10017, 10000, '2013-07-03 10:55:09', NULL, NULL, 0, 0, 143, 1),
	(10083, 10000, 10083, 10017, 10000, '2013-07-03 10:56:32', NULL, NULL, 0, 0, 143, 0),
	(10084, 10000, 10084, 10017, 10000, '2013-07-03 10:59:05', NULL, NULL, 0, 0, 143, 0),
	(10085, 10000, 10085, 10009, 10000, '2013-07-03 11:00:27', NULL, NULL, 0, 0, 143, 0),
	(10086, 10000, 10086, 10017, 10000, '2013-07-03 11:43:06', NULL, NULL, 0, 0, 143, 0),
	(10087, 10000, 10087, 10017, 10000, '2013-07-04 15:38:12', NULL, NULL, 0, 0, 143, 0),
	(10088, 10000, 10088, 10017, 10000, '2013-07-04 16:35:38', NULL, NULL, 0, 0, 143, 0),
	(10089, 10000, 10089, 10018, 10000, '2013-07-05 06:21:58', NULL, NULL, 0, 0, 143, 0),
	(10090, 10000, 10090, 10017, 10000, '2013-07-05 06:46:43', NULL, NULL, 0, 0, 143, 0),
	(10091, 10000, 10091, 10017, 10000, '2013-07-05 08:54:24', NULL, NULL, 0, 0, 143, 0),
	(10092, 10000, 10092, 10017, 10000, '2013-07-05 09:39:55', NULL, NULL, 0, 0, 143, 0),
	(10093, 10000, 10093, 10001, 10000, '2013-07-09 07:36:26', NULL, NULL, 0, 0, 143, 0),
	(10094, 10000, 10094, 10001, 10000, '2013-07-09 15:20:06', NULL, NULL, 0, 0, 143, 0),
	(10095, 10000, 10095, 10018, 10000, '2013-07-10 05:37:14', NULL, NULL, 0, 0, 145, 1),
	(10096, 10000, 10096, 10009, 10000, '2013-07-10 05:41:21', NULL, NULL, 0, 0, 143, 0),
	(10097, 10000, 10097, 10017, 10000, '2013-07-11 08:26:45', NULL, NULL, 0, 0, 143, 0),
	(10098, 10000, 10098, 10003, 10000, '2013-07-11 08:27:09', 10095, 10095, 0, 0, 143, 0),
	(10100, 10000, 10100, 10008, 10000, '2013-07-11 08:43:37', NULL, NULL, 0, 0, 145, 0),
	(10101, 10000, 10101, 10008, 10000, '2013-07-11 08:43:45', NULL, NULL, 0, 0, 145, 0),
	(10102, 10000, 10102, 10008, 10000, '2013-07-11 08:43:52', NULL, NULL, 0, 0, 145, 0),
	(10103, 10000, 10103, 10008, 10000, '2013-07-11 08:44:08', NULL, NULL, 0, 0, 145, 0),
	(10105, 10000, 10105, 10008, 10000, '2013-07-23 08:58:57', NULL, NULL, 0, 0, 145, 0),
	(10107, 10000, 10107, 10003, 10000, '2013-07-24 07:44:25', 10037, 10037, 0, 0, 143, 0),
	(10108, 10000, 10108, 10009, 10000, '2013-07-24 08:15:02', NULL, NULL, 0, 0, 143, 0),
	(10109, 10000, 10109, 10017, 10000, '2013-07-24 08:44:16', NULL, NULL, 0, 0, 143, 0),
	(10110, 10000, 10110, 10017, 10000, '2013-07-24 08:49:30', NULL, NULL, 0, 0, 143, 0),
	(10111, 10000, 10111, 10001, 10000, '2013-07-24 09:13:58', NULL, NULL, 0, 0, 143, 0),
	(10125, 10000, 10125, 10009, 10000, '2013-07-25 05:45:30', NULL, NULL, 0, 0, 143, 0),
	(10126, 10000, 10126, 10018, 10000, '2013-07-25 07:17:41', NULL, NULL, 0, 0, 143, 0),
	(10127, 10000, 10127, 10009, 10000, '2013-07-30 12:09:39', NULL, NULL, 0, 0, 143, 0),
	(10128, 10000, 10128, 10001, 10000, '2013-07-30 15:11:46', NULL, NULL, 0, 0, 143, 0),
	(10129, 10000, 10129, 10009, 10000, '2013-07-30 15:25:32', NULL, NULL, 0, 0, 143, 0),
	(10130, 10000, 10130, 10017, 10000, '2013-08-01 08:39:43', NULL, NULL, 0, 0, 143, 0),
	(10131, 10000, 10131, 10001, 10000, '2013-08-01 08:40:51', NULL, NULL, 0, 0, 143, 0),
	(10132, 10000, 10132, 10004, 10014, '2013-08-01 08:43:37', NULL, NULL, 0, 0, 143, 0),
	(10133, 10000, 10133, 10004, 10015, '2013-08-01 08:47:22', NULL, NULL, 0, 0, 143, 0),
	(10134, 10000, 10134, 10004, 10018, '2013-08-01 08:50:53', NULL, NULL, 0, 0, 143, 0),
	(10135, 10000, 10135, 10004, 10019, '2013-08-01 08:51:37', NULL, NULL, 0, 0, 143, 0),
	(10136, 10000, 10136, 10001, 10000, '2013-08-01 08:58:28', NULL, NULL, 0, 0, 143, 0),
	(10142, 10000, 10142, 10001, 10000, '2013-08-01 15:35:43', NULL, NULL, 0, 0, 143, 0),
	(10143, 10000, 10143, 10001, 10000, '2013-08-02 10:13:32', NULL, NULL, 0, 0, 143, 0),
	(10144, 10000, 10144, 10017, 10000, '2013-08-02 10:30:34', NULL, NULL, 0, 0, 143, 0),
	(10145, 10000, 10145, 10017, 10000, '2013-08-02 11:50:36', NULL, NULL, 0, 0, 143, 0),
	(10146, 10000, 10146, 10003, 10000, '2013-08-02 11:51:20', 10082, 10082, 0, 0, 143, 0),
	(10147, 10000, 10147, 10009, 10000, '2013-08-02 12:07:54', NULL, NULL, 0, 0, 143, 0),
	(10148, 10000, 10148, 10009, 10000, '2013-08-02 14:00:18', NULL, NULL, 0, 0, 143, 0),
	(10194, 10000, 10194, 10003, 10000, '2013-09-03 11:11:35', 10025, 10025, 0, 0, 143, 1),
	(10195, 10000, 10195, 10003, 10000, '2013-09-03 11:11:42', 10194, 10025, 0, 0, 143, 0),
	(10198, 10000, 10198, 10002, 10000, '2013-09-03 13:35:49', NULL, NULL, 0, 0, 143, 0),
	(10199, 10000, 10199, 10005, 10000, '2013-09-04 08:04:34', NULL, NULL, 0, 0, 144, 0),
	(10201, 10000, 10201, 10004, 10000, '2013-09-16 10:53:15', NULL, NULL, 0, 0, 143, 0),
	(10211, 10000, 10211, 10009, 10000, '2013-10-02 11:15:25', NULL, NULL, 0, 0, 143, 0),
	(10212, 10000, 10212, 10009, 10000, '2013-10-02 13:27:05', NULL, NULL, 0, 0, 143, 0),
	(10213, 10000, 10213, 10009, 10000, '2013-10-02 13:27:37', NULL, NULL, 0, 0, 143, 0),
	(10214, 10000, 10214, 10009, 10000, '2013-10-02 13:34:06', NULL, NULL, 0, 0, 143, 0),
	(10215, 10000, 10215, 10009, 10000, '2013-10-02 13:37:40', NULL, NULL, 0, 0, 143, 0),
	(10216, 10000, 10216, 10009, 10000, '2013-10-02 13:38:27', NULL, NULL, 0, 0, 143, 0),
	(10217, 10000, 10217, 10009, 10000, '2013-10-02 13:38:39', NULL, NULL, 0, 0, 143, 0),
	(10218, 10000, 10218, 10009, 10000, '2013-10-02 13:39:05', NULL, NULL, 0, 0, 143, 0),
	(10219, 10000, 10219, 10009, 10000, '2013-10-02 13:41:16', NULL, NULL, 0, 0, 143, 0),
	(10220, 10000, 10220, 10009, 10000, '2013-10-02 13:44:57', NULL, NULL, 0, 0, 143, 0),
	(10221, 10000, 10221, 10009, 10000, '2013-10-02 13:45:49', NULL, NULL, 0, 0, 143, 0),
	(10222, 10000, 10222, 10009, 10000, '2013-10-02 13:46:27', NULL, NULL, 0, 0, 143, 0),
	(10223, 10000, 10223, 10009, 10000, '2013-10-02 13:46:44', NULL, NULL, 0, 0, 143, 0),
	(10224, 10000, 10224, 10009, 10000, '2013-10-02 13:47:16', NULL, NULL, 0, 0, 143, 0),
	(10225, 10000, 10225, 10012, 10000, '2013-10-07 09:25:26', NULL, NULL, 0, 0, 143, 0),
	(10226, 10000, 10226, 10012, 10000, '2013-10-07 09:34:18', NULL, NULL, 0, 0, 143, 4),
	(10227, 10000, 10227, 10002, 10000, '2013-10-07 15:31:08', NULL, NULL, 0, 0, 143, 0),
	(10228, 10000, 10228, 10002, 10000, '2013-10-07 15:35:25', NULL, NULL, 0, 0, 143, 0),
	(10231, 10000, 10231, 10017, 10000, '2013-10-08 06:53:03', NULL, NULL, 0, 0, 143, 0),
	(10232, 10000, 10232, 10017, 10000, '2013-10-08 08:40:03', NULL, NULL, 0, 0, 143, 0),
	(10234, 10000, 10234, 10004, 10059, '2013-10-08 15:49:45', NULL, NULL, 0, 0, 143, 0),
	(10235, 10000, 10235, 10004, 10060, '2013-10-08 15:50:26', NULL, NULL, 0, 0, 143, 0),
	(10236, 10000, 10236, 10004, 10061, '2013-10-08 15:50:48', NULL, NULL, 0, 0, 143, 0),
	(10237, 10000, 10237, 10004, 10062, '2013-10-08 15:51:17', NULL, NULL, 0, 0, 143, 0),
	(10238, 10000, 10238, 10004, 10063, '2013-10-08 15:51:39', NULL, NULL, 0, 0, 143, 0),
	(10239, 10000, 10239, 10004, 10064, '2013-10-08 15:51:50', NULL, NULL, 0, 0, 143, 0),
	(10240, 10000, 10240, 10004, 10065, '2013-10-08 15:55:38', NULL, NULL, 0, 0, 143, 0),
	(10241, 10000, 10241, 10004, 10066, '2013-10-08 15:56:53', NULL, NULL, 0, 0, 143, 0),
	(10242, 10000, 10242, 10004, 10067, '2013-10-11 08:36:15', NULL, NULL, 0, 0, 143, 0),
	(10243, 10000, 10243, 10004, 10068, '2013-10-11 08:36:37', NULL, NULL, 0, 0, 143, 0),
	(10244, 10000, 10244, 10004, 10069, '2013-10-11 08:37:39', NULL, NULL, 0, 0, 143, 0),
	(10245, 10000, 10245, 10004, 10070, '2013-10-11 08:40:45', NULL, NULL, 0, 0, 143, 0),
	(10246, 10000, 10246, 10004, 10071, '2013-10-11 08:42:00', NULL, NULL, 0, 0, 143, 0),
	(10247, 10000, 10247, 10004, 10072, '2013-10-11 08:50:28', NULL, NULL, 0, 0, 143, 0),
	(10248, 10000, 10248, 10004, 10073, '2013-10-11 08:57:08', NULL, NULL, 0, 0, 143, 0),
	(10252, 10000, 10252, 10002, 10000, '2013-10-11 09:11:40', NULL, NULL, 0, 0, 143, 0),
	(10256, 10000, 10256, 10002, 10000, '2013-10-11 09:37:43', NULL, NULL, 0, 0, 143, 0),
	(10261, 10000, 10261, 10017, 10000, '2013-10-11 10:02:43', NULL, NULL, 0, 0, 143, 0),
	(10263, 10000, 10263, 10017, 10000, '2013-10-11 10:08:25', NULL, NULL, 0, 0, 143, 0),
	(10264, 10000, 10264, 10017, 10000, '2013-10-11 10:18:33', NULL, NULL, 0, 0, 143, 0),
	(10265, 10000, 10265, 10017, 10000, '2013-10-11 10:23:33', NULL, NULL, 0, 0, 143, 0),
	(10266, 10000, 10266, 10009, 10000, '2013-10-11 14:18:00', NULL, NULL, 0, 0, 143, 0),
	(10267, 10000, 10267, 10002, 10000, '2013-10-15 06:51:48', NULL, NULL, 0, 0, 143, 0),
	(10268, 10000, 10268, 10002, 10000, '2013-10-15 07:16:47', NULL, NULL, 0, 0, 143, 0),
	(10269, 10000, 10269, 10008, 10000, '2013-10-15 09:19:23', NULL, NULL, 0, 0, 143, 0),
	(10270, 10000, 10270, 10008, 10000, '2013-10-15 09:22:55', NULL, NULL, 0, 0, 143, 0),
	(10271, 10000, 10271, 10008, 10000, '2013-10-15 09:28:15', NULL, NULL, 0, 0, 143, 0),
	(10272, 10000, 10272, 10008, 10000, '2013-10-15 09:32:15', NULL, NULL, 0, 0, 143, 0),
	(10273, 10000, 10273, 10008, 10000, '2013-10-15 09:38:03', NULL, NULL, 0, 0, 143, 0),
	(10274, 10000, 10274, 10008, 10000, '2013-10-15 09:40:55', NULL, NULL, 0, 0, 143, 0),
	(10275, 10000, 10275, 10008, 10000, '2013-10-15 09:43:27', NULL, NULL, 0, 0, 143, 0),
	(10276, 10000, 10276, 10008, 10000, '2013-10-15 10:49:11', NULL, NULL, 0, 0, 143, 0),
	(10277, 10000, 10277, 10008, 10000, '2013-10-15 10:49:43', NULL, NULL, 0, 0, 143, 0),
	(10278, 10000, 10278, 10008, 10000, '2013-10-15 10:50:07', NULL, NULL, 0, 0, 143, 0),
	(10279, 10000, 10279, 10008, 10000, '2013-10-15 10:50:15', NULL, NULL, 0, 0, 143, 0),
	(10280, 10000, 10280, 10008, 10000, '2013-10-15 10:50:42', NULL, NULL, 0, 0, 143, 0),
	(10281, 10000, 10281, 10008, 10000, '2013-10-15 10:50:55', NULL, NULL, 0, 0, 143, 0),
	(10282, 10000, 10282, 10008, 10000, '2013-10-15 10:51:21', NULL, NULL, 0, 0, 143, 0),
	(10283, 10000, 10283, 10008, 10000, '2013-10-15 10:51:34', NULL, NULL, 0, 0, 143, 0),
	(10284, 10000, 10284, 10008, 10000, '2013-10-15 10:51:57', NULL, NULL, 0, 0, 143, 0),
	(10285, 10000, 10285, 10008, 10000, '2013-10-15 10:52:06', NULL, NULL, 0, 0, 143, 0),
	(10286, 10000, 10286, 10008, 10000, '2013-10-15 10:52:41', NULL, NULL, 0, 0, 143, 0),
	(10287, 10000, 10287, 10008, 10000, '2013-10-15 10:53:47', NULL, NULL, 0, 0, 143, 0),
	(10288, 10000, 10288, 10008, 10000, '2013-10-15 10:54:12', NULL, NULL, 0, 0, 143, 0),
	(10289, 10000, 10289, 10008, 10000, '2013-10-15 10:55:13', NULL, NULL, 0, 0, 143, 0),
	(10290, 10000, 10290, 10008, 10000, '2013-10-15 10:55:42', NULL, NULL, 0, 0, 143, 0),
	(10291, 10000, 10291, 10008, 10000, '2013-10-15 10:55:51', NULL, NULL, 0, 0, 143, 0),
	(10292, 10000, 10292, 10008, 10000, '2013-10-15 10:56:22', NULL, NULL, 0, 0, 143, 0),
	(10293, 10000, 10293, 10008, 10000, '2013-10-15 10:56:42', NULL, NULL, 0, 0, 143, 0),
	(10294, 10000, 10294, 10008, 10000, '2013-10-15 10:57:42', NULL, NULL, 0, 0, 143, 0),
	(10295, 10000, 10295, 10008, 10000, '2013-10-15 12:05:44', NULL, NULL, 0, 0, 143, 0),
	(10296, 10000, 10296, 10004, 10074, '2013-10-15 12:21:40', NULL, NULL, 0, 0, 143, 0),
	(10297, 10000, 10297, 10004, 10075, '2013-10-15 12:23:16', NULL, NULL, 0, 0, 143, 0),
	(10298, 10000, 10298, 10004, 10076, '2013-10-15 12:24:11', NULL, NULL, 0, 0, 143, 0),
	(10299, 10000, 10299, 10004, 10077, '2013-10-15 12:24:34', NULL, NULL, 0, 0, 143, 0),
	(10305, 10000, 10305, 10003, 10000, '2013-10-20 08:09:53', 10041, 10041, 0, 0, 143, 2),
	(10306, 10000, 10306, 10003, 10000, '2013-10-20 08:10:01', 10305, 10041, 0, 0, 143, 0),
	(10307, 10000, 10307, 10003, 10000, '2013-10-20 08:10:06', 10305, 10041, 0, 0, 143, 0),
	(10328, 10000, 10328, 10002, 10000, '2013-10-24 10:34:19', NULL, NULL, 0, 0, 143, 0),
	(10341, 10000, 10341, 10005, 10000, '2013-10-29 10:27:40', NULL, NULL, 0, 0, 144, 0),
	(10342, 10000, 10342, 10005, 10000, '2013-10-29 10:28:05', NULL, NULL, 0, 0, 144, 0),
	(10344, 10000, 10344, 10005, 10000, '2013-10-29 14:53:21', NULL, NULL, 0, 0, 144, 0),
	(10345, 10000, 10345, 10005, 10000, '2013-10-29 14:53:58', NULL, NULL, 0, 0, 144, 0),
	(10346, 10000, 10346, 10005, 10000, '2013-10-29 14:54:38', NULL, NULL, 0, 0, 144, 0),
	(10347, 10000, 10347, 10005, 10000, '2013-10-29 14:54:56', NULL, NULL, 0, 0, 144, 0),
	(10352, 10000, 10352, 10009, 10000, '2013-11-05 15:10:06', NULL, NULL, 0, 0, 143, 0),
	(10353, 10000, 10353, 10009, 10000, '2013-11-05 15:10:38', NULL, NULL, 0, 0, 143, 0),
	(10434, 10000, 10434, 10028, 10000, '2013-11-08 07:24:55', NULL, NULL, 0, 0, 145, 1),
	(10435, 10000, 10435, 10003, 10000, '2013-11-08 08:27:01', 10434, 10434, 0, 0, 143, 0),
	(10436, 10000, 10436, 10028, 10000, '2013-11-08 08:53:55', NULL, NULL, 0, 0, 143, 2),
	(10437, 10000, 10437, 10003, 10000, '2013-11-08 08:58:33', 10436, 10436, 0, 0, 143, 1),
	(10438, 10000, 10438, 10003, 10000, '2013-11-08 08:58:46', 10437, 10437, 0, 0, 143, 0),
	(10439, 10000, 10439, 10002, 10000, '2013-11-12 14:11:21', NULL, NULL, 0, 0, 143, 0),
	(10440, 10000, 10440, 10009, 10000, '2013-11-12 15:28:50', NULL, NULL, 0, 0, 143, 0),
	(10481, 10000, 10481, 10002, 10000, '2014-04-11 17:17:36', NULL, NULL, 0, 0, 143, 0),
	(10548, 10000, 10548, 10002, 10000, '2014-05-16 10:58:39', NULL, NULL, 0, 0, 143, 0),
	(10549, 10000, 10549, 10009, 10000, '2014-05-16 11:01:49', NULL, NULL, 0, 0, 143, 0),
	(10550, 10000, 10550, 10077, 10000, '2014-05-16 12:57:43', NULL, NULL, 0, 0, 143, 0),
	(10551, 10000, 10551, 10077, 10000, '2014-05-16 13:33:26', NULL, NULL, 0, 0, 143, 1),
	(10552, 10000, 10552, 10077, 10000, '2014-05-16 13:33:42', NULL, NULL, 0, 0, 143, 0),
	(10553, 10000, 10553, 10077, 10000, '2014-05-16 13:35:22', NULL, NULL, 0, 0, 143, 0),
	(10554, 10000, 10554, 10077, 10000, '2014-05-19 12:56:52', NULL, NULL, 0, 0, 143, 0),
	(10555, 10000, 10555, 10077, 10000, '2014-05-19 12:58:12', NULL, NULL, 0, 0, 143, 0),
	(10556, 10000, 10556, 10077, 10000, '2014-05-19 12:59:58', NULL, NULL, 0, 0, 143, 45),
	(10557, 10000, 10557, 10077, 10000, '2014-05-19 13:00:41', NULL, NULL, 0, 0, 143, 0),
	(10558, 10000, 10558, 10003, 10000, '2014-05-19 14:33:45', 10556, 10556, 0, 0, 143, 9),
	(10559, 10000, 10559, 10003, 10000, '2014-05-19 14:36:14', 10556, 10556, 0, 0, 143, 1),
	(10560, 10000, 10560, 10003, 10000, '2014-05-19 14:37:04', 10556, 10556, 0, 0, 143, 5),
	(10562, 10000, 10562, 10002, 10000, '2014-05-20 10:13:29', NULL, NULL, 0, 0, 143, 0),
	(10563, 10000, 10563, 10002, 10000, '2014-05-20 10:30:21', NULL, NULL, 0, 0, 143, 0),
	(10571, 10000, 10571, 10002, 10000, '2014-06-20 13:23:09', NULL, NULL, 0, 0, 143, 0),
	(10572, 10000, 10572, 10002, 10000, '2014-06-20 13:31:54', NULL, NULL, 0, 0, 143, 0),
	(10574, 10000, 10574, 10002, 10000, '2014-06-20 13:52:47', NULL, NULL, 0, 0, 143, 0),
	(10575, 10000, 10575, 10002, 10000, '2014-06-20 13:54:05', NULL, NULL, 0, 0, 143, 0),
	(10576, 10000, 10576, 10002, 10000, '2014-06-20 13:56:13', NULL, NULL, 0, 0, 143, 0),
	(10577, 10000, 10577, 10002, 10000, '2014-06-20 13:56:36', NULL, NULL, 0, 0, 143, 0),
	(10578, 10000, 10578, 10002, 10000, '2014-06-20 13:57:43', NULL, NULL, 0, 0, 143, 0),
	(10579, 10000, 10579, 10002, 10000, '2014-06-20 13:57:55', NULL, NULL, 0, 0, 143, 0),
	(10580, 10000, 10580, 10002, 10000, '2014-06-20 14:04:28', NULL, NULL, 0, 0, 143, 0),
	(10581, 10000, 10581, 10002, 10000, '2014-06-20 14:07:27', NULL, NULL, 0, 0, 143, 0),
	(10582, 10000, 10582, 10002, 10000, '2014-06-20 14:07:53', NULL, NULL, 0, 0, 143, 0),
	(10583, 10000, 10583, 10002, 10000, '2014-06-20 14:08:12', NULL, NULL, 0, 0, 143, 0),
	(10584, 10000, 10584, 10002, 10000, '2014-06-20 14:08:35', NULL, NULL, 0, 0, 143, 0),
	(10585, 10000, 10585, 10002, 10000, '2014-06-20 14:12:07', NULL, NULL, 0, 0, 143, 0),
	(10586, 10000, 10586, 10002, 10000, '2014-06-20 14:22:50', NULL, NULL, 0, 0, 143, 0),
	(10587, 10000, 10587, 10002, 10000, '2014-06-20 14:23:36', NULL, NULL, 0, 0, 143, 0),
	(10588, 10000, 10588, 10002, 10000, '2014-06-20 14:24:21', NULL, NULL, 0, 0, 143, 0),
	(10644, 10000, 10644, 10009, 10000, '2014-06-25 10:10:03', NULL, NULL, 0, 0, 143, 0),
	(10645, 10000, 10645, 10009, 10000, '2014-06-25 13:36:29', NULL, NULL, 0, 0, 143, 0),
	(10646, 10000, 10646, 10002, 10000, '2014-07-01 06:13:58', NULL, NULL, 0, 0, 143, 0),
	(10647, 10000, 10647, 10002, 10000, '2014-07-01 06:58:11', NULL, NULL, 0, 0, 143, 0),
	(10650, 10000, 10650, 10083, 10000, '2014-07-03 13:45:31', NULL, NULL, 0, 0, 143, 0),
	(10652, 10000, 10652, 10002, 10000, '2014-07-03 14:44:31', NULL, NULL, 0, 0, 143, 0),
	(10655, 10000, 10655, 10002, 10000, '2014-07-03 16:49:29', NULL, NULL, 0, 0, 143, 0),
	(10657, 10000, 10657, 10002, 10000, '2014-07-03 16:52:14', NULL, NULL, 0, 0, 143, 0),
	(10658, 10000, 10658, 10002, 10000, '2014-07-03 16:52:55', NULL, NULL, 0, 0, 143, 0),
	(10659, 10000, 10659, 10002, 10000, '2014-07-03 16:53:05', NULL, NULL, 0, 0, 143, 0),
	(10660, 10000, 10660, 10002, 10000, '2014-07-03 16:57:02', NULL, NULL, 0, 0, 143, 0),
	(10663, 10000, 10663, 10002, 10000, '2014-07-08 09:16:55', NULL, NULL, 0, 0, 143, 0),
	(10664, 10000, 10664, 10005, 10000, '2014-07-08 09:29:22', NULL, NULL, 0, 0, 144, 0),
	(10665, 10000, 10665, 10005, 10000, '2014-07-08 09:29:55', NULL, NULL, 0, 0, 144, 0),
	(10666, 10000, 10666, 10005, 10000, '2014-07-08 09:30:52', NULL, NULL, 0, 0, 144, 0),
	(10667, 10000, 10667, 10005, 10000, '2014-07-08 09:35:40', NULL, NULL, 0, 0, 144, 0),
	(10700, 10000, 10700, 10004, 10107, '2014-07-09 14:17:36', NULL, NULL, 0, 0, 143, 0),
	(10701, 10000, 10701, 10004, 10108, '2014-07-09 14:19:29', NULL, NULL, 0, 0, 143, 0),
	(10702, 10000, 10702, 10004, 10109, '2014-07-09 14:20:17', NULL, NULL, 0, 0, 143, 0),
	(10703, 10000, 10703, 10004, 10110, '2014-07-09 14:24:24', NULL, NULL, 0, 0, 143, 0),
	(10704, 10000, 10704, 10004, 10111, '2014-07-09 14:29:28', NULL, NULL, 0, 0, 143, 0),
	(10705, 10000, 10705, 10004, 10112, '2014-07-09 14:30:05', NULL, NULL, 0, 0, 143, 0),
	(10706, 10000, 10706, 10004, 10113, '2014-07-09 14:30:40', NULL, NULL, 0, 0, 143, 0),
	(10707, 10000, 10707, 10004, 10114, '2014-07-09 14:31:11', NULL, NULL, 0, 0, 143, 0),
	(10708, 10000, 10708, 10004, 10115, '2014-07-09 14:32:04', NULL, NULL, 0, 0, 143, 0),
	(10709, 10000, 10709, 10004, 10116, '2014-07-09 14:32:47', NULL, NULL, 0, 0, 143, 0),
	(10710, 10000, 10710, 10004, 10117, '2014-07-09 14:35:57', NULL, NULL, 0, 0, 143, 0),
	(10711, 10000, 10711, 10004, 10118, '2014-07-09 15:02:14', NULL, NULL, 0, 0, 143, 0),
	(10713, 10000, 10713, 10093, 10000, '2014-07-10 09:35:14', NULL, NULL, 0, 0, 144, 0),
	(10716, 10000, 10716, 10002, 10000, '2014-07-11 09:17:05', NULL, NULL, 0, 0, 143, 0),
	(10719, 10000, 10719, 10002, 10000, '2014-07-11 09:36:58', NULL, NULL, 0, 0, 143, 0),
	(10734, 10000, 10734, 10002, 10000, '2014-07-12 15:15:57', NULL, NULL, 0, 0, 143, 0),
	(10735, 10000, 10735, 10002, 10000, '2014-07-12 15:17:45', NULL, NULL, 0, 0, 143, 0),
	(10736, 10000, 10736, 10002, 10000, '2014-07-12 15:18:25', NULL, NULL, 0, 0, 143, 0),
	(10737, 10000, 10737, 10002, 10000, '2014-07-12 15:19:56', NULL, NULL, 0, 0, 143, 0),
	(10738, 10000, 10738, 10002, 10000, '2014-07-12 15:21:32', NULL, NULL, 0, 0, 143, 0),
	(10739, 10000, 10739, 10002, 10000, '2014-07-12 15:31:59', NULL, NULL, 0, 0, 143, 0),
	(10740, 10000, 10740, 10002, 10000, '2014-07-12 15:32:37', NULL, NULL, 0, 0, 143, 0),
	(10741, 10000, 10741, 10004, 10119, '2014-07-12 16:18:47', NULL, NULL, 0, 0, 143, 0),
	(10742, 10000, 10742, 10004, 10120, '2014-07-12 17:15:12', NULL, NULL, 0, 0, 143, 0),
	(10743, 10000, 10743, 10004, 10121, '2014-07-12 17:15:45', NULL, NULL, 0, 0, 143, 0),
	(10745, 10000, 10745, 10002, 10000, '2014-07-12 19:53:20', NULL, NULL, 0, 0, 143, 0),
	(10751, 10000, 10751, 10002, 10000, '2014-08-07 08:39:17', NULL, NULL, 0, 0, 143, 0),
	(10760, 10000, 10760, 10002, 10000, '2014-08-10 14:51:51', NULL, NULL, 0, 0, 143, 0),
	(10761, 10000, 10761, 10002, 10000, '2014-08-10 14:51:59', NULL, NULL, 0, 0, 143, 0),
	(10762, 10000, 10762, 10002, 10000, '2014-08-10 14:52:29', NULL, NULL, 0, 0, 143, 0),
	(10763, 10000, 10763, 10002, 10000, '2014-08-10 14:53:04', NULL, NULL, 0, 0, 143, 0),
	(10793, 10000, 10793, 10004, 10140, '2014-09-01 08:01:08', NULL, NULL, 0, 0, 143, 0),
	(10876, 10000, 10876, 10004, 10141, '2014-09-04 15:39:50', NULL, NULL, 0, 0, 143, 0),
	(10892, 10000, 10892, 10002, 10000, '2014-09-08 09:59:53', NULL, NULL, 0, 0, 143, 0),
	(10893, 10000, 10893, 10002, 10000, '2014-09-08 10:01:34', NULL, NULL, 0, 0, 143, 0),
	(10898, 10000, 10898, 10002, 10000, '2014-09-08 11:17:38', NULL, NULL, 0, 0, 143, 0),
	(10903, 10000, 10903, 10002, 10000, '2014-09-08 12:05:12', NULL, NULL, 0, 0, 143, 0),
	(10904, 10000, 10904, 10002, 10000, '2014-09-08 12:05:26', NULL, NULL, 0, 0, 143, 0),
	(10905, 10000, 10905, 10002, 10000, '2014-09-08 13:07:48', NULL, NULL, 0, 0, 143, 0),
	(10906, 10000, 10906, 10002, 10000, '2014-09-08 13:10:46', NULL, NULL, 0, 0, 143, 0),
	(10973, 10000, 10973, 10004, 10169, '2014-09-11 11:01:16', NULL, NULL, 0, 0, 143, 0),
	(10974, 10000, 10974, 10003, 10169, '2014-09-11 11:04:14', 10560, 10556, 0, 0, 143, 1),
	(10975, 10000, 10975, 10080, 10169, '2014-09-11 11:04:36', NULL, NULL, 0, 0, 143, 0),
	(10976, 10000, 10976, 10094, 10169, '2014-09-11 11:06:12', NULL, NULL, 0, 0, 143, 0),
	(10977, 10000, 10977, 10003, 10169, '2014-09-11 11:06:50', 10556, 10556, 0, 0, 144, 0),
	(10978, 10000, 10978, 10002, 10000, '2014-09-11 11:07:21', NULL, NULL, 0, 0, 143, 0),
	(10979, 10000, 10979, 10003, 10169, '2014-09-11 11:13:05', 10974, 10556, 0, 0, 143, 0),
	(10980, 10000, 10980, 10080, 10169, '2014-09-11 11:13:45', NULL, NULL, 0, 0, 143, 0);
/*!40000 ALTER TABLE `post` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.post_content
CREATE TABLE IF NOT EXISTS `post_content` (
  `post_content_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `date_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `post_id` int(11) unsigned NOT NULL,
  `revision` int(11) unsigned NOT NULL DEFAULT '1' COMMENT 'Highest revision is current',
  `display_order` int(11) unsigned NOT NULL DEFAULT '1' COMMENT 'The display order of this field',
  `text` text COLLATE utf8_unicode_ci COMMENT 'The text in a text field',
  `link` text COLLATE utf8_unicode_ci COMMENT 'The link in a link field',
  `link_thumbnail_url` text COLLATE utf8_unicode_ci COMMENT 'The original url for a links thumbnail. ''data'' If the original image was embded as a data string rather than an url.',
  `link_title` text COLLATE utf8_unicode_ci COMMENT 'The link_title in a link field',
  `link_content` text COLLATE utf8_unicode_ci COMMENT 'The link to the original image used to generate a thumbnail in link fields',
  `checked` tinyint(1) DEFAULT NULL COMMENT 'A checkbox value',
  `selected` text COLLATE utf8_unicode_ci COMMENT 'An array of comma sperated selected values for a list',
  `value_max` int(11) DEFAULT NULL COMMENT 'The maximum value of this post if it is set on the post',
  `value_min` int(11) DEFAULT NULL COMMENT 'The minimum value of this post if it is set on the post',
  PRIMARY KEY (`post_content_id`),
  UNIQUE KEY `display_order` (`display_order`,`revision`,`post_id`),
  KEY `post_id` (`post_id`,`revision`)
) ENGINE=InnoDB AUTO_INCREMENT=13044 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Contains a JSON object detailing the post';

-- Dumping data for table cobalt_cascade.post_content: ~1,812 rows (approximately)
/*!40000 ALTER TABLE `post_content` DISABLE KEYS */;
INSERT INTO `post_content` (`post_content_id`, `date_created`, `post_id`, `revision`, `display_order`, `text`, `link`, `link_thumbnail_url`, `link_title`, `link_content`, `checked`, `selected`, `value_max`, `value_min`) VALUES
	(1, '2011-11-09 12:00:00', 1, 1, 1, 'test post 1', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(2, '2011-11-09 13:00:00', 2, 1, 1, 'test post 2', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(3, '2011-11-09 14:00:00', 3, 1, 1, 'test post 3 - breaks for testing when full data is requested', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(4, '2011-11-10 12:00:00', 4, 1, 1, 'test post 4', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(5, '2011-11-10 13:00:00', 5, 1, 1, 'test post 5', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(6, '2011-11-11 12:00:00', 6, 1, 1, 'test post 6', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(7, '2011-11-11 13:00:00', 7, 1, 1, 'test post 7', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(8, '2011-11-11 14:00:00', 8, 1, 1, 'test post 8', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(9, '2011-11-13 12:00:00', 9, 1, 1, 'test post 9 - comment 1', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10, '2011-11-13 13:00:00', 10, 1, 1, 'test post 10 - comment 2', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11, '2011-11-13 14:00:00', 11, 1, 1, 'test post 11 - comment 3', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12, '2011-11-13 15:00:00', 12, 1, 1, 'test post 12 - comment 4', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13, '2011-11-13 16:00:00', 13, 1, 1, 'test post 13 - comment 5', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(14, '2011-11-13 15:10:00', 14, 1, 1, 'test post 14 - comment 6', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(15, '2011-11-13 15:20:00', 15, 1, 1, 'test post 15 - comment 7', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(16, '2011-11-13 15:30:00', 16, 1, 1, 'test post 16 - comment 8', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(19, '2011-11-20 12:00:00', 19, 1, 1, 'test post 19', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(20, '2011-11-20 13:00:00', 20, 1, 1, 'test post 20', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(21, '2011-11-20 14:00:00', 21, 1, 1, 'test post 21', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(22, '2011-11-21 12:00:00', 22, 1, 1, 'test post 22', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(24, '2011-11-21 12:04:00', 24, 1, 1, 'test post 24', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(25, '2011-11-21 12:05:00', 25, 1, 1, 'test post 25', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(26, '2011-11-21 12:06:00', 26, 1, 1, 'test post 26', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(27, '2011-11-21 12:07:00', 27, 1, 1, 'test post 27', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(28, '2011-11-21 12:08:00', 28, 1, 1, 'test post 28', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(29, '2011-11-21 12:09:00', 29, 1, 1, 'test post 29', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(30, '2011-11-21 12:10:00', 30, 1, 1, 'test post 30', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(31, '2011-11-21 12:11:00', 31, 1, 1, 'test post 31', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(32, '2011-11-21 12:12:00', 32, 1, 1, 'test post 32', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(33, '2011-11-21 12:13:00', 33, 1, 1, 'test post 33', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(34, '2011-11-21 12:14:00', 34, 1, 1, 'test post 34', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(35, '2011-11-21 12:15:00', 35, 1, 1, 'test post 35', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(36, '2011-11-21 12:16:00', 36, 1, 1, 'test post 36', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(37, '2011-11-21 12:17:00', 37, 1, 1, 'test post 37', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(38, '2011-11-13 14:01:00', 38, 1, 1, 'test post 38 - comment 9', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(39, '2011-11-13 11:00:00', 39, 1, 1, 'test post 38 - comment 10', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(40, '2011-11-13 17:00:00', 40, 1, 1, 'test post 40 - comment 11', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(41, '2011-11-13 15:05:00', 41, 1, 1, 'test post 41 - comment 12', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(42, '2011-11-13 15:15:00', 42, 1, 1, 'test post 42 - comment 13', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(43, '2011-11-13 15:25:00', 43, 1, 1, 'test post 43 - comment 14', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(44, '2011-11-13 15:26:00', 44, 1, 1, 'test post 44 - comment 15', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(45, '2011-11-13 15:35:00', 45, 1, 1, 'test post 45 - comment 16', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(46, '2011-11-13 15:40:00', 46, 1, 1, 'test post 46 - comment 17', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(47, '2011-11-13 15:50:00', 47, 1, 1, 'test post 47 - comment 18', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(48, '2011-11-13 15:51:00', 48, 1, 1, 'test post 48 - comment 19', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(49, '2011-11-13 15:52:00', 49, 1, 1, 'test post 49 - comment 20', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(50, '2011-11-13 15:52:00', 50, 1, 1, NULL, 'http://cobaltcascade.localhost/test3/profile', NULL, 'cobaltcascade.localhost/test3', NULL, NULL, NULL, NULL, NULL),
	(51, '2011-11-13 15:52:00', 51, 1, 1, NULL, 'http://cobaltcascade.localhost/test3/profile', NULL, 'cobaltcascade.localhost/test3', NULL, NULL, NULL, NULL, NULL),
	(52, '2011-11-13 15:52:00', 52, 1, 1, NULL, 'http://cobaltcascade.localhost/test3/profile', NULL, 'cobaltcascade.localhost/test3', NULL, NULL, NULL, NULL, NULL),
	(53, '2011-11-13 15:52:00', 53, 1, 1, NULL, 'http://cobaltcascade.localhost/test3/profile', NULL, 'cobaltcascade.localhost/test3', NULL, NULL, NULL, NULL, NULL),
	(54, '2011-11-13 15:52:00', 54, 1, 1, NULL, 'http://cobaltcascade.localhost/test3/profile', NULL, 'cobaltcascade.localhost/test3', NULL, NULL, NULL, NULL, NULL),
	(55, '2011-11-13 15:52:00', 55, 1, 1, NULL, 'http://cobaltcascade.localhost/test3/profile', NULL, 'cobaltcascade.localhost/test3', NULL, NULL, NULL, NULL, NULL),
	(56, '2011-11-13 15:52:00', 57, 1, 1, 'test user post take for user 5 by user 1', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(57, '2011-11-13 15:52:00', 58, 1, 1, NULL, 'http://cobaltcascade.localhost/test4/profile', NULL, 'cobaltcascade.localhost/test4', NULL, NULL, NULL, NULL, NULL),
	(58, '2011-11-13 15:52:00', 59, 1, 1, 'test post to test broken tree comment json', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(59, '2011-11-13 15:52:00', 60, 1, 1, 'test comment to test a broken comment tree - should not display', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(61, '2011-11-13 15:52:00', 61, 1, 1, 'Meta conversation for the test stream stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(62, '2011-11-13 15:52:00', 62, 1, 1, 'Meta conversation for the test user stream stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(63, '2011-11-13 15:52:00', 63, 1, 1, 'Meta conversation for the test comments stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(64, '2011-11-13 15:52:00', 64, 1, 1, 'Meta conversation for the test suggested stream stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(65, '2011-11-13 15:52:00', 65, 1, 1, 'Meta conversation for the test stream with sub value Rhythm stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(66, '2011-11-13 15:52:00', 66, 1, 1, 'Meta conversation for the test everything stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(67, '2011-11-13 15:52:00', 67, 1, 1, 'Meta conversation for the test oscillating 1 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(68, '2011-11-13 15:52:00', 68, 1, 1, 'Meta conversation for the test oscillating 2 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(69, '2011-11-13 15:52:00', 69, 1, 1, 'Meta conversation for the test suggested stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(70, '2011-11-13 15:52:00', 70, 1, 1, 'Meta conversation for the test stream 2 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(71, '2011-11-13 15:52:00', 71, 1, 1, 'Meta conversation for the test stream 3 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(72, '2011-11-13 15:52:00', 72, 1, 1, 'Meta conversation for the test 4 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(73, '2011-11-13 15:52:00', 73, 1, 1, 'Meta conversation for the test 5 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(74, '2011-11-13 15:52:00', 74, 1, 1, 'Meta conversation for the test 6 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(75, '2011-11-13 15:52:00', 75, 1, 1, 'Meta conversation for the test user stream 2 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(76, '2011-11-13 15:52:00', 76, 1, 1, 'Meta conversation for the test user stream 3 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(77, '2011-11-13 15:52:00', 77, 1, 1, 'Meta conversation for the test user stream 4 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(78, '2011-11-13 15:52:00', 78, 1, 1, 'Meta conversation for the test user stream 5 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(79, '2011-11-13 15:52:00', 79, 1, 1, 'Meta conversation for the test user stream 6 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(80, '2011-11-13 15:52:00', 80, 1, 1, 'Meta conversation for the test link in title stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(81, '2011-11-13 15:52:00', 81, 1, 1, 'Meta conversation for the test stream 7 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(82, '2011-11-13 15:52:00', 82, 1, 1, 'Meta conversation for the test stream 8 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(83, '2011-11-13 15:52:00', 83, 1, 1, 'Meta conversation for the test stream 9 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(84, '2011-11-13 15:52:00', 84, 1, 1, 'Meta conversation for the test stream 10 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(85, '2011-11-13 15:52:00', 85, 1, 1, 'Meta conversation for the test broken comments stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(86, '2011-11-13 15:52:00', 86, 1, 1, 'Meta conversation for the test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(87, '2011-11-13 15:52:00', 61, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(88, '2011-11-13 15:52:00', 62, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20use%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test user stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(89, '2011-11-13 15:52:00', 63, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20comments/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test comments/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(90, '2011-11-13 15:52:00', 64, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20suggested%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test suggested stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(91, '2011-11-13 15:52:00', 65, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%20with%20sub%20value%20rhythm/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream with sub value rhythm/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(92, '2011-11-13 15:52:00', 66, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20everything%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test everything stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(93, '2011-11-13 15:52:00', 67, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20oscillating%201/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test oscillating 1/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(94, '2011-11-13 15:52:00', 68, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20oscillating%202/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test oscillating 2/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(95, '2011-11-13 15:52:00', 69, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20suggested%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test suggested stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(96, '2011-11-13 15:52:00', 70, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%202/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream 2/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(97, '2011-11-13 15:52:00', 71, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%203/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream 3/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(98, '2011-11-13 15:52:00', 72, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%204/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream 4/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(99, '2011-11-13 15:52:00', 73, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%205/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream 5/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(100, '2011-11-13 15:52:00', 74, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%206/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream 6/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(101, '2011-11-13 15:52:00', 75, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%202/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test user stream 2/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(102, '2011-11-13 15:52:00', 76, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%203/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test user stream 3/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(103, '2011-11-13 15:52:00', 77, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%204/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test user stream 4/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(104, '2011-11-13 15:52:00', 78, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%205/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test user stream 5/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(105, '2011-11-13 15:52:00', 79, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%206/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test user stream 6/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(106, '2011-11-13 15:52:00', 80, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20link%20in%20title/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test link in title/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(107, '2011-11-13 15:52:00', 81, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%207/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream 7/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(108, '2011-11-13 15:52:00', 82, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%208/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream 8/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(109, '2011-11-13 15:52:00', 83, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%209/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream 9/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(110, '2011-11-13 15:52:00', 84, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%2010/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream 10/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(111, '2011-11-13 15:52:00', 85, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20 broken%20comments/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test broken comments/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(112, '2011-11-13 15:52:00', 86, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream/0/0/1', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test stream/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(113, '2011-11-13 15:52:00', 61, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(114, '2011-11-13 15:52:00', 62, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20user%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test user stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(115, '2011-11-13 15:52:00', 63, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20comments/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test comments/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(116, '2011-11-13 15:52:00', 64, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20suggested%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test suggested stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(117, '2011-11-13 15:52:00', 65, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%20with%20sub%20value%20rhythm/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream with sub value rhythm/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(118, '2011-11-13 15:52:00', 66, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20everything%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test everything stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(119, '2011-11-13 15:52:00', 67, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20oscillating%201/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test oscillating 1/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(120, '2011-11-13 15:52:00', 68, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20oscillating%202/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test oscillating 2/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(121, '2011-11-13 15:52:00', 69, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20suggested%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test suggested stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(122, '2011-11-13 15:52:00', 70, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%202/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream 2/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(123, '2011-11-13 15:52:00', 71, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%203/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream 3/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(124, '2011-11-13 15:52:00', 72, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%204/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream 4/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(125, '2011-11-13 15:52:00', 73, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%205/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream 5/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(126, '2011-11-13 15:52:00', 74, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%206/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream 6/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(127, '2011-11-13 15:52:00', 75, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20user%20stream%202/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test user stream 2/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(128, '2011-11-13 15:52:00', 76, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20user%20stream%203/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test user stream 3/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(129, '2011-11-13 15:52:00', 77, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20user%20stream%204/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test user stream 4/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(130, '2011-11-13 15:52:00', 78, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20use%20stream%205/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test user stream 5/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(131, '2011-11-13 15:52:00', 79, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20user%20stream%206/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test user stream 6/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(132, '2011-11-13 15:52:00', 80, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20link%20in%20title/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test link in title/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(133, '2011-11-13 15:52:00', 81, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%207/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream 7/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(134, '2011-11-13 15:52:00', 82, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%208/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream 8/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(135, '2011-11-13 15:52:00', 83, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%209/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream 9/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(136, '2011-11-13 15:52:00', 84, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%2010/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream 10/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(137, '2011-11-13 15:52:00', 85, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20broken%20comments/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test broken comments/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(138, '2011-11-13 15:52:00', 86, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream/0/0/1', NULL, 'http://cobaltcascade.localhost/test/stream/view/test stream/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(139, '2011-11-13 15:52:00', 61, 1, 5, 'An stream for making test posts.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(140, '2011-11-13 15:52:00', 62, 1, 5, 'A stream to test takes against users', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(141, '2011-11-13 15:52:00', 63, 1, 5, 'A standard comment', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(142, '2011-11-13 15:52:00', 64, 1, 5, 'A stream to suggest when testing suggested stream Rhythms.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(143, '2011-11-13 15:52:00', 65, 1, 5, 'A stream that allows for testing of posts with sub values that require an Rhythm check.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(144, '2011-11-13 15:52:00', 66, 1, 5, 'A test stream containing all types of field and value', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(145, '2011-11-13 15:52:00', 67, 1, 5, 'An stream for making oscillating comments', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(146, '2011-11-13 15:52:00', 68, 1, 5, 'Second stream for making oscillating comments', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(147, '2011-11-13 15:52:00', 69, 1, 5, 'An stream used by the test suggestion Rhythm.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(148, '2011-11-13 15:52:00', 70, 1, 5, 'A 2nd test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(149, '2011-11-13 15:52:00', 71, 1, 5, 'A 3rd test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(150, '2011-11-13 15:52:00', 72, 1, 5, 'A 4th test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(151, '2011-11-13 15:52:00', 73, 1, 5, 'A 5th test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(152, '2011-11-13 15:52:00', 74, 1, 5, 'A 6th test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(153, '2011-11-13 15:52:00', 75, 1, 5, 'A stream to test takes against users 2', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(154, '2011-11-13 15:52:00', 76, 1, 5, 'A stream to test takes against users 3', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(155, '2011-11-13 15:52:00', 77, 1, 5, 'A stream to test takes against users 4', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(156, '2011-11-13 15:52:00', 78, 1, 5, 'A stream to test takes against users 5', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(157, '2011-11-13 15:52:00', 79, 1, 5, 'A stream to test takes against users 6', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(158, '2011-11-13 15:52:00', 80, 1, 5, 'A stream with a link for the main field and also a secondary field to test opening of the post field.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(159, '2011-11-13 15:52:00', 81, 1, 5, 'A 7th test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(160, '2011-11-13 15:52:00', 82, 1, 5, 'A 8th test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(161, '2011-11-13 15:52:00', 83, 1, 5, 'A 9th test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(162, '2011-11-13 15:52:00', 84, 1, 5, 'A 10th test stream. For testing broken stream json data', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(163, '2011-11-13 15:52:00', 85, 1, 5, 'Used for testing that broken tree data results in a client error.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(164, '2011-11-13 15:52:00', 86, 1, 5, 'A depricated stream for making test posts.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(277, '2011-11-13 15:52:00', 92, 1, 1, 'Discussion about ring test suggested ring@cobaltcascade.localhost', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(278, '2011-11-13 15:52:00', 92, 1, 3, NULL, 'http://cobaltcascade.localhost/test%20suggested%20ring/profile', NULL, 'http://cobaltcascade.localhost/test suggested ring/profile', NULL, NULL, NULL, NULL, NULL),
	(279, '2011-11-13 15:52:00', 93, 1, 1, 'Discussion about ring test ring@cobaltcascade.localhost', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(280, '2011-11-13 15:52:00', 93, 1, 3, NULL, 'http://cobaltcascade.localhost/test%20ring/profile', NULL, 'http://cobaltcascade.localhost/test ring/profile', NULL, NULL, NULL, NULL, NULL),
	(281, '2011-11-13 15:52:00', 94, 1, 1, 'Discussion about user test5@cobaltcascade.localhost', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(282, '2011-11-13 15:52:00', 94, 1, 3, NULL, 'http://cobaltcascade.localhost/test5/profile', NULL, 'http://cobaltcascade.localhost/test5/profile', NULL, NULL, NULL, NULL, NULL),
	(283, '2011-11-13 15:52:00', 95, 1, 1, 'Discussion about user test4@cobaltcascade.localhost', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(284, '2011-11-13 15:52:00', 95, 1, 3, NULL, 'http://cobaltcascade.localhost/test4/profile', NULL, 'http://cobaltcascade.localhost/test4/profile', NULL, NULL, NULL, NULL, NULL),
	(285, '2011-11-13 15:52:00', 96, 1, 1, 'Discussion about user test3@cobaltcascade.localhost', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(286, '2011-11-13 15:52:00', 96, 1, 3, NULL, 'http://cobaltcascade.localhost/test3/profile', NULL, 'http://cobaltcascade.localhost/test3/profile', NULL, NULL, NULL, NULL, NULL),
	(287, '2011-11-13 15:52:00', 97, 1, 1, 'Discussion about user test2@cobaltcascade.localhost', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(288, '2011-11-13 15:52:00', 97, 1, 3, NULL, 'http://cobaltcascade.localhost/test2/profile', NULL, 'http://cobaltcascade.localhost/test2/profile', NULL, NULL, NULL, NULL, NULL),
	(289, '2011-11-13 15:52:00', 98, 1, 1, 'Discussion about user test@cobaltcascade.localhost', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(290, '2011-11-13 15:52:00', 98, 1, 3, NULL, 'http://cobaltcascade.localhost/test/profile', NULL, 'http://cobaltcascade.localhost/test/profile', NULL, NULL, NULL, NULL, NULL),
	(293, '2011-11-13 15:52:00', 100, 1, 1, 'Discussion about Rhythm test ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(294, '2011-11-13 15:52:00', 100, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20ring/0/0/1', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test ring/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(295, '2011-11-13 15:52:00', 100, 1, 4, 'A test ring url - version 2. Used to test that versions are correctly populated in version select lists', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(296, '2011-11-13 15:52:00', 101, 1, 1, 'Discussion about Rhythm test broken filter', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(297, '2011-11-13 15:52:00', 101, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20broken%20filter/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test broken filter/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(298, '2011-11-13 15:52:00', 101, 1, 4, 'a filter Rhythm that errors with a syntax error when evaled.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(299, '2011-11-13 15:52:00', 102, 1, 1, 'Discussion about Rhythm test broken filter', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(300, '2011-11-13 15:52:00', 102, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20broken%20filter/0/0/1', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test broken filter/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(301, '2011-11-13 15:52:00', 102, 1, 4, 'a filter Rhythm that errors with a runtime error in the init function.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(302, '2011-11-13 15:52:00', 103, 1, 1, 'Discussion about Rhythm test broken filter', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(303, '2011-11-13 15:52:00', 103, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20broken%20filter/0/0/2', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test broken filter/0/0/2', NULL, NULL, NULL, NULL, NULL),
	(304, '2011-11-13 15:52:00', 103, 1, 4, 'a filter Rhythm that errors with a runtime error in the main function.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(305, '2011-11-13 15:52:00', 104, 1, 1, 'Discussion about Rhythm test broken filter', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(306, '2011-11-13 15:52:00', 104, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20broken%20filter/0/0/3', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test broken filter/0/0/3', NULL, NULL, NULL, NULL, NULL),
	(307, '2011-11-13 15:52:00', 104, 1, 4, 'a filter Rhythm that errors with a custom error that is called by the Rhythm.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(308, '2011-11-13 15:52:00', 105, 1, 1, 'Discussion about Rhythm test suggest user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(309, '2011-11-13 15:52:00', 105, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20suggest%20user/0/0/1', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test suggest user/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(310, '2011-11-13 15:52:00', 105, 1, 4, 'a user suggestion Rhythm a second depricated version', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(311, '2011-11-13 15:52:00', 106, 1, 1, 'Discussion about Rhythm test missing sort', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(312, '2011-11-13 15:52:00', 106, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20missing%20sort/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test missing sort/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(313, '2011-11-13 15:52:00', 106, 1, 4, 'a sort filter that is missing. - the json action in the control returns empty data so that it fails the data test on the client side and an error is passed to the user.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(314, '2011-11-13 15:52:00', 107, 1, 1, 'Discussion about Rhythm test kindred rhythm1', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(315, '2011-11-13 15:52:00', 107, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20kindred%20rhythm1/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test kindred rhythm1/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(316, '2011-11-13 15:52:00', 107, 1, 4, 'The first test kindred rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(317, '2011-11-13 15:52:00', 108, 1, 1, 'Discussion about Rhythm test kindred rhythm2', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(318, '2011-11-13 15:52:00', 108, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20kindred%20rhythm2/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test kindred rhythm2/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(319, '2011-11-13 15:52:00', 108, 1, 4, 'A second test kindred Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(320, '2011-11-13 15:52:00', 109, 1, 1, 'Discussion about Rhythm test ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(321, '2011-11-13 15:52:00', 109, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20ring/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test ring/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(322, '2011-11-13 15:52:00', 109, 1, 4, 'A test ring url', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(323, '2011-11-13 15:52:00', 110, 1, 1, 'Discussion about Rhythm test stream filter suggestion rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(324, '2011-11-13 15:52:00', 110, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20stream%20filter%20suggestion%20rhythm/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test stream filter suggestion rhythm/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(325, '2011-11-13 15:52:00', 110, 1, 4, 'a stream filter suggestion rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(326, '2011-11-13 15:52:00', 111, 1, 1, 'Discussion about Rhythm test filter suggestion', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(327, '2011-11-13 15:52:00', 111, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20filter%20suggestion/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test filter suggestion/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(328, '2011-11-13 15:52:00', 111, 1, 4, 'a test filter suggestion', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(329, '2011-11-13 15:52:00', 112, 1, 1, 'Discussion about Rhythm test a second filter suggestion', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(330, '2011-11-13 15:52:00', 112, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20a%20second%20filter%20suggestion/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test a second filter suggestion/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(331, '2011-11-13 15:52:00', 112, 1, 4, 'a second test filter suggestion', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(332, '2011-11-13 15:52:00', 113, 1, 1, 'Discussion about Rhythm test stream suggestion rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(333, '2011-11-13 15:52:00', 113, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20stream%20suggestion%20rhythm/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test stream suggestion rhythm/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(334, '2011-11-13 15:52:00', 113, 1, 4, 'a stream suggestion rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(335, '2011-11-13 15:52:00', 114, 1, 1, 'Discussion about Rhythm test moderation suggestion', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(336, '2011-11-13 15:52:00', 114, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20moderation%20suggestion/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test moderation suggestion/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(337, '2011-11-13 15:52:00', 114, 1, 4, 'a test moderation suggestion', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(338, '2011-11-13 15:52:00', 115, 1, 1, 'Discussion about Rhythm test suggest user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(339, '2011-11-13 15:52:00', 115, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20suggest%20user/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test suggest user/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(340, '2011-11-13 15:52:00', 115, 1, 4, 'a user suggestion Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(341, '2011-11-13 15:52:00', 116, 1, 1, 'Discussion about Rhythm test datesort', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(342, '2011-11-13 15:52:00', 116, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20datesort/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test datesort/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(343, '2011-11-13 15:52:00', 116, 1, 4, 'Sort items by date', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(344, '2011-11-13 15:52:00', 117, 1, 1, 'Discussion about Rhythm test reverse datesort', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(345, '2011-11-13 15:52:00', 117, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20reverse%20datesort/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test reverse datesort/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(346, '2011-11-13 15:52:00', 117, 1, 4, 'Sort items in reverse order', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(347, '2011-11-13 15:52:00', 118, 1, 1, 'Discussion about Rhythm test stream suggestion', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(348, '2011-11-13 15:52:00', 118, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20stream%20suggestion/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test stream suggestion/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(349, '2011-11-13 15:52:00', 118, 1, 4, 'A test stream suggestion Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(350, '2011-11-13 15:52:00', 119, 1, 1, 'Discussion about Rhythm test stream suggestion with data source', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(351, '2011-11-13 15:52:00', 119, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20stream%20suggestion%20with%20data%20source/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test stream suggestion with data source/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(352, '2011-11-13 15:52:00', 119, 1, 4, 'A test suggestion Rhythm that fetches data from a a remote url to test this functionality.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(353, '2011-11-13 15:52:00', 120, 1, 1, 'A test top parent for checking deleted orphans.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(354, '2011-11-13 15:52:00', 120, 1, 3, 'Extra content for a test top parent for checking deleted orphans.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(355, '2011-11-13 15:52:00', 121, 1, 1, 'A test first child for checking deleted orphans.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(356, '2011-11-13 15:52:00', 122, 1, 1, 'A test second child for checking deleted orphans.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(357, '2011-11-13 15:52:00', 123, 1, 1, 'A test third child for checking deleted orphans.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(358, '2011-11-13 15:52:00', 121, 1, 3, 'Extra content for a test first child for checking deleted orphans.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(359, '2011-11-13 15:52:00', 122, 1, 3, 'Extra content for a test second child for checking deleted orphans.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(360, '2011-11-13 15:52:00', 123, 1, 3, 'Extra content for a test thrid child for checking deleted orphans.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(361, '2011-11-13 15:52:00', 124, 1, 1, 'Meta conversation for the test stream where anyone can edit an post stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(362, '2011-11-11 12:00:00', 125, 1, 1, 'this can be edited by anyone', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(363, '2011-11-13 15:52:00', 126, 1, 1, 'Meta conversation for the test stream for testing who_can_take settings', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(364, '2011-11-11 12:00:00', 127, 1, 1, 'the second value can only be taken by the main test account', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(365, '2011-11-13 15:52:00', 127, 1, 4, 'Ensure this textfield appears in the correct place.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(366, '2011-11-11 12:00:00', 128, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20filter%20that%20stores%20data/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20filter%20that%20stores%20data/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(367, '2011-11-11 12:00:00', 128, 1, 4, 'a filter Rhythm for checking that storing data works', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(368, '2011-11-11 12:00:00', 129, 1, 1, 'Discussion about Stream to test storing data', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(369, '2011-11-11 12:00:00', 129, 1, 5, 'Meta conversation for checking that storing data works', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(370, '2011-11-11 12:00:00', 129, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%2010/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20stream%2010/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(371, '2011-11-11 12:00:00', 129, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%2010/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20stream%2010/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(372, '2011-11-11 12:00:00', 130, 1, 1, 'store filter test 1 - Always in the middle', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(373, '2011-11-11 11:00:00', 131, 1, 1, 'store filter test 2 - At top for first pass. At bottom for second', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(374, '2011-11-11 13:00:00', 132, 1, 1, 'store filter test 3 - At bottom for first pass. At top for second', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(375, '2011-11-13 15:52:00', 133, 1, 1, 'Discussion about Rhythm test posts by date', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(376, '2011-11-13 15:52:00', 133, 1, 3, NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20post%20by%20date/0/0/0', NULL, 'http://cobaltcascade.localhost/test/rhythm/view/test%20post%20by%20date/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(377, '2011-11-13 15:52:00', 133, 1, 4, 'test filter that only fetches a block of posts by its date and filters it down to the middle two.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(378, '2011-11-11 12:00:00', 128, 1, 1, 'Discussion about Rhythm to test storing data', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10000, '2013-06-10 09:46:32', 10000, 1, 5, 'A stream to report bugs in Cobalt Cascade.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10001, '2013-06-10 09:46:32', 10000, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/bugs/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/bugs/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10002, '2013-06-10 09:46:32', 10000, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/bugs/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/bugs/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10003, '2011-11-13 15:52:00', 10001, 1, 5, 'Down the rabbit hole we go.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10004, '2011-11-13 15:52:00', 10001, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/meta%20stream%20for%20streams/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/meta stream for streams/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10005, '2011-11-13 15:52:00', 10001, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/meta%20stream%20for%20streams/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/meta stream for streams/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10006, '2011-11-13 15:52:00', 10001, 1, 1, 'Meta conversation for the meta stream for streams stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10007, '2011-11-13 15:52:00', 10002, 1, 1, 'Meta conversation for the comment stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10008, '2011-11-13 15:52:00', 10002, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/comments/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/comments/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10009, '2011-11-13 15:52:00', 10002, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/comments/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/comments/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10010, '2011-11-13 15:52:00', 10002, 1, 5, 'A place to talk about talking.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10011, '2011-11-13 15:52:00', 10003, 1, 1, 'Meta conversation for the meta stream for rings stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10012, '2011-11-13 15:52:00', 10003, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/meta%20stream%20for%20rings/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/meta stream for rings/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10013, '2011-11-13 15:52:00', 10003, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/meta%20stream%20for%20rings/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/meta stream for rings/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10014, '2011-11-13 15:52:00', 10003, 1, 5, 'Down the rabbit hole we go.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10015, '2011-11-13 15:52:00', 10004, 1, 1, 'Meta conversation for the meta stream for sending private posts', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10016, '2011-11-13 15:52:00', 10005, 1, 1, 'Meta conversation for the meta stream for entering famous quotes', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10017, '2011-11-13 15:52:00', 10004, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/private/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/private/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10018, '2011-11-13 15:52:00', 10004, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/private/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/private/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10019, '2011-11-13 15:52:00', 10005, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/quotes/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/quotes/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10020, '2011-11-13 15:52:00', 10005, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/quotes/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/quotes/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10021, '2011-11-13 15:52:00', 10004, 1, 5, 'A place to talk about using a stream for private posts.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10022, '2011-11-13 15:52:00', 10005, 1, 5, 'A place to talk about using a stream for quotes.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10023, '2011-11-13 15:52:00', 10006, 1, 1, 'Discussion about Rhythm oldest', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10024, '2011-11-13 15:52:00', 10006, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/oldest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/oldest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10025, '2011-11-13 15:52:00', 10006, 1, 4, 'Sort items by date, with the oldest first.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10026, '2011-11-13 15:52:00', 10007, 1, 4, 'Sort items by date with the newest first.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10027, '2011-11-13 15:52:00', 10007, 1, 1, 'Discussion about Rhythm newest', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10028, '2011-11-13 15:52:00', 10007, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/newest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/newest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10039, '2013-06-14 09:09:05', 10011, 1, 1, 'Meta conversation for the news stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10040, '2013-06-14 09:09:05', 10011, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/news/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/news/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10041, '2013-06-14 09:09:05', 10011, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/news/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/news/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10042, '2013-06-14 09:09:05', 10011, 1, 5, 'News about Babbling Brook and Cobalt Cascade', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10046, '2013-06-14 09:32:55', 10013, 1, 1, 'Discussion about the oldest Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10047, '2013-06-14 09:32:55', 10013, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/oldest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/oldest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10048, '2013-06-14 09:32:55', 10013, 1, 4, 'Sort items by date with the oldest first.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10054, '2013-06-14 10:27:50', 10015, 1, 1, 'Meta conversation for the asdf stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10055, '2013-06-14 10:27:50', 10015, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/asdf/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/asdf/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10056, '2013-06-14 10:27:50', 10015, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/asdf/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/asdf/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10057, '2013-06-14 10:27:50', 10015, 1, 5, 'fsd', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10058, '2013-06-14 10:31:43', 10016, 1, 1, 'Meta conversation for the sdfg stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10059, '2013-06-14 10:31:43', 10016, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/sdfg/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/sdfg/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10060, '2013-06-14 10:31:43', 10016, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/sdfg/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/sdfg/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10061, '2013-06-14 10:31:43', 10016, 1, 5, 'sdgf', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10063, '2013-06-14 10:44:31', 10018, 1, 1, 'Meta conversation for the fg stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10064, '2013-06-14 10:44:31', 10018, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/fg/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/fg/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10065, '2013-06-14 10:44:31', 10018, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/fg/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/fg/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10066, '2013-06-14 10:44:31', 10018, 1, 5, 'fg', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10067, '2013-06-14 10:49:19', 10019, 1, 1, 'Meta conversation for the zsdf stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10068, '2013-06-14 10:49:19', 10019, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/zsdf/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/zsdf/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10069, '2013-06-14 10:49:19', 10019, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/zsdf/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/zsdf/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10070, '2013-06-14 10:49:19', 10019, 1, 5, 'ga', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10071, '2013-06-14 11:03:32', 10020, 1, 1, 'Meta conversation for the tasks stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10072, '2013-06-14 11:03:32', 10020, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10073, '2013-06-14 11:03:32', 10020, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10074, '2013-06-14 11:03:32', 10020, 1, 5, 'Work that needs to be done to develop the Babbling Brook protocol and the Cobalt Cascade website.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10075, '2013-06-17 07:23:20', 10021, 1, 1, 'Kindred page', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10076, '2013-06-17 07:23:20', 10021, 1, 3, 'Create a kindred page that is linked from the top nav, that allows the user to see and edit what their kindred rhythm is and also see a list of their kindred relationships. Page the kindred relationships, sort by closest first.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10077, '2013-06-17 07:23:20', 10021, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Store domain', NULL, NULL),
	(10079, '2013-06-17 07:36:14', 10022, 1, 1, 'Develop the tasks stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10080, '2013-06-17 07:36:14', 10022, 1, 3, 'Create specific sort rhythms\n\nSort by user Sky\nSort by best\nSort by new', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10081, '2013-06-17 07:36:14', 10022, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10083, '2013-06-17 07:36:14', 10022, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'create default streams', NULL, NULL),
	(10084, '2013-06-17 07:36:14', 10022, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10085, '2013-06-17 07:36:14', 10021, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'create default streams', NULL, NULL),
	(10086, '2013-06-17 07:36:14', 10021, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10087, '2013-06-17 07:50:17', 10021, 2, 1, 'Kindred page', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10088, '2013-06-17 07:50:17', 10021, 2, 3, 'Create a kindred page that is linked from the top nav, that allows the user to see and edit what their kindred rhythm is and also see a list of their kindred relationships. Page the kindred relationships, sort by closest first.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10089, '2013-06-17 07:50:17', 10021, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Store domain', NULL, NULL),
	(10091, '2013-06-17 07:50:17', 10021, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'kindred page', NULL, NULL),
	(10092, '2013-06-17 07:50:17', 10021, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10093, '2013-06-17 07:54:04', 10023, 1, 1, 'When making an post, a text field does not open to the correct length if it includes new lines', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10094, '2013-06-17 07:54:04', 10023, 1, 3, 'For an example create a task on the task stream with a description with new lines in it, submit, then edit it.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10095, '2013-06-17 07:54:04', 10023, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10096, '2013-06-17 07:54:04', 10023, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10097, '2013-06-17 07:54:04', 10023, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10098, '2013-06-17 07:55:34', 10024, 1, 1, 'Modify bug stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10099, '2013-06-17 07:55:34', 10024, 1, 3, 'Include an auto populated field for the url at the time the bug form icon was clicked.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10100, '2013-06-17 07:55:34', 10024, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10102, '2013-06-17 07:55:34', 10024, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'bug stream', NULL, NULL),
	(10103, '2013-06-17 07:55:34', 10024, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10104, '2013-06-17 07:57:37', 10025, 1, 1, 'New lines not rendered when display an post text field in the post view', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10105, '2013-06-17 07:57:37', 10025, 1, 3, 'na', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10106, '2013-06-17 07:57:37', 10025, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10107, '2013-06-17 07:57:37', 10025, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10108, '2013-06-17 07:57:37', 10025, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10109, '2013-06-18 07:04:28', 10026, 1, 1, 'Posts from a private stream do not display properly.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10110, '2013-06-18 07:04:28', 10026, 1, 3, 'Often only the first post is displayed, and sometimes not even that. Also the \'No Messages\' notice is not removed.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10111, '2013-06-18 07:04:28', 10026, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Unknown', NULL, NULL),
	(10112, '2013-06-18 07:04:28', 10026, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10113, '2013-06-18 07:04:28', 10026, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10114, '2013-06-18 07:34:53', 10027, 1, 1, 'Caused by dummy posts all using the same DOM object and by the toggleEmptyMessage not detecting dummy post', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10115, '2013-06-18 07:41:12', 10028, 1, 1, 'Make custom sort rhythms for bug stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10116, '2013-06-18 07:41:12', 10028, 1, 3, 'newest and oldest with an empty status. Sort by user sky, plus with an empty status.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10117, '2013-06-18 07:41:12', 10028, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10119, '2013-06-18 07:41:12', 10028, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'bug stream', NULL, NULL),
	(10120, '2013-06-18 07:41:12', 10028, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10121, '2013-06-18 07:43:26', 10022, 2, 1, 'Develop the tasks stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10122, '2013-06-18 07:43:26', 10022, 2, 3, 'Create specific sort rhythms\n\nSort by user Sky\nSort by best\nSort by new\nSort by a specific tag (create a generic version that can be modified for use by different tags. Allows for grouping of tasks by meta task.)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10123, '2013-06-18 07:43:26', 10022, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10125, '2013-06-18 07:43:26', 10022, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'create default streams', NULL, NULL),
	(10126, '2013-06-18 07:43:26', 10022, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10127, '2013-06-18 07:44:20', 10029, 1, 1, 'Meta conversation for the feature requests stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10128, '2013-06-18 07:44:20', 10029, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/feature%20requests/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/feature requests/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10129, '2013-06-18 07:44:20', 10029, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/feature%20requests/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/feature requests/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10130, '2013-06-18 07:44:20', 10029, 1, 5, 'Suggest new features for the Babbling Brook protocol and the Cobalt Cascade website.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10134, '2013-06-18 07:56:56', 10031, 1, 1, 'Make stream fields editable by a specific user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10135, '2013-06-18 07:56:56', 10031, 1, 3, 'At present a stream can be set to editable by anyone, or only the post maker. However it would be useful to make it possible to restrict certain fields, to be editable only by a specified user.\n\nFor example, Feature suggestions could have a field that shows a link to the task, that is populated by the system user when the status of the task is changed to accepted.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10136, '2013-06-18 08:51:58', 10032, 1, 1, 'Write Rhythms for the snippets stream ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10137, '2013-06-18 08:51:58', 10032, 1, 3, 'Best 24, Best 7 * 24, Best all time, new.\nA blend of all of the above is used to push to the front page.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10138, '2013-06-18 08:51:58', 10032, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10140, '2013-06-18 08:51:58', 10032, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'snippets', NULL, NULL),
	(10141, '2013-06-18 08:51:58', 10032, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10142, '2013-06-18 08:55:33', 10033, 1, 1, 'Make snippets appear in the message plane', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10143, '2013-06-18 08:55:33', 10033, 1, 3, 'Use the algorithms described to select a bunch of snippets to appear in the message plane.\n\nWhen the message plane is empty, display one of these messages. Always keep the next bunch of snippets stored in local storage (start with 20). Keep a record of the last 500 snippet ids used and don\'t repeat them.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10144, '2013-06-18 08:55:33', 10033, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10146, '2013-06-18 08:55:33', 10033, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'snippets', NULL, NULL),
	(10147, '2013-06-18 08:55:33', 10033, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10148, '2013-06-18 08:56:26', 10033, 2, 1, 'Make snippets appear in the message plane', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10149, '2013-06-18 08:56:26', 10033, 2, 3, 'Use the algorithms described (/post/cobaltcascade.localhost/10032) to select a bunch of snippets to appear in the message plane.\n\nWhen the message plane is empty, display one of these messages. Always keep the next bunch of snippets stored in local storage (start with 20). Keep a record of the last 500 snippet ids used and don\'t repeat them.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10150, '2013-06-18 08:56:26', 10033, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10152, '2013-06-18 08:56:26', 10033, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'snippets', NULL, NULL),
	(10153, '2013-06-18 08:56:26', 10033, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10154, '2013-06-18 09:00:17', 10034, 1, 1, 'Added a regex to DisplayPost.js that is only applied if the text is not the title field.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10155, '2013-06-18 09:03:51', 10035, 1, 1, 'Make the Rhythm that chooses snippets for the message plane customizable.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10156, '2013-06-18 09:03:51', 10035, 1, 3, 'The message plane snippet filter is currently hard coded, but it could be customizable by using the top filter if the user is subscribes.\n\nAlternatively it could be fully set in the user config page.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10157, '2013-06-18 09:05:50', 10036, 1, 1, 'Add a client server side option to prevent subscription from some streams.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10158, '2013-06-18 09:05:50', 10036, 1, 3, 'This should be reflected on the page by removing the \'remove\' link.\n\nApply this to the news stream.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10159, '2013-06-18 09:05:50', 10036, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP', NULL, NULL),
	(10161, '2013-06-18 09:05:50', 10036, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'stream,subscriptions', NULL, NULL),
	(10162, '2013-06-18 09:05:50', 10036, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10163, '2013-06-18 09:07:53', 10037, 1, 1, 'Force the message plane to always show three lines and show a more link', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10164, '2013-06-18 09:07:53', 10037, 1, 3, 'The message plane needs to never change size without a user action, otherwise it will push content around when the user is reading it.\n\nThis can be achieved by showing a more/less link to allow it to open up.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10165, '2013-06-18 09:07:53', 10037, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10167, '2013-06-18 09:07:53', 10037, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'message plane', NULL, NULL),
	(10168, '2013-06-18 09:07:53', 10037, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10169, '2013-06-18 09:09:04', 10038, 1, 1, 'Click and hold the up button brings up a textbox on arrows', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10170, '2013-06-18 09:09:04', 10038, 1, 3, 'Provides a shortcut method for a user to enter a larger amount.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10171, '2013-06-18 09:09:04', 10038, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10173, '2013-06-18 09:09:04', 10038, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'arrows', NULL, NULL),
	(10174, '2013-06-18 09:09:04', 10038, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10175, '2013-06-18 09:10:40', 10038, 2, 1, 'Click and hold the up button brings up a textbox on arrows', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10176, '2013-06-18 09:10:40', 10038, 2, 3, 'Provides a shortcut method for a user to enter a larger amount.\n\nsee http://stackoverflow.com/questions/4080497/how-can-i-listen-for-a-click-and-hold-in-jquery', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10177, '2013-06-18 09:10:40', 10038, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10179, '2013-06-18 09:10:40', 10038, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'arrows', NULL, NULL),
	(10180, '2013-06-18 09:10:40', 10038, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10181, '2013-06-18 09:14:08', 10039, 1, 1, 'When title is too long it is pushing the main post below the sidebar on tree pages', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10182, '2013-06-18 09:14:08', 10039, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10183, '2013-06-18 09:14:08', 10039, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10184, '2013-06-18 09:14:08', 10039, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10185, '2013-06-18 09:14:08', 10039, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10186, '2013-06-18 09:15:08', 10038, 3, 1, 'Click and hold the up button brings up a textbox on arrows', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10187, '2013-06-18 09:15:08', 10038, 3, 3, 'Provides a shortcut method for a user to enter a larger amount.\n\nsee http://stackoverflow.com/questions/4080497/how-can-i-listen-for-a-click-and-hold-in-jquery\n\nAlways display the max and min values - highlight them in red if there is an error.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10188, '2013-06-18 09:15:08', 10038, 3, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10190, '2013-06-18 09:15:08', 10038, 3, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'arrows', NULL, NULL),
	(10191, '2013-06-18 09:15:08', 10038, 3, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10192, '2013-06-18 09:17:23', 10040, 1, 1, 'Make multiedit posts lockable', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10193, '2013-06-18 09:17:23', 10040, 1, 3, 'If an post can be edited by users other than the creator, then include an option to make the post lockable - with options for both the post owner and the stream owner.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10194, '2013-06-18 09:17:23', 10040, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Documentation,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10196, '2013-06-18 09:17:23', 10040, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'stream creation', NULL, NULL),
	(10197, '2013-06-18 09:17:23', 10040, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10198, '2013-06-18 09:18:49', 10041, 1, 1, 'Adapt the signup to direct towards the kickstarter', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10199, '2013-06-18 09:18:49', 10041, 1, 3, 'Both modal and static signup pages should show this alternative.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10200, '2013-06-18 09:18:49', 10041, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10202, '2013-06-18 09:18:49', 10041, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'kickstarter, signup', NULL, NULL),
	(10203, '2013-06-18 09:18:49', 10041, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10204, '2013-06-18 09:20:43', 10042, 1, 1, 'Create a token system for signups for use in the kickstarter', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10205, '2013-06-18 09:20:43', 10042, 1, 3, 'Create data table of tokens that can be used once to create an account. \n\nConnect the token to the account once it is created. \n\nInclude a field to enter details of who the token was sent to.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10206, '2013-06-18 09:20:43', 10042, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP', NULL, NULL),
	(10208, '2013-06-18 09:20:43', 10042, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'kickstarter, signup', NULL, NULL),
	(10209, '2013-06-18 09:20:43', 10042, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10210, '2013-06-18 09:27:20', 10043, 1, 1, 'Hide features created by test accounts in the feature search selector.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10211, '2013-06-18 09:27:20', 10043, 1, 3, 'Do this client side if it is easy on the paging, otherwise have to pass a flag through to the info domain.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10212, '2013-06-18 09:27:20', 10043, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Info domain,Javascript,PHP', NULL, NULL),
	(10214, '2013-06-18 09:27:20', 10043, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'search selecotr', NULL, NULL),
	(10215, '2013-06-18 09:27:20', 10043, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10216, '2013-06-18 09:27:58', 10044, 1, 1, 'Include the filter description in the stream description on the sidebar', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10217, '2013-06-18 09:27:58', 10044, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10218, '2013-06-18 09:27:58', 10044, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10220, '2013-06-18 09:27:58', 10044, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'streams', NULL, NULL),
	(10221, '2013-06-18 09:27:58', 10044, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10222, '2013-06-18 09:31:20', 10045, 1, 1, 'Data not being deleted from DB when a rhythm is deleted', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10223, '2013-06-18 09:31:20', 10045, 1, 3, 'rhytym, rhythem_extra, the meta post and meta post_content rows are not being deleted.\n\nThe Rhythm no longer appears because the version row is deleted.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10224, '2013-06-18 09:31:20', 10045, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10225, '2013-06-18 09:31:20', 10045, 1, 5, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10226, '2013-06-18 09:31:20', 10045, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10227, '2013-06-18 09:32:57', 10046, 1, 1, 'Data not being deleted from DB when a stream is deleted', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10228, '2013-06-18 09:32:57', 10046, 1, 3, 'stream and stream_child are not being deleted. \n\nNeed to check the meta post and meta post_content', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10229, '2013-06-18 09:32:57', 10046, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10230, '2013-06-18 09:32:57', 10046, 1, 5, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10231, '2013-06-18 09:32:57', 10046, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10232, '2013-06-18 09:35:34', 10047, 1, 1, 'Ability to change the size of the main textarea of an post', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10233, '2013-06-18 09:35:34', 10047, 1, 3, 'The use of the main text area is too varied to fix it, needs opening up.\n\nStreams should cut off the title if it is too long (perhaps use a fade on the end of the line.)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10234, '2013-06-18 09:35:34', 10047, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript,PHP,Protocol', NULL, NULL),
	(10236, '2013-06-18 09:35:34', 10047, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'stream edit', NULL, NULL),
	(10237, '2013-06-18 09:35:34', 10047, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10238, '2013-06-18 09:37:11', 10048, 1, 1, 'Make an post open lists need suggestions', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10239, '2013-06-18 09:37:11', 10048, 1, 3, 'The open list for an open post field should suggest options after a couple of characters are typed. The suggestions should be based on the options entered by all users of that stream.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10240, '2013-06-18 09:37:11', 10048, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Servers,Store domain', NULL, NULL),
	(10242, '2013-06-18 09:37:11', 10048, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'stream creation', NULL, NULL),
	(10243, '2013-06-18 09:37:11', 10048, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10244, '2013-06-18 09:38:17', 10049, 1, 1, 'Assign default subscriptions and filters when a user signs up', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10245, '2013-06-18 09:38:17', 10049, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10246, '2013-06-18 09:38:17', 10049, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript,PHP', NULL, NULL),
	(10248, '2013-06-18 09:38:17', 10049, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'signup', NULL, NULL),
	(10249, '2013-06-18 09:38:17', 10049, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10250, '2013-06-18 09:40:56', 10050, 1, 1, 'Updating the description on streams and rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10251, '2013-06-18 09:40:56', 10050, 1, 3, 'Make it possible to change the description of a stream or rhythm without updating the version.\n\nOr alternatively force version changes along the lines of.\npatch - description changed.\nminor - new fields or list items added, but nothing existing broken.\nmajor - all other changes.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10252, '2013-06-18 09:43:38', 10022, 3, 1, 'Develop the tasks stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10253, '2013-06-18 09:43:38', 10022, 3, 3, 'Create specific sort rhythms\n\nSort by user Sky\nSort by best\nSort by new\nSort by a specific tag (create a generic version that can be modified for use by different tags. Allows for grouping of tasks by meta task.)\nSort by \'in progess\'.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10254, '2013-06-18 09:43:38', 10022, 3, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10256, '2013-06-18 09:43:38', 10022, 3, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'create default streams', NULL, NULL),
	(10257, '2013-06-18 09:43:38', 10022, 3, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10258, '2013-06-18 10:00:35', 10051, 1, 1, 'Discussion about the skys priority Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10259, '2013-06-18 10:00:35', 10051, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys%20priority/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys priority/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10260, '2013-06-18 10:00:35', 10051, 1, 4, 'Order the results by the take value that user sky has given the main value.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10261, '2013-06-18 10:19:32', 10052, 1, 1, 'Add init and process wait functions to all Rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10262, '2013-06-18 10:19:32', 10052, 1, 3, 'The filter Rhythms have a feature that pauses the main proccess until the filter reports back that it has finished. This is better than the current situation as it allows the Rhythms to have internal callbacks and to fetch remote data.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10263, '2013-06-18 10:19:32', 10052, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript,Store domain', NULL, NULL),
	(10265, '2013-06-18 10:19:32', 10052, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10266, '2013-06-18 10:19:32', 10052, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10272, '2013-06-18 14:10:14', 10054, 1, 1, 'Codemirror is set to use tabs as only 2 spaces', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10273, '2013-06-18 14:10:14', 10054, 1, 3, 'Set it to use 4 and also to convert all tabs to spaces.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10274, '2013-06-18 14:10:14', 10054, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10275, '2013-06-18 14:10:14', 10054, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10276, '2013-06-18 14:10:14', 10054, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10277, '2013-06-18 14:11:18', 10055, 1, 1, 'The sort order is reversed', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10278, '2013-06-18 14:11:18', 10055, 1, 3, 'Higher sort order should be appearing higher up the page, but at present they are reversed.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10279, '2013-06-18 14:11:18', 10055, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10280, '2013-06-18 14:11:18', 10055, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10281, '2013-06-18 14:11:18', 10055, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10282, '2013-06-18 14:12:07', 10056, 1, 1, 'Multiple filters are causing problems on streams', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10283, '2013-06-18 14:12:07', 10056, 1, 3, 'Try attaching newest, oldest and sky priority to the tasks stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10284, '2013-06-18 14:12:07', 10056, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10285, '2013-06-18 14:12:07', 10056, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10286, '2013-06-18 14:12:07', 10056, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10287, '2013-06-18 14:18:20', 10057, 1, 1, 'Filter.finalPost had a and b the wrong way around for the final sort.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10288, '2013-06-18 14:42:19', 10058, 1, 1, 'BabblingBrook.Client.UserSetup is getting called twice', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10289, '2013-06-18 14:42:19', 10058, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10290, '2013-06-18 14:42:19', 10058, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10291, '2013-06-18 14:42:19', 10058, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10292, '2013-06-18 14:42:19', 10058, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10293, '2013-06-18 14:55:00', 10059, 1, 1, 'Make filters reload the iframe when loading a new filter', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10294, '2013-06-18 14:55:00', 10059, 1, 3, 'Provides a clean slate and solves some security concerns.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10295, '2013-06-18 14:55:00', 10059, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript,Store domain', NULL, NULL),
	(10297, '2013-06-18 14:55:00', 10059, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10298, '2013-06-18 14:55:00', 10059, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10299, '2013-06-18 14:58:46', 10059, 2, 1, 'Make filters reload the iframe when loading a new filter', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10300, '2013-06-18 14:58:46', 10059, 2, 3, 'Provides a clean slate and solves some security concerns.\n\nWhen done the resetting of public data in actionInitSort can be removed.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10301, '2013-06-18 14:58:46', 10059, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript,Store domain', NULL, NULL),
	(10303, '2013-06-18 14:58:46', 10059, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10304, '2013-06-18 14:58:46', 10059, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10305, '2013-06-18 16:55:55', 10036, 2, 1, 'Add a client server side option to prevent unsubscription from some streams.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10306, '2013-06-18 16:55:55', 10036, 2, 3, 'This should be reflected on the page by removing the \'remove\' link.\n\nApply this to the news stream.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10307, '2013-06-18 16:55:55', 10036, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP', NULL, NULL),
	(10309, '2013-06-18 16:55:55', 10036, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'stream,subscriptions', NULL, NULL),
	(10310, '2013-06-18 16:55:55', 10036, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10311, '2013-06-19 04:56:06', 10060, 1, 1, 'Stream search', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10312, '2013-06-19 04:56:06', 10060, 1, 3, 'A link on the side bar (next to meta) opens up a search plane at the top of the stream. Clicking it also changes the link to \'close search\'.\n\nThe search plane contains a text box and a search button, plus two small links for advanced, site and global search. See separate tasks for details of those links.\n\nEntering a search phrase and pressing search results in a sort request being submitted with the new search data. This search data is passed through to the info domain (for both public and private posts.) The posts returned match this search phrase and are given a search score confidence (0 to 1), with elevated scores for title match and repeated matches.\n\nSuggested scoring:\ntitle match : 0.5 for first,0.25 for second, 0.125 etc..\nother fields: 0.25, 1.25 etc\n\nNeed to research close matching. misspellings. (@todo create a separate feature request)\n\nThe results are then passed back to the current filter with the scores (Which the filter will only use if it is designed to.)\n\nIf a differentfilter is selected whilst the search is open then a new sort request is submitted.\n\nclicking the close link will close the search. ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10313, '2013-06-19 04:56:06', 10060, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10315, '2013-06-19 04:56:06', 10060, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'search', NULL, NULL),
	(10316, '2013-06-19 04:56:06', 10060, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10317, '2013-06-19 05:18:22', 10061, 1, 1, 'Global search', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10318, '2013-06-19 05:18:22', 10061, 1, 3, 'When a user clicks global search in the search plane (see task ) then the page redirects to /site/search.\n\nGlobal search is complex because it necessitates searching multiple domains.\n\nOne way to facilitate this is to create a search service, which regularly collects all post data from all domains it is aware of. Domains would naturally propagate through the collection of data as new domains would appear as users in the post data.  \n\nAn update schedule could be set based on the frequency of new data being found at a domain. Each domain could provide a time based update, based on the frequency. EG 10 minutes, 30 minutes, 1 hour, 3 hours, 6 hours, 12 hours.  The frequency could be included as meta data for the update request.  This same data could then be used by filters for displaying global new information.\n\nA config setting allows the user to select the search service of their choice (This would be a ring name at the domain that is running the search service.)\n\nWhen a global search is performed, it works the same as a generic delta sort request (see task), only the domain to search is the global search domain.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10319, '2013-06-19 05:23:08', 10062, 1, 1, 'Search suggestions', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10320, '2013-06-19 05:23:08', 10062, 1, 3, 'Create an index of search suggestions for misspellings etc and enable these to be passed back with a sort request, when a search is made.\n\nResearch needed to flesh out this idea.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10321, '2013-06-19 05:23:47', 10060, 2, 1, 'Stream search', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10322, '2013-06-19 05:23:47', 10060, 2, 3, 'A link on the side bar (next to meta) opens up a search plane at the top of the stream. Clicking it also changes the link to \'close search\'.\n\nThe search plane contains a text box and a search button, plus a small links for global search (See post 10061 for details).\n\nEntering a search phrase and pressing search results in a sort request being submitted with the new search data. This search data is passed through to the info domain (for both public and private posts.) The posts returned match this search phrase and are given a search score confidence (0 to 1), with elevated scores for title match and repeated matches.\n\nSuggested scoring:\ntitle match : 0.5 for first,0.25 for second, 0.125 etc..\nother fields: 0.25, 1.25 etc\n\nNeed to research close matching. misspellings. (see post 10062 for details)\n\nThe results are then passed back to the current filter with the scores (Which the filter will only use if it is designed to.)\n\nIf a different filter is selected whilst the search is open then a new sort request is submitted.\n\nclicking the close link will close the search. ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10323, '2013-06-19 05:23:47', 10060, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10325, '2013-06-19 05:23:47', 10060, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'search', NULL, NULL),
	(10326, '2013-06-19 05:23:47', 10060, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10327, '2013-06-19 05:41:07', 10063, 1, 1, 'Create the delta feature', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10328, '2013-06-19 05:41:07', 10063, 1, 3, 'Deltas allow a user to see the results from multiple streams as the same time.\n\nThis accomplished by adapting the sort request feature to allow multiple streams to be submitted as part of a request. Each stream in the request is processed separately (And results cached so that individual requests for the streams are quicker to respond). As each stream is processed the results are pushed to the client for early display.\n\nDeltas are defined by the client domain and don\'t exist in the data store DB. The edit streams page needs a new feature where the user can create a delta and select the streams that they want in a delta, and change the version number, filters and moderation rings as per normal streams.\n\nThere also needs to be a default delta (when it is first created on the edit streams page) that pulls in the results from all other registered streams.\n\nFinally there needs to be a new type of suggestion Rhythm for deltas.\n\nThis task is dependent on the url refactoring task, the task to enable multiple versions of a stream to be viewed at the same time. (@todo link to posts.)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10329, '2013-06-19 05:41:07', 10063, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10331, '2013-06-19 05:41:07', 10063, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'deltas', NULL, NULL),
	(10332, '2013-06-19 05:41:07', 10063, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10333, '2013-06-19 05:42:44', 10063, 2, 1, 'Create the delta feature', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10334, '2013-06-19 05:42:44', 10063, 2, 3, 'Deltas allow a user to see the results from multiple streams as the same time.\n\nThis accomplished by adapting the sort request feature to allow multiple streams to be submitted as part of a request. Each stream in the request is processed separately (And results cached so that individual requests for the streams are quicker to respond). As each stream is processed the results are pushed to the client for early display.\n\nDeltas are defined by the client domain and don\'t exist in the data store DB. The edit streams page needs a new feature where the user can create a delta and select the streams that they want in a delta, and change the version number, filters and moderation rings as per normal streams.\n\nThere also needs to be a default delta (when it is first created on the edit streams page) that pulls in the results from all other registered streams.\n\nThe default config for new signups needs to include the option for pre-configured deltas\n\nFinally there needs to be a new type of suggestion Rhythm for deltas.\n\nThis task is dependent on the url refactoring task, the task to enable multiple versions of a stream to be viewed at the same time. (@todo link to posts.)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10335, '2013-06-19 05:42:44', 10063, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10337, '2013-06-19 05:42:44', 10063, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'deltas', NULL, NULL),
	(10338, '2013-06-19 05:42:44', 10063, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10339, '2013-06-19 06:14:14', 10064, 1, 1, 'Refactor urls', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10340, '2013-06-19 06:14:14', 10064, 1, 3, 'URL paths need refactoring\n\nSeveral additional features are needed in urls to make them work across domains.\n\nURL definition for users.\n/<username|username@site>/<action>/<action_data>\nIf action is missing then \'profile\' is the default.\n\nGeneral URL definition for streams and rhythms.\n/<username|username@site>/<stream|rhythm>/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/<action>/<data dependent on action>\nIf the site is missing then is assumed to be the same as the domain name of the url.\nIf a version is missing it is presumed to mean \'latest\' and the action is for the client viewing it.\n\nStream URL with a filter:\n/<username|username@site>/<stream|rhythm>/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/rhythm/<username>@<site>/<rhythm_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>\n\nPost shorthand URLS:\n/post/local/<post_id>\n/post/<stream_domain>/<post_id>\n/post/<stream_domain>/<post_id>/<action>\nDefault action is for a client user viewing an post.\n\'local\' uses the same domain as the domain name in the URL.\n\nPost longhand URLS:\nDomain assumed to be local if omitted.\n/<username|username@site>/stream/<action>/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/post/<post_id>\n\nGeneral site URL:\n/site/<action>/<action data>\n\nOther reserved usernames (as they are used as the first parameter in most URLS.)\ntest*\nsystem*\nadmin*', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10341, '2013-06-19 06:14:14', 10064, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10343, '2013-06-19 06:14:14', 10064, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'refactor, urls', NULL, NULL),
	(10344, '2013-06-19 06:14:14', 10064, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10345, '2013-06-19 09:02:41', 10065, 1, 1, 'Rhythm paramaters', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10346, '2013-06-19 09:02:41', 10065, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10347, '2013-06-19 09:02:41', 10065, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10349, '2013-06-19 09:02:41', 10065, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10350, '2013-06-19 09:02:41', 10065, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10351, '2013-06-19 09:17:31', 10065, 2, 1, 'Rhythm paramaters', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10352, '2013-06-19 09:17:31', 10065, 2, 3, 'Enable parameters to be passed from a client website to the rhythm.\n\nOn the rhythm update page:\nInclude a section that allows for new parameters to be defined.\nJust the name and a description field for now - they will all be strings.\n\nAdapt the protocol to allow for parameters to be passed to rhythms. The rhythm js should use .toString() before attaching them to prevent code injection.\nThe algorithm will be able to use the parameter via BabblingBrook.<rhythm_type>.user_params.<param_name>\n\nCreate a reusable client js module for entering parameters:\nPass the rhythm url to it to create an instance.\nIt fetches the param details via a InfoRequest to a new info action.\nDisplay the name and a textbox for each param with a popup help icon for the description.\nOn clicking a \'done\' button, store the options in local storage - and the client DB and pass them to a callback.\nconstructor also accepts an object of prefilled params to display on the form and an instance id that can be used to store multiple sets of params against the same rhythm.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10353, '2013-06-19 09:17:31', 10065, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10355, '2013-06-19 09:17:31', 10065, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10356, '2013-06-19 09:17:31', 10065, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10357, '2013-06-19 09:21:50', 10066, 1, 1, 'Discussion about the skys open bugs Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10358, '2013-06-19 09:21:50', 10066, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys%20open%20bugs/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys open bugs/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10359, '2013-06-19 09:21:50', 10066, 1, 4, 'Order the results by the take value that user sky has given the main value.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10360, '2013-06-19 11:21:37', 10025, 2, 1, 'New lines not rendered when displaying an post text field in the post view', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10361, '2013-06-19 11:21:37', 10025, 2, 3, 'na', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10362, '2013-06-19 11:21:37', 10025, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10363, '2013-06-19 11:21:37', 10025, 2, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10364, '2013-06-19 11:21:37', 10025, 2, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10365, '2013-06-21 14:35:18', 10067, 1, 1, 'Discussion about the skys closed bugs Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10366, '2013-06-21 14:35:18', 10067, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys%20closed%20bugs/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys closed bugs/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10367, '2013-06-21 14:35:18', 10067, 1, 4, 'Only used in the sky/bug stream, removes bugs that have been closed and then orders the results by the take value that user sky has given the main value.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10368, '2013-06-21 14:46:28', 10028, 2, 1, 'Make custom sort rhythms for bug stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10369, '2013-06-21 14:46:28', 10028, 2, 3, 'newest - standard\nskys priority - standard\nskys open bugs - skys priority, but only for open bugs\nclosed bugs by date - only closed bugs, ordered by date\npopular in last hour\npopular in last day\npopular in last week\npopular in last month\npopular in last year\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10370, '2013-06-21 14:46:28', 10028, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10372, '2013-06-21 14:46:28', 10028, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'bug stream', NULL, NULL),
	(10373, '2013-06-21 14:46:28', 10028, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10374, '2013-06-21 14:58:05', 10068, 1, 1, 'Discussion about the popular in last hour Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10375, '2013-06-21 14:58:05', 10068, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/popular%20in%20last%20hour/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/popular in last hour/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10376, '2013-06-21 14:58:05', 10068, 1, 4, 'Order the results by the take value that user sky has given the main value.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10377, '2013-06-21 15:12:17', 10028, 3, 1, 'Make custom sort rhythms for bug stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10378, '2013-06-21 15:12:17', 10028, 3, 3, 'newest - standard\nskys priority - standard\nskys open bugs - skys priority, but only for open bugs\nclosed bugs by date - only closed bugs, ordered by date\npopular in last hour\npopular in last day\npopular in last week\npopular in last month\npopular in last year\n\npopular in ... sorts all posts in that range, and weights them so that the time span is equal. Will require a final sort process after all the main sorts have finished... should probably refactor it so that the loop is done in the sort process, would make it less complex.\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10379, '2013-06-21 15:12:17', 10028, 3, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10381, '2013-06-21 15:12:17', 10028, 3, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'bug stream', NULL, NULL),
	(10382, '2013-06-21 15:12:17', 10028, 3, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10383, '2013-06-21 15:24:57', 10064, 2, 1, 'Refactor urls', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10384, '2013-06-21 15:24:57', 10064, 2, 3, 'URL paths need refactoring\n\nSeveral additional features are needed in urls to make them work across domains.\n\nURL definition for users.\n/<username|username@site>/<action>/<action_data>\nIf action is missing then \'profile\' is the default.\n\nGeneral URL definition for streams and rhythms.\n/<username|username@site>/<stream|rhythm>/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/<action>/<data dependent on action>\nIf the site is missing then is assumed to be the same as the domain name of the url.\nIf a version is missing it is presumed to mean \'latest\' and the action is for the client viewing it.\n\nStream URL with a filter:\n/<username|username@site>/<stream|rhythm>/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/rhythm/<username>@<site>/<rhythm_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>\n\nPost shorthand URLS:\n/post/local/<post_id>\n/post/<stream_domain>/<post_id>\n/post/<stream_domain>/<post_id>/<action>\nDefault action is for a client user viewing an post.\n\'local\' uses the same domain as the domain name in the URL.\n\nPost longhand URLS:\nDomain assumed to be local if omitted.\n/<username|username@site>/stream/<action>/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/post/<post_id>\n\nGeneral site URL:\n/site/<action>/<action data>\n\n\nTake urls.\n\n...\n\n\n\n\n\nOther reserved usernames (as they are used as the first parameter in most URLS.)\ntest*\nsystem*\nadmin*', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10385, '2013-06-21 15:24:57', 10064, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10387, '2013-06-21 15:24:57', 10064, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'refactor,urls', NULL, NULL),
	(10388, '2013-06-21 15:24:57', 10064, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10389, '2013-06-21 15:29:31', 10064, 3, 1, 'Refactor urls', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10390, '2013-06-21 15:29:31', 10064, 3, 3, 'URL paths need refactoring\n\nSeveral additional features are needed in urls to make them work across domains.\n\nURL definition for users.\n/<username|username@site>/<action>/<action_data>\nIf action is missing then \'profile\' is the default.\n\nGeneral URL definition for streams and rhythms.\n/<username|username@site>/<stream|rhythm>/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/<action>/<data dependent on action>\nIf the site is missing then is assumed to be the same as the domain name of the url.\nIf a version is missing it is presumed to mean \'latest\' and the action is for the client viewing it.\n\nStream URL with a filter:\n/<username|username@site>/<stream|rhythm>/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/rhythm/<username>@<site>/<rhythm_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>\n\nPost shorthand URLS:\n/post/local/<post_id>\n/post/<stream_domain>/<post_id>\n/post/<stream_domain>/<post_id>/<action>\nDefault action is for a client user viewing an post.\n\'local\' uses the same domain as the domain name in the URL.\n\nGeneral site URL:\n/site/<action>/<action data>\n\nOther reserved usernames (as they are used as the first parameter in most URLS.)\ntest*\nsystem*\nadmin*', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10391, '2013-06-21 15:29:31', 10064, 3, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10393, '2013-06-21 15:29:31', 10064, 3, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'refactor,urls', NULL, NULL),
	(10394, '2013-06-21 15:29:31', 10064, 3, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10395, '2013-06-21 15:37:31', 10069, 1, 1, 'Create all the possible methods in which takes can be fetched from the info domain', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10396, '2013-06-21 15:37:31', 10069, 1, 3, 'These will be available to rhythms, so that takes can be fetched for calculating the sort order.\n\nFetch a stream block number.\nThis is the used in subsequent requests.\n/<stream_username|stream_username@site>/stream/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/getblocknumber?time=<takes_username>&type=<stream|tree>&post_id=<root_post_id|undefined>\n\nFetch all takes for a user in a particular block of a stream or tree.\n/<stream_username|stream_username@site>/stream/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/getusertakes?username=<takes_username>&block_number=<block_number>&type=<stream|tree>&post_id=<root_post_id|undefined>&field_id=<field_id|undefined>\nThe type is currently used, but is redundant, use post_id to determine it.\n\nFetch all takes for a single post.\n/post/<stream_domain>/<post_id>/takes?type=<stream|tree>&post_id=<root_post_id|>\nThe type is currently used, but is redundant, use post_id to determine it.\nReturned as \n[\n    {\n        "value":"<int>",\n        "field_id":"<uint>",\n        "username":"<username>",\n        "domain":"<domain>"\n    },\n    { ... }\n]\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10397, '2013-06-21 15:37:31', 10069, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Info domain,Javascript,PHP,Protocol', NULL, NULL),
	(10399, '2013-06-21 15:37:31', 10069, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'takes, rhythms', NULL, NULL),
	(10400, '2013-06-21 15:37:31', 10069, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10401, '2013-06-21 15:44:15', 10069, 2, 1, 'Create all the possible methods in which takes can be fetched from the info domain', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10402, '2013-06-21 15:44:15', 10069, 2, 3, 'These will be available to rhythms, so that takes can be fetched for calculating the sort order.\n\nFetch a stream block number.\nThis is the used in subsequent requests.\n/<stream_username|stream_username@site>/stream/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/getblocknumber?time=<takes_username>&type=<stream|tree>&post_id=<root_post_id|undefined>\nReturned as: \n{\n    "block_number":<uint>,\n    "refresh_frequency":<uint>\n}\n\n\nFetch all takes for a user in a particular block of a stream or tree.\n/<stream_username|stream_username@site>/stream/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/getusertakes?username=<takes_username>&block_number=<block_number>&type=<stream|tree>&post_id=<root_post_id|undefined>&field_id=<field_id|undefined>\nThe type is currently used, but is redundant, use post_id to determine it.\nReturned as: \n\n\n\nFetch all takes for a single post.\n/post/<stream_domain>/<post_id>/takes?type=<stream|tree>&post_id=<root_post_id|>\nThe type is currently used, but is redundant, use post_id to determine it.\nReturned as: \n[\n    {\n        "value":"<int>",\n        "field_id":"<uint>",\n        "username":"<username>",\n        "domain":"<domain>"\n    },\n    { ... }\n]\n\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10403, '2013-06-21 15:44:15', 10069, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Info domain,Javascript,PHP,Protocol', NULL, NULL),
	(10405, '2013-06-21 15:44:15', 10069, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'takes,rhythms', NULL, NULL),
	(10406, '2013-06-21 15:44:15', 10069, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10407, '2013-06-21 16:03:11', 10069, 3, 1, 'Create all the possible methods in which takes can be fetched from the info domain', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10408, '2013-06-21 16:03:11', 10069, 3, 3, 'These will be available to rhythms, so that takes can be fetched for calculating the sort order.\n\nFetch a stream block number.\nFetch all takes for a user in a particular block of a stream or tree.\nFetch all takes for a single post.\nFetch a take for a single user for a single post.\n@todo\nFetch all takes for a stream block number\n\nAlso perhaps\nthe take value of an post by a ring member.\nthe take values of a block of posts in a stream by a ring member.\n\n\nFetch a stream block number.\nThis is the used in subsequent requests.\n/<stream_username|stream_username@site>/stream/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/getblocknumber?time=<takes_username>&type=<stream|tree>&post_id=<root_post_id|undefined>\nReturned as: \n{\n    "block_number":<uint>,\n    "refresh_frequency":<uint>\n}\n@todo Should also return the start and end timestamps of the block.\n\n\nFetch all takes for a user in a particular block of a stream or tree.\n/<stream_username|stream_username@site>/stream/<stream_name>/<major_version|\'latest\'|\'all\'>/<minor_version|\'latest\'|\'all\'>/<patch_version|\'latest\'|\'all\'>/getusertakes?username=<takes_username>&block_number=<block_number>&type=<stream|tree>&post_id=<root_post_id|undefined>&field_id=<field_id|undefined>\nThe type is currently used, but is redundant, use post_id to determine it.\nReturned as: \n{\n    "takes" : [\n        {\n            "post_id":<uint>,\n            "value":<int>,\n            "date_taken",<int>\n        },{ ... }\n    ]\n}\n\n\nFetch all takes for a single post.\n/post/<stream_domain>/<post_id>/takes?type=<stream|tree>&post_id=<root_post_id|undefined>\n@todo The type is currently used, but is redundant, use post_id to determine it.\nReturned as: \n[\n    {\n        "value":"<int>",\n        "field_id":"<uint>",\n        "username":"<username>",\n        "domain":"<domain>"\n    },\n    { ... }\n]\n@todo Standardize the data by naming the array as "takes", as in the returned data for getusertakes\n\n\nFetch a take for a single user for a single post.\n/post/<stream_domain>/<post_id>/takes?user_domain=<domain>&user_post_id=<username>\nReturned as: \n{\n    "value":<int>\n}\n\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10409, '2013-06-21 16:03:11', 10069, 3, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Info domain,Javascript,PHP,Protocol', NULL, NULL),
	(10411, '2013-06-21 16:03:11', 10069, 3, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'takes,rhythms', NULL, NULL),
	(10412, '2013-06-21 16:03:11', 10069, 3, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10413, '2013-06-21 16:05:49', 10028, 4, 1, 'Make custom sort rhythms for bug stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10414, '2013-06-21 16:05:49', 10028, 4, 3, 'newest - standard\nskys priority - standard\nskys open bugs - skys priority, but only for open bugs\nclosed bugs by date - only closed bugs, ordered by date\npopular in last hour\npopular in last day\npopular in last week\npopular in last month\npopular in last year\n\npopular in ... sorts all posts in that range, and weights them so that the time span is equal. Will require a final sort process after all the main sorts have finished... should probably refactor it so that the loop is done in the sort process, would make it less complex.\n\nAlso requires amending the getPosts process of the filter Rhythm so that posts can be requested between two dates.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10415, '2013-06-21 16:05:49', 10028, 4, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10417, '2013-06-21 16:05:49', 10028, 4, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'bug stream', NULL, NULL),
	(10418, '2013-06-21 16:05:49', 10028, 4, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10448, '2013-06-26 10:38:53', 10028, 5, 1, 'Make custom sort rhythms for bug stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10449, '2013-06-26 10:38:53', 10028, 5, 3, 'newest - standard\nskys priority - standard\nskys open bugs - skys priority, but only for open bugs\nclosed bugs by date - only closed bugs, ordered by date\npopular in last hour\npopular in last day\npopular in last week\n\npopular in ... sorts all posts in that range, and weights them so that the time span is equal. Will require a final sort process after all the main sorts have finished... should probably refactor it so that the loop is done in the sort process, would make it less complex.\n\nAlso requires amending the getPosts process of the filter Rhythm so that posts can be requested between two dates.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10450, '2013-06-26 10:38:53', 10028, 5, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10452, '2013-06-26 10:38:53', 10028, 5, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'bug stream', NULL, NULL),
	(10453, '2013-06-26 10:38:53', 10028, 5, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10460, '2013-06-27 06:34:19', 10028, 6, 1, 'Make custom sort rhythms for bug stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10461, '2013-06-27 06:34:19', 10028, 6, 3, 'newest - standard\nskys priority - standard\nskys open bugs - skys priority, but only for open bugs\nclosed bugs by date - only closed bugs, ordered by date\npopular in last hour\npopular in last day\npopular in last week\n\npopular in ... sorts all posts in that range, and weights them so that the time span is equal. Will require a final sort process after all the main sorts have finished... should probably refactor it so that the loop is done in the sort process, would make it less complex.\n\nAlso requires amending the getPosts process of the filter Rhythm so that posts can be requested between two dates. done, just need to test... use maintest stream, and filter it to the middle two posts by time.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10462, '2013-06-27 06:34:19', 10028, 6, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10464, '2013-06-27 06:34:19', 10028, 6, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'bug stream', NULL, NULL),
	(10465, '2013-06-27 06:34:19', 10028, 6, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10466, '2013-06-27 06:34:57', 10028, 7, 1, 'Make custom sort rhythms for bug stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10467, '2013-06-27 06:34:57', 10028, 7, 3, 'newest - standard\nskys priority - standard\nskys open bugs - skys priority, but only for open bugs\nclosed bugs by date - only closed bugs, ordered by date\npopular in last hour\npopular in last day\npopular in last week\n\npopular in ... sorts all posts in that range, and weights them so that the time span is equal. Will require a final sort process after all the main sorts have finished... should probably refactor it so that the loop is done in the sort process, would make it less complex.\n\nAlso requires amending the getPosts process of the filter Rhythm so that posts can be requested between two dates. done, just need to test... use maintest stream, and filter it to the middle two posts by time..', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10468, '2013-06-27 06:34:57', 10028, 7, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10470, '2013-06-27 06:34:57', 10028, 7, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'bug stream', NULL, NULL),
	(10471, '2013-06-27 06:34:57', 10028, 7, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10484, '2013-07-03 06:57:07', 10076, 1, 1, 'Discussion about the popular in last day Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10485, '2013-07-03 06:57:07', 10076, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/popular%20in%20last%20day/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/popular in last day/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10486, '2013-07-03 06:57:07', 10076, 1, 4, 'Displays the most popular posts from the last hour. Weighting more recent posts with a higher score.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10487, '2013-07-03 06:58:12', 10077, 1, 1, 'Discussion about the popular in last week Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10488, '2013-07-03 06:58:12', 10077, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/popular%20in%20last%20week/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/popular in last week/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10489, '2013-07-03 06:58:12', 10077, 1, 4, 'Displays the most popular posts from the last hour. Weighting more recent posts with a higher score.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10490, '2013-07-03 10:15:52', 10078, 1, 1, 'Discussion about the skys task priority Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10491, '2013-07-03 10:15:52', 10078, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys%20task%20priority/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys task priority/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10492, '2013-07-03 10:15:52', 10078, 1, 4, 'Order the results by the take value that user sky has given the main value.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10493, '2013-07-03 10:31:10', 10079, 1, 1, 'Ability to request takes by ring member', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10494, '2013-07-03 10:31:10', 10079, 1, 3, 'This would make it possible for rings to be used for marking users for individual ring members. Eg a ring to enable following. \n\nThis could also be done by using a user stream and using stream user takes.\n\nWould require two new info domain protocol calls:\nthe take value of an post by a ring member.\nthe take values of a block of posts in a stream by a ring member.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10495, '2013-07-03 10:34:05', 10022, 4, 1, 'Develop the tasks stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10496, '2013-07-03 10:34:05', 10022, 4, 3, 'Create specific sort rhythms\n\nSort by user Sky\nSort by best\nSort by new\nSort by \'in progess\'.\n\nEdit: sort by task has been moved to a feature request.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10497, '2013-07-03 10:34:05', 10022, 4, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10499, '2013-07-03 10:34:05', 10022, 4, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'create default streams', NULL, NULL),
	(10500, '2013-07-03 10:34:05', 10022, 4, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10501, '2013-07-03 10:35:59', 10080, 1, 1, 'Create a task stream sort Rhythm for sorting by tag', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10502, '2013-07-03 10:35:59', 10080, 1, 3, 'This would need to fetch the full posts for all posts in a block and would require the reinstating of the info domain protocol request to fetch a block of posts with full details.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10503, '2013-07-03 10:40:30', 10081, 1, 1, 'Discussion about the skys in progress tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10504, '2013-07-03 10:40:30', 10081, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys%20in%20progress%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/skys in progress tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10505, '2013-07-03 10:40:30', 10081, 1, 4, 'Order the results by the take value that user sky has given the main value.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10506, '2013-07-03 10:55:09', 10082, 1, 1, 'Write default kindred and suggestion rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10507, '2013-07-03 10:55:09', 10082, 1, 3, 'Create a default kindred rhythm and all the default suggestion rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10508, '2013-07-03 10:55:09', 10082, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10510, '2013-07-03 10:55:09', 10082, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10511, '2013-07-03 10:55:09', 10082, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10512, '2013-07-03 10:56:32', 10083, 1, 1, 'Apply the default rhythms and streams to new users configs.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10513, '2013-07-03 10:56:32', 10083, 1, 3, 'Also manually attach them to the sky user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10514, '2013-07-03 10:56:32', 10083, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,PHP', NULL, NULL),
	(10516, '2013-07-03 10:56:32', 10083, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10517, '2013-07-03 10:56:32', 10083, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10518, '2013-07-03 10:59:05', 10084, 1, 1, 'Create a spam ring and rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10519, '2013-07-03 10:59:05', 10084, 1, 3, 'Just a basic admin one where I can mark spam.\n\nApply the spam take data to the default rhythms.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10520, '2013-07-03 10:59:05', 10084, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10522, '2013-07-03 10:59:05', 10084, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms, rings, spam', NULL, NULL),
	(10523, '2013-07-03 10:59:05', 10084, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10524, '2013-07-03 11:00:27', 10085, 1, 1, 'Discussion about the simple kindred Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10525, '2013-07-03 11:00:27', 10085, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/simple%20kindred/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/simple kindred/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10526, '2013-07-03 11:00:27', 10085, 1, 4, 'When you take something made by a user, you become closer to them.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10527, '2013-07-03 11:43:06', 10086, 1, 1, 'Make all rhythms nutral of their containers', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10528, '2013-07-03 11:43:06', 10086, 1, 3, 'eg\n\nCurrently, the filter rhythms need a structure like\n\nBabblingBrook.Filter.rhythm = {\n  init : function(){\n    // init code\n  },\n  main : function(id){\n    // main code for each post\n  }\n};\n\nThis should be converted to an anonymous function such as \nfunction () {\n\n  var init = function () {\n\n  };\n\n  var main = function () {\n\n  };\n\n  return {\n    init : init,\n    main : main\n  };\n}', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10529, '2013-07-03 11:43:06', 10086, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10531, '2013-07-03 11:43:06', 10086, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10532, '2013-07-03 11:43:06', 10086, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10533, '2013-07-03 11:43:33', 10086, 2, 1, 'Make all rhythms neutral of their containers', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10534, '2013-07-03 11:43:33', 10086, 2, 3, 'eg\n\nCurrently, the filter rhythms need a structure like\n\nBabblingBrook.Filter.rhythm = {\n  init : function(){\n    // init code\n  },\n  main : function(id){\n    // main code for each post\n  }\n};\n\nThis should be converted to an anonymous function such as \nfunction () {\n\n  var init = function () {\n\n  };\n\n  var main = function () {\n\n  };\n\n  return {\n    init : init,\n    main : main\n  };\n}', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10535, '2013-07-03 11:43:33', 10086, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10537, '2013-07-03 11:43:33', 10086, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10538, '2013-07-03 11:43:33', 10086, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10539, '2013-07-04 15:38:12', 10087, 1, 1, 'Make banUser and inviteUser methods for admin ring rhythms.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10540, '2013-07-04 15:38:12', 10087, 1, 3, 'Admin users of a ring need to be able to access banUser and inviteUser function from their rhythms to automate membership processes.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10541, '2013-07-04 15:38:12', 10087, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10543, '2013-07-04 15:38:12', 10087, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythm,ring', NULL, NULL),
	(10544, '2013-07-04 15:38:12', 10087, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10545, '2013-07-04 16:35:38', 10088, 1, 1, 'Make functionality for rings rhythms to store and fetch data', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10546, '2013-07-04 16:35:38', 10088, 1, 3, 'Rings rhythms need to be able to store and fetch data to function correctly.\n\nAll these processes need to be over https to enable privacy. This also means that the ring rhythm needs to be running on https.\n\nstoreRhythmData - allows members and admins to store data. (hard code amount of data allowed to be stored, but ultimately it needs passing with the ring data. and it will need to be fetched from the ring domains data store and stored in the members store for quick access.) (This has been started.)\n\ngetRingMembers - \n\ngetRhythmData - allows members and admin to fetch previously generated data.\n\ngetOtherMembersData - allows members and admin to fetch data from other members.\n\ngetOtherAdminsData - allows admins to get data stored by other admins.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10547, '2013-07-04 16:35:38', 10088, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Documentation,Info domain,Javascript,PHP,Protocol,Domus domain', NULL, NULL),
	(10549, '2013-07-04 16:35:38', 10088, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythm, ring', NULL, NULL),
	(10550, '2013-07-04 16:35:38', 10088, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10551, '2013-07-05 06:13:10', 10088, 2, 1, 'Make functionality for rings rhythms to store and fetch data', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10552, '2013-07-05 06:13:10', 10088, 2, 3, 'Rings rhythms need to be able to store and fetch data to function correctly.\n\nAll these processes need to be over https to enable privacy. This also means that the ring rhythm needs to be running on https.\n\nstoreRhythmData - allows members and admins to store data. (hard code amount of data allowed to be stored, but ultimately it needs passing with the ring data. and it will need to be fetched from the ring domains data store and stored in the members store for quick access.) (This has been started.)\n\ngetRingMembers - Fetch a list of all members of a ring.\n\ngetRhythmData - allows members and admin to fetch previously generated data.\n\ngetOtherMembersData(full_username) - allows members and admin to fetch data from other members.\n\ngetOtherAdminsData - allows admins to get data stored by other admins.\n\nstoreMetaRhythmData - allows admins to store shared admin data.\n\ngetMetaRhythmData - allows admins to get shared admin data.\n\ntakeForRing - allows a ring to take an post from a rhythm.\n\nTests will need building for all of these.  Store the data - retrieve it and then take somethign from the saved data, repeat for the different data types.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10553, '2013-07-05 06:13:10', 10088, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Documentation,Info domain,Javascript,PHP,Protocol,Domus domain', NULL, NULL),
	(10555, '2013-07-05 06:13:10', 10088, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythm,ring', NULL, NULL),
	(10556, '2013-07-05 06:13:10', 10088, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10557, '2013-07-05 06:21:58', 10089, 1, 1, 'Enable rings rhythms to make posts', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10558, '2013-07-05 06:21:58', 10089, 1, 3, 'Ultimately rings will need to be able to make posts.\n\nThis will also require a setting in the ring admin pages to enable/disable it for members as some rings will not want members making rings in their name.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10559, '2013-07-05 06:46:43', 10090, 1, 1, 'Work out security issue with ring rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10560, '2013-07-05 06:46:43', 10090, 1, 3, 'Ring rhythms run the the ring member ring domain, but the results are stored in the rings domain.\n\nNeed to ensure that the results can not be spoofed. Currently uses a permanent ring member password... but this is not ideal.\n\nBetter, would be to use a temporary password using the generic system - requested form the ring domain from the members domus domain before submitting the data. The ring domain server can than verify this password. This prevents any recording of the password.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10561, '2013-07-05 06:46:43', 10090, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Info domain,Javascript,PHP,Store domain', NULL, NULL),
	(10563, '2013-07-05 06:46:43', 10090, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'ring,rhythm,security', NULL, NULL),
	(10564, '2013-07-05 06:46:43', 10090, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10565, '2013-07-05 08:30:07', 10065, 3, 1, 'Rhythm paramaters', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10566, '2013-07-05 08:30:07', 10065, 3, 3, 'Enable parameters to be passed from a client website to the rhythm.\n\nOn the rhythm update page:\nInclude a section that allows for new parameters to be defined.\nJust the name and a description field for now - they will all be strings.\n\nAdapt the protocol to allow for parameters to be passed to rhythms. The rhythm js should use .toString() before attaching them to prevent code injection.\nThe algorithm will be able to use the parameter via BabblingBrook.<rhythm_type>.user_params.<param_name>\n\nCreate a reusable client js module for entering parameters:\nPass the rhythm url to it to create an instance.\nIt fetches the param details via a InfoRequest to a new info action.\nDisplay the name and a textbox for each param with a popup help icon for the description.\nOn clicking a \'done\' button, store the options in local storage - and the client DB and pass them to a callback.\nconstructor also accepts an object of prefilled params to display on the form and an instance id that can be used to store multiple sets of params against the same rhythm.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10567, '2013-07-05 08:30:07', 10065, 3, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10569, '2013-07-05 08:30:07', 10065, 3, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10570, '2013-07-05 08:30:07', 10065, 3, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10571, '2013-07-05 08:54:24', 10091, 1, 1, 'Reinvent the error system', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10572, '2013-07-05 08:54:24', 10091, 1, 3, 'The error system needs a major overhaul.\n\nNotes:\nThe Model class should accept an onError callback which runs if there is an error. It should be optional and a generic error raised if the callback is not passed in. The error code should be bound to the error callback, and if the callback is not defined it should use a generic one for that model, eg \'generic_model_name\'\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10573, '2013-07-05 08:54:24', 10091, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10575, '2013-07-05 08:54:24', 10091, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'errors', NULL, NULL),
	(10576, '2013-07-05 08:54:24', 10091, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10577, '2013-07-05 09:39:55', 10092, 1, 1, 'All calls to BabblingBrook.Client.Suggestion need to be converted to include a callback to show the suggestions.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10578, '2013-07-05 09:39:55', 10092, 1, 3, 'At present they poll until they are ready, which is messy.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10579, '2013-07-05 09:39:55', 10092, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10581, '2013-07-05 09:39:55', 10092, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'suggestions', NULL, NULL),
	(10582, '2013-07-05 09:39:55', 10092, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10583, '2013-07-05 09:47:11', 10092, 2, 1, 'All calls to BabblingBrook.Client.Suggestion need to be converted to include a callback to show the suggestions.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10584, '2013-07-05 09:47:11', 10092, 2, 3, 'At present they poll until they are ready, which is messy.\n\nResults should be cached by type and parameters. So that the request is not repeated.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10585, '2013-07-05 09:47:11', 10092, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10587, '2013-07-05 09:47:11', 10092, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'suggestions', NULL, NULL),
	(10588, '2013-07-05 09:47:11', 10092, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10589, '2013-07-09 07:36:26', 10093, 1, 1, 'Rings page is blank', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10590, '2013-07-09 07:36:26', 10093, 1, 3, 'Probably caused by there being no subscriptions.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10591, '2013-07-09 07:36:26', 10093, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10592, '2013-07-09 07:36:26', 10093, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:22.0) Gecko/20100101 Firefox/22.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10593, '2013-07-09 07:36:26', 10093, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10594, '2013-07-09 07:36:26', 10093, 1, 7, 'http://cobaltcascade.localhost/sky/ring/index', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10595, '2013-07-09 15:20:06', 10094, 1, 1, 'Help popop close icon moves down if the title is too long.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10596, '2013-07-09 15:20:06', 10094, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10597, '2013-07-09 15:20:06', 10094, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10598, '2013-07-09 15:20:06', 10094, 1, 5, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10599, '2013-07-09 15:20:06', 10094, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10600, '2013-07-09 15:20:06', 10094, 1, 7, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10601, '2013-07-10 05:37:14', 10095, 1, 1, 'Make the snippet stream url configurable', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10602, '2013-07-10 05:37:14', 10095, 1, 3, 'Add a config option to change the snippet stream url, so that the user can choose any stream they want as their snippet url.\n\nWill require writing a stream url validator in UserConfigChangeForm\n\nFetching the filter rhythm will require fetching it from the users subscriptions - if the are subscribed to it, or fetching the default one.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10603, '2013-07-10 05:41:21', 10096, 1, 1, 'Discussion about the popular recently Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10604, '2013-07-10 05:41:21', 10096, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/popular%20recently/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/popular recently/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10605, '2013-07-10 05:41:21', 10096, 1, 4, 'Displays the most popular posts from the last hour. Weighting more recent posts with a higher score.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10606, '2013-07-11 08:26:45', 10097, 1, 1, 'Make the snippet stream url configurable ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10607, '2013-07-11 08:26:45', 10097, 1, 3, 'Add a config option to change the snippet stream url, so that the user can choose any stream they want as their snippet url.\n\nWill require writing a stream url validator in UserConfigChangeForm\n\nFetching the filter rhythm will require fetching it from the users subscriptions - if the are subscribed to it, or fetching the default one.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10608, '2013-07-11 08:26:45', 10097, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript,PHP', NULL, NULL),
	(10610, '2013-07-11 08:26:45', 10097, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'config,snippets', NULL, NULL),
	(10611, '2013-07-11 08:26:45', 10097, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10612, '2013-07-11 08:27:09', 10098, 1, 1, 'See task /post/cobaltcascade.localhost/10097', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10615, '2013-07-11 08:43:37', 10100, 1, 1, 'another test snippet', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10616, '2013-07-11 08:43:37', 10100, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10617, '2013-07-11 08:43:45', 10101, 1, 1, 'a third test snippet', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10618, '2013-07-11 08:43:45', 10101, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10619, '2013-07-11 08:43:52', 10102, 1, 1, 'a forth test snippet', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10620, '2013-07-11 08:43:52', 10102, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10621, '2013-07-11 08:44:08', 10103, 1, 1, 'a fifth test snippet', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10622, '2013-07-11 08:44:08', 10103, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10624, '2013-07-23 08:58:57', 10105, 1, 1, 'A really long title in a test snippet. It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is thisA really long title in a test snippet. It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is thisA really long title in a test snippet. It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is thisA really long title in a test snippet. It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is thisA really long title in a test snippet. It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is thisA really long title in a test snippet. It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is thisA really long title in a test snippet. It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is thisA really long title in a test snippet. It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is thisA really long title in a test snippet. It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is a s long as it can be, It really is this', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10625, '2013-07-23 08:58:57', 10105, 1, 3, 'Some more test for a long test snippet. It should only appear in the open version.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10626, '2013-07-23 09:27:42', 10033, 3, 1, 'Make snippets appear in the message plane', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10627, '2013-07-23 09:27:42', 10033, 3, 3, 'Use the algorithms described (/post/cobaltcascade.localhost/10032) to select a bunch of snippets to appear in the message plane.\n\nWhen the message plane is empty, display one of these messages. \n\nAlways keep the next bunch of snippets stored in local storage (start with 20). \n\nKeep a record of the last 500 snippet ids used and don\'t repeat them.\n\nStore the stream in local storage.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10628, '2013-07-23 09:27:42', 10033, 3, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10630, '2013-07-23 09:27:42', 10033, 3, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'snippets', NULL, NULL),
	(10631, '2013-07-23 09:27:42', 10033, 3, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10633, '2013-07-24 06:54:53', 10032, 2, 1, 'Write Rhythms for the snippets stream ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10634, '2013-07-24 06:54:53', 10032, 2, 3, 'Just use the recently popular for now.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10635, '2013-07-24 06:54:53', 10032, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10637, '2013-07-24 06:54:53', 10032, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'snippets', NULL, NULL),
	(10638, '2013-07-24 06:54:53', 10032, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10639, '2013-07-24 07:44:25', 10107, 1, 1, 'The message box size is now editable in the users settings', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10640, '2013-07-24 08:15:02', 10108, 1, 1, 'Discussion about the basic kindred Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10641, '2013-07-24 08:15:02', 10108, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic%20kindred/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic kindred/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10642, '2013-07-24 08:15:02', 10108, 1, 4, 'A simple kindred rhythm that creates kindred relationships with users who submit content you vote on.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10643, '2013-07-24 08:44:16', 10109, 1, 1, 'Enable the config page to allow for multiple kindred rhythms to be selected', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10644, '2013-07-24 08:44:16', 10109, 1, 3, 'And ensure that all of them are posted into user_rhythm and that they all run in order.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10645, '2013-07-24 08:44:16', 10109, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10647, '2013-07-24 08:44:16', 10109, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythm,kindred,settings', NULL, NULL),
	(10648, '2013-07-24 08:44:16', 10109, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10649, '2013-07-24 08:49:30', 10110, 1, 1, 'Kindred rhythms to be able to define dependencies on other rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10650, '2013-07-24 08:49:30', 10110, 1, 3, 'Kindred rhythms need to be able to define dependencies so that they can pull in the latest results from the other rhythm when running.\n\nThis will effect the run order of the rhythms on the settings page.\n\nIt will also mean that suggestions will automatically subscribe dependencies.\n\nThe settings page will need to check that dependencies are not removable without the parent being removed.\n\nThis task is dependant on task ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10651, '2013-07-24 08:49:30', 10110, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10653, '2013-07-24 08:49:30', 10110, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythm,kindred,settings', NULL, NULL),
	(10654, '2013-07-24 08:49:30', 10110, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10655, '2013-07-24 08:51:33', 10110, 2, 1, 'Kindred rhythms to be able to define dependencies on other rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10656, '2013-07-24 08:51:33', 10110, 2, 3, 'Kindred rhythms need to be able to define dependencies so that they can pull in the latest results from the other rhythm when running.\n\nThis will effect the run order of the rhythms on the settings page.\n\nIt will also mean that suggestions will automatically subscribe dependencies.\n\nThe settings page will need to check that dependencies are not removable without the parent being removed.\n\nThis task is dependant on task 10109', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10657, '2013-07-24 08:51:33', 10110, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(10659, '2013-07-24 08:51:33', 10110, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythm,kindred,settings', NULL, NULL),
	(10660, '2013-07-24 08:51:33', 10110, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10661, '2013-07-24 09:11:01', 10082, 2, 1, 'Write default kindred and suggestion rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10662, '2013-07-24 09:11:01', 10082, 2, 3, 'Create a default kindred rhythm and all the default suggestion rhythms\n\nKindred rhythms do not a have a config option. create one . (done)\n\nKindred rhythms also need storing in user_rhtyhm, when a config option is changed then update user_rhythm.\n\nEnsure that the default kindred rhythm is stored in user_rhythm when a user signs up.\n\nIf a config option is reset to default ensure that the default kindred rhythm is set in user_rhythm.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10663, '2013-07-24 09:11:01', 10082, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10665, '2013-07-24 09:11:01', 10082, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10666, '2013-07-24 09:11:01', 10082, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10667, '2013-07-24 09:11:24', 10082, 3, 1, 'Write default kindred and suggestion rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10668, '2013-07-24 09:11:24', 10082, 3, 3, 'Create a default kindred rhythm and all the default suggestion rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10669, '2013-07-24 09:11:24', 10082, 3, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP,Store domain', NULL, NULL),
	(10671, '2013-07-24 09:11:24', 10082, 3, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10672, '2013-07-24 09:11:24', 10082, 3, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10673, '2013-07-24 09:11:39', 10082, 4, 1, 'Write default kindred and suggestion rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10674, '2013-07-24 09:11:39', 10082, 4, 3, 'Create a default kindred rhythm and all the default suggestion rhythms\n\nKindred rhythms do not a have a config option. create one . (done)\n\nKindred rhythms also need storing in user_rhtyhm, when a config option is changed then update user_rhythm.\n\nEnsure that the default kindred rhythm is stored in user_rhythm when a user signs up.\n\nIf a config option is reset to default ensure that the default kindred rhythm is set in user_rhythm.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10675, '2013-07-24 09:11:39', 10082, 4, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10677, '2013-07-24 09:11:39', 10082, 4, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10678, '2013-07-24 09:11:39', 10082, 4, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10679, '2013-07-24 09:13:58', 10111, 1, 1, 'Editing an post twice', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10680, '2013-07-24 09:13:58', 10111, 1, 3, 'If an post is edited twice without refreshing the page then the post details revert to the earlier revision in the edit form.\n\nWill be caused by not saving the edited post back into the main post module.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10681, '2013-07-24 09:13:58', 10111, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10682, '2013-07-24 09:13:58', 10111, 1, 5, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10683, '2013-07-24 09:13:58', 10111, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10684, '2013-07-24 09:13:58', 10111, 1, 7, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10685, '2013-07-24 09:45:55', 10082, 5, 1, 'Write default kindred and suggestion rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10686, '2013-07-24 09:45:55', 10082, 5, 3, 'Create a default kindred rhythm and all the default suggestion rhythms\n\nKindred rhythms do not a have a config option. create one . (done)\n\nKindred rhythms also need storing in user_rhtyhm, when a config option is changed then update user_rhythm. (done).\n\nEnsure that the default kindred rhythm is stored in user_rhythm when a user signs up.\n\nIf a config option is reset to default ensure that the default kindred rhythm is set in user_rhythm.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10687, '2013-07-24 09:45:55', 10082, 5, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Javascript', NULL, NULL),
	(10689, '2013-07-24 09:45:55', 10082, 5, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10690, '2013-07-24 09:45:55', 10082, 5, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10691, '2013-07-24 09:51:37', 10082, 6, 1, 'Write default kindred and suggestion rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10692, '2013-07-24 09:51:37', 10082, 6, 3, 'Create a default kindred rhythm and all the default suggestion rhythms\n\nKindred rhythms do not a have a config option. create one . (done)\n\nKindred rhythms also need storing in user_rhtyhm, when a config option is changed then update user_rhythm. (done)\n\nEnsure that the default kindred rhythm is stored in user_rhythm when a user signs up. (done)\n\nIf a config option is reset to default ensure that the default kindred rhythm is set in user_rhythm.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10693, '2013-07-24 09:51:37', 10082, 6, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP,Store domain', NULL, NULL),
	(10695, '2013-07-24 09:51:37', 10082, 6, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10696, '2013-07-24 09:51:37', 10082, 6, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10697, '2013-07-24 10:16:58', 10082, 7, 1, 'Write default kindred and suggestion rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10698, '2013-07-24 10:16:58', 10082, 7, 3, 'Create a default kindred rhythm and all the default suggestion rhythms\n\nKindred rhythms do not a have a config option. create one . (done)\n\nKindred rhythms also need storing in user_rhtyhm, when a config option is changed then update user_rhythm. (done)\n\nEnsure that the default kindred rhythm is stored in user_rhythm when a user signs up. (done)\n\nIf a config option is reset to default ensure that the default kindred rhythm is set in user_rhythm. (done)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10699, '2013-07-24 10:16:58', 10082, 7, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP,Store domain', NULL, NULL),
	(10701, '2013-07-24 10:16:58', 10082, 7, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'rhythms', NULL, NULL),
	(10702, '2013-07-24 10:16:58', 10082, 7, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10729, '2013-07-25 05:45:30', 10125, 1, 1, 'Discussion about the basic stream Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10730, '2013-07-25 05:45:30', 10125, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic%20stream/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic stream/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10731, '2013-07-25 05:45:30', 10125, 1, 4, 'A simple stream suggestion rhythm that suggests streams that your nearest kindred are subscribed to.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10732, '2013-07-25 07:17:41', 10126, 1, 1, 'Suggestions for features with version numbers can \'upgrade\'', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10733, '2013-07-25 07:17:41', 10126, 1, 3, 'If a suggestion rhythm finds a feature that is already subscribed, but for a different version then it can be flagged as an upgrade suggestion rather than an install suggestion. This would make it easy for users to upgrade features when their peers do.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10734, '2013-07-30 12:09:39', 10127, 1, 1, 'Discussion about the basic filter Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10735, '2013-07-30 12:09:39', 10127, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic%20filter/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic filter/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10736, '2013-07-30 12:09:39', 10127, 1, 4, 'A simple filter suggestion rhythm. Suggests filters from your nearest kindreds subscribed rhythms.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10737, '2013-07-30 15:11:46', 10128, 1, 1, 'Declined suggestion filters do not include stream information', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10738, '2013-07-30 15:11:46', 10128, 1, 3, 'If a filter suggestion is declined, the stream it is in is not recorded. Need to include this so that the rhythms can decide whether to show it again or not.\n\nInclude a new column in suggestions_declined to include this information.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10739, '2013-07-30 15:11:46', 10128, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Protocol', NULL, NULL),
	(10740, '2013-07-30 15:11:46', 10128, 1, 5, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10741, '2013-07-30 15:11:46', 10128, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10742, '2013-07-30 15:11:46', 10128, 1, 7, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10743, '2013-07-30 15:25:32', 10129, 1, 1, 'Discussion about the basic moderation ring suggestion Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10744, '2013-07-30 15:25:32', 10129, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic%20moderation%20ring%20suggestion/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic moderation ring suggestion/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10745, '2013-07-30 15:25:32', 10129, 1, 4, 's', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10746, '2013-08-01 08:39:43', 10130, 1, 1, 'Do a system wide spell check.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10747, '2013-08-01 08:39:43', 10130, 1, 3, 'Check all code and db stuff for spelling errors.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10748, '2013-08-01 08:39:43', 10130, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Database,Javascript,PHP', NULL, NULL),
	(10750, '2013-08-01 08:39:43', 10130, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'spelling', NULL, NULL),
	(10751, '2013-08-01 08:39:43', 10130, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10752, '2013-08-01 08:40:51', 10131, 1, 1, 'CSS for the create ring page is broken', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10753, '2013-08-01 08:40:51', 10131, 1, 3, 'Some fields are on the same line as the label.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10754, '2013-08-01 08:40:51', 10131, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10755, '2013-08-01 08:40:51', 10131, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:22.0) Gecko/20100101 Firefox/22.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10756, '2013-08-01 08:40:51', 10131, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10757, '2013-08-01 08:40:51', 10131, 1, 7, 'https://cobaltcascade.localhost/sky/ring/create', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10758, '2013-08-01 08:43:37', 10132, 1, 1, 'Discussion about the user spam@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10759, '2013-08-01 08:43:37', 10132, 1, 3, NULL, 'http://cobaltcascade.localhost/user%20spam/profile', NULL, 'http://cobaltcascade.localhost/user spam/profile', NULL, NULL, NULL, NULL, NULL),
	(10760, '2013-08-01 08:47:22', 10133, 1, 1, 'Discussion about the user spam@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10761, '2013-08-01 08:47:22', 10133, 1, 3, NULL, 'http://cobaltcascade.localhost/user%20spam/profile', NULL, 'http://cobaltcascade.localhost/user spam/profile', NULL, NULL, NULL, NULL, NULL),
	(10762, '2013-08-01 08:50:53', 10134, 1, 1, 'Discussion about the user spam@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10763, '2013-08-01 08:50:53', 10134, 1, 3, NULL, 'http://cobaltcascade.localhost/user%20spam/profile', NULL, 'http://cobaltcascade.localhost/user spam/profile', NULL, NULL, NULL, NULL, NULL),
	(10764, '2013-08-01 08:51:37', 10135, 1, 1, 'Discussion about the user spam@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10765, '2013-08-01 08:51:37', 10135, 1, 3, NULL, 'http://cobaltcascade.localhost/user%20spam/profile', NULL, 'http://cobaltcascade.localhost/user spam/profile', NULL, NULL, NULL, NULL, NULL),
	(10766, '2013-08-01 08:58:28', 10136, 1, 1, 'stream search is cut off on the right hand side of /ring/managetakenames', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10767, '2013-08-01 08:58:28', 10136, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10768, '2013-08-01 08:58:28', 10136, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10769, '2013-08-01 08:58:28', 10136, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:22.0) Gecko/20100101 Firefox/22.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10770, '2013-08-01 08:58:28', 10136, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10771, '2013-08-01 08:58:28', 10136, 1, 7, 'http://cobaltcascade.localhost/user%20spam/ring/managetakenames', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10782, '2013-08-01 15:35:43', 10142, 1, 1, 'When Ajaxurl.redirect is called the page needs to scroll to the top', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10783, '2013-08-01 15:35:43', 10142, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10784, '2013-08-01 15:35:43', 10142, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10785, '2013-08-01 15:35:43', 10142, 1, 5, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10786, '2013-08-01 15:35:43', 10142, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10787, '2013-08-01 15:35:43', 10142, 1, 7, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10788, '2013-08-02 10:13:32', 10143, 1, 1, 'The meta rhythms stream is not displaying extra fields', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10789, '2013-08-02 10:13:32', 10143, 1, 3, 'The meta rhythm stream should have extra fields for the description and link to the other pages for the rhythm.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10790, '2013-08-02 10:13:32', 10143, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client Website', NULL, NULL),
	(10791, '2013-08-02 10:13:32', 10143, 1, 5, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:22.0) Gecko/20100101 Firefox/22.0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10792, '2013-08-02 10:13:32', 10143, 1, 6, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10793, '2013-08-02 10:13:32', 10143, 1, 7, 'http://cobaltcascade.localhost/sky/stream/posts/meta%20stream%20for%20rhythms/0/0/0', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10794, '2013-08-02 10:30:34', 10144, 1, 1, 'Declined Suggestions for sub features should include their parent feature id', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10795, '2013-08-02 10:30:34', 10144, 1, 3, 'When declining a filter or moderation ring for a stream, the id of the stream should also be recorded.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10796, '2013-08-02 10:30:34', 10144, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Info domain,Javascript,PHP,Protocol', NULL, NULL),
	(10798, '2013-08-02 10:30:34', 10144, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'suggestions', NULL, NULL),
	(10799, '2013-08-02 10:30:34', 10144, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10800, '2013-08-02 11:50:36', 10145, 1, 1, 'Create default rhythms for addition suggestion processes', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10801, '2013-08-02 11:50:36', 10145, 1, 3, 'Also include the necessary code in MessageSuggestions.js for them to push messages to the message box.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10802, '2013-08-02 11:50:36', 10145, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10804, '2013-08-02 11:50:36', 10145, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'suggestions,rhythms', NULL, NULL),
	(10805, '2013-08-02 11:50:36', 10145, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10806, '2013-08-02 11:51:20', 10146, 1, 1, 'This has been done for streams, stream filters and stream rings. Other rings still need doing. See task /post/cobaltcascade.localhost/10145', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10807, '2013-08-02 12:07:54', 10147, 1, 1, 'Discussion about the basic user suggestion Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10808, '2013-08-02 12:07:54', 10147, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic%20user%20suggestion/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic user suggestion/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10809, '2013-08-02 12:07:54', 10147, 1, 4, 'A simple rhythm for suggesting new users.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10810, '2013-08-02 14:00:18', 10148, 1, 1, 'Discussion about the basic user stream suggestion Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10811, '2013-08-02 14:00:18', 10148, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic%20user%20stream%20suggestion/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/basic user stream suggestion/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10812, '2013-08-02 14:00:18', 10148, 1, 4, 'A simple rhythm for suggesting streams are used for rating users.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10813, '2013-08-02 14:09:42', 10146, 2, 1, 'This has been done for streams, stream filters and stream rings. Other rings still need doing. See task /post/cobaltcascade.localhost/10145.\n\nEdit: have also added a user_suggestion', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10888, '2013-08-05 10:18:04', 10145, 2, 1, 'Create default rhythms for additional suggestion processes', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10889, '2013-08-05 10:18:04', 10145, 2, 3, 'Also include the necessary code in MessageSuggestions.js for them to push messages to the message box.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10890, '2013-08-05 10:18:04', 10145, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10892, '2013-08-05 10:18:04', 10145, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'suggestions,rhythms', NULL, NULL),
	(10893, '2013-08-05 10:18:04', 10145, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10896, '2013-08-05 15:12:33', 10041, 2, 1, 'Adapt the signup to direct towards the kickstarter', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10897, '2013-08-05 15:12:33', 10041, 2, 3, 'Both modal and static signup pages should show this alternative.\n\nKeep the signup page, but place a notice above it. Can\'t do this until there is a kickstarter page to point to.\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10898, '2013-08-05 15:12:33', 10041, 2, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10900, '2013-08-05 15:12:33', 10041, 2, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'kickstarter,signup', NULL, NULL),
	(10901, '2013-08-05 15:12:33', 10041, 2, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(10909, '2013-09-03 11:11:35', 10194, 1, 1, 'test child', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10910, '2013-09-03 11:11:42', 10195, 1, 1, 'test grand child', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10913, '2013-09-03 13:35:49', 10198, 1, 1, 'Meta conversation for the test creation stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10914, '2013-09-03 13:35:49', 10198, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/test%20creation/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/test creation/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10915, '2013-09-03 13:35:49', 10198, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/test%20creation/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/test creation/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10916, '2013-09-03 13:35:49', 10198, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10917, '2013-09-04 08:04:34', 10199, 1, 1, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10922, '2013-09-16 10:53:15', 10201, 1, 1, 'Discussion about the sky@cobaltcascade.localhost user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10923, '2013-09-16 10:53:15', 10201, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/profile', NULL, 'http://cobaltcascade.localhost/sky/profile', NULL, NULL, NULL, NULL, NULL),
	(10948, '2013-10-02 11:15:25', 10211, 1, 1, 'Discussion about the cobalt cascade alpha tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10949, '2013-10-02 11:15:25', 10211, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20alpha%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade alpha tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10950, '2013-10-02 11:15:25', 10211, 1, 4, 'A list of all tasks, order by the priority of user Sky, that are in the \'Before Cobalt Cascade alpha\' priority\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10951, '2013-10-02 13:27:05', 10212, 1, 1, 'Discussion about the cobalt cascade beta tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10952, '2013-10-02 13:27:05', 10212, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20beta%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade beta tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10953, '2013-10-02 13:27:05', 10212, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10954, '2013-10-02 13:27:37', 10213, 1, 1, 'Discussion about the cobalt cascade beta tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10955, '2013-10-02 13:27:37', 10213, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20beta%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade beta tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10956, '2013-10-02 13:27:37', 10213, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10957, '2013-10-02 13:34:06', 10214, 1, 1, 'Discussion about the cobalt cascade beta tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10958, '2013-10-02 13:34:06', 10214, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20beta%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade beta tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10959, '2013-10-02 13:34:06', 10214, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10960, '2013-10-02 13:37:40', 10215, 1, 1, 'Discussion about the cobalt cascade beta tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10961, '2013-10-02 13:37:40', 10215, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20beta%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade beta tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10962, '2013-10-02 13:37:40', 10215, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10963, '2013-10-02 13:38:27', 10216, 1, 1, 'Discussion about the cobalt cascade beta tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10964, '2013-10-02 13:38:27', 10216, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20beta%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade beta tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10965, '2013-10-02 13:38:27', 10216, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10966, '2013-10-02 13:38:39', 10217, 1, 1, 'Discussion about the cobalt cascade beta tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10967, '2013-10-02 13:38:39', 10217, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20beta%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade beta tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10968, '2013-10-02 13:38:39', 10217, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10969, '2013-10-02 13:39:05', 10218, 1, 1, 'Discussion about the cobalt cascade beta tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10970, '2013-10-02 13:39:05', 10218, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20beta%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade beta tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10971, '2013-10-02 13:39:05', 10218, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10972, '2013-10-02 13:41:16', 10219, 1, 1, 'Discussion about the cobalt cascade beta tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10973, '2013-10-02 13:41:16', 10219, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20beta%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade beta tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10974, '2013-10-02 13:41:16', 10219, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10975, '2013-10-02 13:44:57', 10220, 1, 1, 'Discussion about the cobalt cascade version 1 tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10976, '2013-10-02 13:44:57', 10220, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20version%201%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade version 1 tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10977, '2013-10-02 13:44:57', 10220, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade beta\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10978, '2013-10-02 13:45:49', 10221, 1, 1, 'Discussion about the cobalt cascade version 2 tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10979, '2013-10-02 13:45:49', 10221, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt%20cascade%20version%202%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/cobalt cascade version 2 tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10980, '2013-10-02 13:45:49', 10221, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade version 1\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10981, '2013-10-02 13:46:27', 10222, 1, 1, 'Discussion about the babbling brook alpha tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10982, '2013-10-02 13:46:27', 10222, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling%20brook%20alpha%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling brook alpha tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10983, '2013-10-02 13:46:27', 10222, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Cobalt Cascade version 2+\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10984, '2013-10-02 13:46:44', 10223, 1, 1, 'Discussion about the babbling brook beta tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10985, '2013-10-02 13:46:44', 10223, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling%20brook%20beta%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling brook beta tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10986, '2013-10-02 13:46:44', 10223, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10987, '2013-10-02 13:47:16', 10224, 1, 1, 'Discussion about the babbling brook live tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10988, '2013-10-02 13:47:16', 10224, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling%20brook%20live%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling brook live tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(10989, '2013-10-02 13:47:16', 10224, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook beta\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10990, '2013-10-02 13:54:27', 10038, 4, 1, 'Click and hold the up button brings up a textbox on arrows', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10991, '2013-10-02 13:54:27', 10038, 4, 3, 'Provides a shortcut method for a user to enter a larger amount.\n\nsee http://stackoverflow.com/questions/4080497/how-can-i-listen-for-a-click-and-hold-in-jquery\n\nAlways display the max and min values - highlight them in red if there is an error.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10992, '2013-10-02 13:54:27', 10038, 4, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(10994, '2013-10-02 13:54:27', 10038, 4, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'arrows', NULL, NULL),
	(10995, '2013-10-02 13:54:27', 10038, 4, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade beta', NULL, NULL),
	(10996, '2013-10-07 09:25:26', 10225, 1, 1, 'Hello World', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10997, '2013-10-07 09:25:26', 10225, 1, 3, 'After three years and change, here I am. It\'s been hard and yet my passion is as strong as it was at the start. It is hard to hold a vision alone, especially one as broad and all encompassing as Babbling Brook. I need your help. \n\nThe best way to find out how things work is to play with them, but if you want a full overview then check out the about page.\n\nTell me what works, tell me what doesn\'t. Report bugs by clicking on the ladybird towards the top right. If there is a feature you really want me to implement then go to the feature requests stream - on the stream bar, below the logo.\n\nRuminate on the practical and philosophical implications of Babbling Brook in the babbling brook stream.\n\nTalk meta about Cobalt Cascade on the cobalt cascade stream.\n\nCheckout what I\'m working on in the tasks stream.\n\nAlternatively if you just want a natter then check out the chatter stream.\n\nGetting the hang of it? Want to talk about something else? Find more streams to subscribe to - click more and then \'edit streams\' on the stream bar. Can\'t find a stream you want, why not make your own stream - click on streams at the top of the page.\n\nCan you code? Make your own rhythms to sort the data - click on rhythms at the top of the page.\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10998, '2013-10-07 09:34:18', 10226, 1, 1, 'Tortoise or Hare?', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(10999, '2013-10-07 09:34:18', 10226, 1, 3, 'The system is currently running without optimization and compression to make bugs easier to solve.\n\nThis means that it is considerably slower than the final site will be. Once all the planned caching and compression modes have been implemented it will be faster. A back of the envelope calculation suggests about 5 to ten times quicker.\n\nIn the meantime, the suggestions box (the one with the ladybird in the top right) will show precached posts as soon as the base page loads. These are taken from the snippets stream. Feel free to post new snippets, or alternatively change your suggestions box stream in the settings page - link at the top of the page.\n\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11000, '2013-10-07 15:31:08', 10227, 1, 1, 'Meta conversation for the babbling brook stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11001, '2013-10-07 15:31:08', 10227, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/babbling%20brook/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/babbling brook/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11002, '2013-10-07 15:31:08', 10227, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/babbling%20brook/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/babbling brook/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11003, '2013-10-07 15:31:08', 10227, 1, 5, 'A place to discuss the Babbling Brook protocol and network.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11004, '2013-10-07 15:35:25', 10228, 1, 1, 'Meta conversation for the cobalt meta stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11005, '2013-10-07 15:35:25', 10228, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/cobalt%20meta/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/cobalt meta/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11006, '2013-10-07 15:35:25', 10228, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/cobalt%20meta/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/cobalt meta/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11007, '2013-10-07 15:35:25', 10228, 1, 5, 'A place to discuss the cobalt cascade website.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11015, '2013-10-08 06:53:03', 10231, 1, 1, 'Enable stream owners to create default rhythms', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11016, '2013-10-08 06:53:03', 10231, 1, 3, 'Add a section to the stream update page - update tab, list defaults with remove button. A textbox to add a new default and\na link to open up a search.\n\nDefaults are used when an unsubscribed user visits a stream and when a user subscribes to a stream.\n\nPublic views are controlled by the stream owners subscribes filters.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11017, '2013-10-08 06:53:03', 10231, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Database,Javascript,PHP', NULL, NULL),
	(11019, '2013-10-08 06:53:03', 10231, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Babbling Brook beta', NULL, NULL),
	(11020, '2013-10-08 08:35:09', 10041, 3, 1, 'Adapt the signup to direct towards the indigogo', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11021, '2013-10-08 08:35:09', 10041, 3, 3, 'Both modal and static signup pages should show this alternative.\n\nKeep the signup page, but place a notice above it. Can\'t do this until there is a kickstarter page to point to.\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11022, '2013-10-08 08:35:09', 10041, 3, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(11024, '2013-10-08 08:35:09', 10041, 3, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'kickstarter,signup', NULL, NULL),
	(11025, '2013-10-08 08:35:09', 10041, 3, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(11026, '2013-10-08 08:40:03', 10232, 1, 1, 'Add a new user config setting to change the default filters', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11027, '2013-10-08 08:40:03', 10232, 1, 3, 'The filters that are used on streams that are not subscribed to, or subscribed streams that do not have default filters.\n\nThe settings page needs a new option for a list of data. do this by storing the list as a json object in the value field.\ndecode and present the list to the user, with a remove option for each. Include a new textbox option, with a search for rhythms.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11028, '2013-10-08 08:40:03', 10232, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(11030, '2013-10-08 08:40:03', 10232, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Babbling Brook beta', NULL, NULL),
	(11032, '2013-10-08 15:49:45', 10234, 1, 1, 'Discussion about the testetse@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11033, '2013-10-08 15:49:45', 10234, 1, 3, NULL, 'http://cobaltcascade.localhost/testetse/profile', NULL, 'http://cobaltcascade.localhost/testetse/profile', NULL, NULL, NULL, NULL, NULL),
	(11034, '2013-10-08 15:50:26', 10235, 1, 1, 'Discussion about the testsetse@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11035, '2013-10-08 15:50:26', 10235, 1, 3, NULL, 'http://cobaltcascade.localhost/testsetse/profile', NULL, 'http://cobaltcascade.localhost/testsetse/profile', NULL, NULL, NULL, NULL, NULL),
	(11036, '2013-10-08 15:50:48', 10236, 1, 1, 'Discussion about the testsetseg@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11037, '2013-10-08 15:50:48', 10236, 1, 3, NULL, 'http://cobaltcascade.localhost/testsetseg/profile', NULL, 'http://cobaltcascade.localhost/testsetseg/profile', NULL, NULL, NULL, NULL, NULL),
	(11038, '2013-10-08 15:51:17', 10237, 1, 1, 'Discussion about the testsetsegg@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11039, '2013-10-08 15:51:17', 10237, 1, 3, NULL, 'http://cobaltcascade.localhost/testsetsegg/profile', NULL, 'http://cobaltcascade.localhost/testsetsegg/profile', NULL, NULL, NULL, NULL, NULL),
	(11040, '2013-10-08 15:51:39', 10238, 1, 1, 'Discussion about the testsetseggx@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11041, '2013-10-08 15:51:39', 10238, 1, 3, NULL, 'http://cobaltcascade.localhost/testsetseggx/profile', NULL, 'http://cobaltcascade.localhost/testsetseggx/profile', NULL, NULL, NULL, NULL, NULL),
	(11042, '2013-10-08 15:51:50', 10239, 1, 1, 'Discussion about the testsetseggxc@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11043, '2013-10-08 15:51:50', 10239, 1, 3, NULL, 'http://cobaltcascade.localhost/testsetseggxc/profile', NULL, 'http://cobaltcascade.localhost/testsetseggxc/profile', NULL, NULL, NULL, NULL, NULL),
	(11044, '2013-10-08 15:55:38', 10240, 1, 1, 'Discussion about the testest@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11045, '2013-10-08 15:55:38', 10240, 1, 3, NULL, 'http://cobaltcascade.localhost/testest/profile', NULL, 'http://cobaltcascade.localhost/testest/profile', NULL, NULL, NULL, NULL, NULL),
	(11046, '2013-10-08 15:56:53', 10241, 1, 1, 'Discussion about the tyydrtyry@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11047, '2013-10-08 15:56:53', 10241, 1, 3, NULL, 'http://cobaltcascade.localhost/tyydrtyry/profile', NULL, 'http://cobaltcascade.localhost/tyydrtyry/profile', NULL, NULL, NULL, NULL, NULL),
	(11048, '2013-10-11 08:36:15', 10242, 1, 1, 'Discussion about the test 123@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11049, '2013-10-11 08:36:15', 10242, 1, 3, NULL, 'http://cobaltcascade.localhost/test%20123/profile', NULL, 'http://cobaltcascade.localhost/test 123/profile', NULL, NULL, NULL, NULL, NULL),
	(11050, '2013-10-11 08:36:37', 10243, 1, 1, 'Discussion about the test 124@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11051, '2013-10-11 08:36:37', 10243, 1, 3, NULL, 'http://cobaltcascade.localhost/test%20124/profile', NULL, 'http://cobaltcascade.localhost/test 124/profile', NULL, NULL, NULL, NULL, NULL),
	(11052, '2013-10-11 08:37:39', 10244, 1, 1, 'Discussion about the test 125@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11053, '2013-10-11 08:37:39', 10244, 1, 3, NULL, 'http://cobaltcascade.localhost/test%20125/profile', NULL, 'http://cobaltcascade.localhost/test 125/profile', NULL, NULL, NULL, NULL, NULL),
	(11054, '2013-10-11 08:40:45', 10245, 1, 1, 'Discussion about the test 126@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11055, '2013-10-11 08:40:45', 10245, 1, 3, NULL, 'http://cobaltcascade.localhost/test%20126/profile', NULL, 'http://cobaltcascade.localhost/test 126/profile', NULL, NULL, NULL, NULL, NULL),
	(11056, '2013-10-11 08:42:00', 10246, 1, 1, 'Discussion about the test 128@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11057, '2013-10-11 08:42:00', 10246, 1, 3, NULL, 'http://cobaltcascade.localhost/test%20128/profile', NULL, 'http://cobaltcascade.localhost/test 128/profile', NULL, NULL, NULL, NULL, NULL),
	(11058, '2013-10-11 08:50:28', 10247, 1, 1, 'Discussion about the test 129@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11059, '2013-10-11 08:50:28', 10247, 1, 3, NULL, 'http://cobaltcascade.localhost/test%20129/profile', NULL, 'http://cobaltcascade.localhost/test 129/profile', NULL, NULL, NULL, NULL, NULL),
	(11060, '2013-10-11 08:57:08', 10248, 1, 1, 'Discussion about the test 324234@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11061, '2013-10-11 08:57:08', 10248, 1, 3, NULL, 'http://cobaltcascade.localhost/test%20324234/profile', NULL, 'http://cobaltcascade.localhost/test 324234/profile', NULL, NULL, NULL, NULL, NULL),
	(11071, '2013-10-11 09:11:40', 10252, 1, 1, 'Meta conversation for the test new stream url 1 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11072, '2013-10-11 09:11:40', 10252, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20new%20stream%20url%201/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test new stream url 1/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11073, '2013-10-11 09:11:40', 10252, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20new%20stream%20url%201/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test new stream url 1/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11074, '2013-10-11 09:11:40', 10252, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11087, '2013-10-11 09:37:43', 10256, 1, 1, 'Meta conversation for the test streamcv stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11088, '2013-10-11 09:37:43', 10256, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20streamcv/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test streamcv/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11089, '2013-10-11 09:37:43', 10256, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20streamcv/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test streamcv/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11090, '2013-10-11 09:37:43', 10256, 1, 5, 'A depricated stream for making test posts.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11103, '2013-10-11 10:02:43', 10261, 1, 1, 'Fix stream nav on public view', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11104, '2013-10-11 10:02:43', 10261, 1, 3, 'In small windows where the streams goes on to two lines it look ugly.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11105, '2013-10-11 10:02:43', 10261, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,PHP', NULL, NULL),
	(11107, '2013-10-11 10:02:43', 10261, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Babbling Brook beta', NULL, NULL),
	(11110, '2013-10-11 10:08:25', 10263, 1, 1, 'Make rhythm description and category selection update independently from the code', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11111, '2013-10-11 10:08:25', 10263, 1, 3, 'At present the description and category are only updated when the save button under the code is clicked.\nThey should update independently through ajax as soon as they are deselected.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11112, '2013-10-11 10:08:25', 10263, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript,PHP', NULL, NULL),
	(11114, '2013-10-11 10:08:25', 10263, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Babbling Brook beta', NULL, NULL),
	(11115, '2013-10-11 10:18:33', 10264, 1, 1, 'Highlight the private Posts link when new posts available.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11116, '2013-10-11 10:18:33', 10264, 1, 3, 'Requires a new protocol feature to fetch a count of undisplayed private posts.\nHighlight the new posts in the inbox.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11117, '2013-10-11 10:18:33', 10264, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(11119, '2013-10-11 10:18:33', 10264, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'private posts', NULL, NULL),
	(11120, '2013-10-11 10:18:33', 10264, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Babbling Brook beta', NULL, NULL),
	(11121, '2013-10-11 10:23:33', 10265, 1, 1, 'Add a new top level link used to display a list of all responses to a users post', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11122, '2013-10-11 10:23:33', 10265, 1, 3, 'This is dependent on the delta task.\n\nShows all child posts of an immediate parent.\nAlso includes a sidebar link to a list of all public posts made by the user.\nThe posts should be sortable through the use of delta rhythms.\n\nWhen this is done remove public posts from the list of sent items in the private section.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11123, '2013-10-11 10:23:33', 10265, 1, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript,PHP,Protocol,Store domain', NULL, NULL),
	(11125, '2013-10-11 10:23:33', 10265, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'delta,private posts', NULL, NULL),
	(11126, '2013-10-11 10:23:33', 10265, 1, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Babbling Brook beta', NULL, NULL),
	(11127, '2013-10-11 14:18:00', 10266, 1, 1, 'Discussion about the secudus alpha tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11128, '2013-10-11 14:18:00', 10266, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/secudus%20alpha%20tasks/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/secudus alpha tasks/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11129, '2013-10-11 14:18:00', 10266, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11130, '2013-10-15 06:49:06', 10225, 2, 1, 'Hello World', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11131, '2013-10-15 06:49:06', 10225, 2, 3, 'After three years and change, here I am. It\'s been hard and yet my passion is as strong as it was at the start. It is hard to hold a vision alone, especially one as broad and all encompassing as Babbling Brook. I need your help. \n\nThe best way to find out how things work is to play with them, but if you want a full overview then check out the about page.\n\nTell me what works, tell me what doesn\'t. Report bugs by clicking on the ladybird towards the top right. If there is a feature you really want me to implement then go to the feature requests stream - on the stream bar, below the logo.\n\nRuminate on the practical and philosophical implications of Babbling Brook in the babbling brook stream.\n\nTalk meta about Cobalt Cascade on the cobalt cascade stream.\n\nCheckout what I\'m working on in the tasks stream.\n\nAlternatively if you just want a natter then check out the chatter stream.\n\nGetting the hang of it? Want to talk about something else? Find more streams to subscribe to - click more and then \'edit streams\' on the stream bar. Can\'t find a stream you want, why not make your own stream - click on streams at the top of the page.\n\nCan you code? Make your own rhythms to sort the data - click on rhythms at the top of the page.\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11132, '2013-10-15 06:49:16', 10225, 3, 1, 'Hello World', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11133, '2013-10-15 06:49:16', 10225, 3, 3, 'Welcome to Cobalt Cascade and the Babbling Brook network.\n \nThis post provides a few pointers on where to start:\n\nCobalt Cascade is what is known as a link aggregation social networking site. Users post links to stuff, or they write something. Other users then vote, and this influences who sees which posts.\n\nPosts are submitted into different topics, called streams. The list of streams you are currently subscribed to is found just under the main logo at the top of the page. \n\nHead over to the chat stream to say hello to other users and talk about anything you want. This is a good place to ask for help if you are not sure what to do.\n\nFeedback is very welcome, please post it in the feedback stream.\n\nIf there is a feature you really want to see implemented then go to the feature requests stream \n\nCheckout what being worked on in the tasks stream.\n\nIs something broken? Report bugs by clicking on the ladybird towards the top right. You can then view the current status of the bug in the bugs stream. \n\nRuminate on the practical and philosophical implications of Babbling Brook in the babbling brook stream.\n\nTalk meta about Cobalt Cascade in the cobalt cascade stream.\n\nGetting the hang of it? Want to talk about something else? Find more streams to subscribe to - click more and then \'edit streams\' on the stream bar. Can\'t find a stream you want, why not make your own stream - click on streams at the top of the page.\n\nRhythms sort your data. They work behind the scenes to decide who you are connected to in the network and what you see on the page. You can select which â€˜sort rhythmâ€™ to use in a stream on the right hand side.\n\nKeep an eye on the suggestions box at the top of the page, new streams and rhythms will appear here for you to subscribe to.\n\nCan you code? Make your own rhythms to sort the data - click on rhythms at the top of the page. When you publish your rhythms they will populate though the network using your kindred rhythm.\n\nFor a full overview of site features, check out the about page.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11134, '2013-10-15 06:51:48', 10267, 1, 1, 'Meta conversation for the chat stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11135, '2013-10-15 06:51:48', 10267, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/chat/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/chat/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11136, '2013-10-15 06:51:48', 10267, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/chat/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/chat/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11137, '2013-10-15 06:51:48', 10267, 1, 5, 'Chat to other users', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11138, '2013-10-15 07:16:47', 10268, 1, 1, 'Meta conversation for the feedback stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11139, '2013-10-15 07:16:47', 10268, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/feedback/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/feedback/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11140, '2013-10-15 07:16:47', 10268, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/feedback/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/feedback/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11141, '2013-10-15 07:16:47', 10268, 1, 5, 'A stream to provide feedback about Cobalt Cascade', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11142, '2013-10-15 09:13:27', 10226, 2, 1, 'Tortoise or Hare?', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11143, '2013-10-15 09:13:27', 10226, 2, 3, 'The system is currently running without optimization and compression to make bugs easier to solve.\n\nThis means that it is considerably slower than the final site will be. Once all the planned caching and compression modes have been implemented it will be faster. A back of the envelope calculation suggests about 5 to 10 times quicker.\n\nIn the meantime, the suggestions box (the one with the ladybird in the top right) will show precached posts as soon as the base page loads. These are taken from the snippets stream. Feel free to post new snippets, or alternatively change your suggestions box stream in the settings page - link at the top of the page.\n\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11144, '2013-10-15 09:19:23', 10269, 1, 1, 'This is the suggestions box. Streams, rhythms and users you might be interested in are shown here', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11145, '2013-10-15 09:19:23', 10269, 1, 3, 'When a suggestion is made you can either accept it or decline.\n\nIf you accept a new stream it will be added to your stream subscriptions. \n\nSuggested stream sort rhythms will be added to the relevant stream.\n\nOther rhythms will replace the existing ones.\n\nAccepted users and rings will simply take you to their profile page.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11146, '2013-10-15 09:22:55', 10270, 1, 1, 'When there are no suggestions to display, then posts from the snippets stream are displayed', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11147, '2013-10-15 09:22:55', 10270, 1, 3, 'These posts are saved from your previous visits and should load very quickly, giving you something to read if you are a waiting for a complex rhythm to process your results.\n\nIf you like a snippet, then don\'t forget to take it (click the up arrow).\n\nYou can add snippets of your own for other users to see. Visit the snippets stream.\n\nYou can change which stream is used for snippets on the settings page.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11148, '2013-10-15 09:28:15', 10271, 1, 1, 'Taking posts is the heart of the Babbling Brook network...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11149, '2013-10-15 09:28:15', 10271, 1, 3, 'You take a post by clicking on the up and down arrows next to the post.\n\nEvery time you take a post you are creating a relationship with the user who created the post and the stream it is in.\n\nThis changes the posts that you see in the Babbling Brook network.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11150, '2013-10-15 09:32:15', 10272, 1, 1, 'Down take a post if you want to don\'t want to see content similar to it...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11151, '2013-10-15 09:32:15', 10272, 1, 3, 'When you down take a post you are indicating that you don\'t like it. It will weaken your relationship with posts user making it less likely that you will see posts by that user in the future.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11152, '2013-10-15 09:38:03', 10273, 1, 1, 'Your kindred are the users in the Babbling Brook network who you are closest to...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11153, '2013-10-15 09:38:03', 10273, 1, 3, 'Each time you take a post you strengthen or weaken your relationship with the user who made that post. This is done with your kindred rhythm, a piece of code that processes your takes.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11154, '2013-10-15 09:40:55', 10274, 1, 1, 'Your kindred rhythm can change many relationships from a single take that you have made...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11155, '2013-10-15 09:40:55', 10274, 1, 3, 'Your kindred rhythm  process all the takes you have made and changes the relationships you have with its users.\n\nIt doesn\'t have to stop there though. It can follow the trail through to other users who have also taken the post and change your relationship with those users. Or it can look up the closest kindred of the user who made the post and change your relationship with them.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11156, '2013-10-15 09:43:27', 10275, 1, 1, 'Taking a post can also change what other users see...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11157, '2013-10-15 09:43:27', 10275, 1, 3, 'Other users who have you in a kindred relationship might have rhythms that notice that you have taken a post and use that information to decide if it should be shown to the user or not.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11158, '2013-10-15 10:49:11', 10276, 1, 1, 'If something goes wrong, then click on the ladybird icon to report it...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11159, '2013-10-15 10:49:11', 10276, 1, 3, 'If the bug report fails to work, then try reloading the page and then click it again.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11160, '2013-10-15 10:49:43', 10277, 1, 1, 'Filter rhythms sort a streams posts into any order that you want', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11161, '2013-10-15 10:49:43', 10277, 1, 3, 'You can choose how to sort a stream by using the drop down selector in the right hand side bar', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11162, '2013-10-15 10:50:07', 10278, 1, 1, 'Change a streams subscribed filter rhythms on your stream subscriptions page...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11163, '2013-10-15 10:50:07', 10278, 1, 3, 'Go to http://cobaltcascade.net/user/streams and then select the \'details\' link on the stream you want to adapt. \nYou can now remove filters or choose new ones from the suggestion or search links.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11164, '2013-10-15 10:50:15', 10279, 1, 1, 'Suggestion rhythms suggest new features that you may be interested in...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11165, '2013-10-15 10:50:15', 10279, 1, 3, 'The suggestions appear here in the suggestions box.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11166, '2013-10-15 10:50:42', 10280, 1, 1, 'Ring rhythms can be assigned any task the ring administrators choose...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11167, '2013-10-15 10:50:42', 10280, 1, 3, 'They run on the computers of all members of that ring.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11168, '2013-10-15 10:50:55', 10281, 1, 1, 'Take rhythms decide who is allowed to take a post...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11169, '2013-10-15 10:50:55', 10281, 1, 3, 'This enables the maker of a post decide if a user can take it based on their relationship\nto the user.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11170, '2013-10-15 10:51:21', 10282, 1, 1, 'Do you have an idea for a feature? Submit it in the feature requests stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11171, '2013-10-15 10:51:21', 10282, 1, 3, 'http://cobaltcascade.net/sky/stream/feature+requests/latest/latest/latest/', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11172, '2013-10-15 10:51:34', 10283, 1, 1, 'Discuss the Cobalt Cascade website in \'cobalt meta\' stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11173, '2013-10-15 10:51:34', 10283, 1, 3, 'http://cobaltcascade.net/sky/stream/cobalt+meta/latest/latest/latest/', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11174, '2013-10-15 10:51:57', 10284, 1, 1, 'Discuss the Babbling Brook network in the \'babbling brook\' stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11175, '2013-10-15 10:51:57', 10284, 1, 3, 'http://cobaltcascade.net/sky/stream/babbling+brook/latest/latest/latest/', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11176, '2013-10-15 10:52:06', 10285, 1, 1, 'What is Sky working on. Keep tabs on him in the tasks stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11177, '2013-10-15 10:52:06', 10285, 1, 3, 'http://cobaltcascade.net/sky/stream/tasks/latest/latest/latest/', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11178, '2013-10-15 10:52:41', 10286, 1, 1, 'Can\'t find a stream for the content you want to post? Create a new one...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11179, '2013-10-15 10:52:41', 10286, 1, 3, 'Click on the Streams link at the top of the page and select create from the right hand sidebar.\n\nNo one else will be able to see the the stream until you publish it on the actions tab.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11180, '2013-10-15 10:53:47', 10287, 1, 1, 'You can create complex streams to create surveys or other forms of structured data...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11181, '2013-10-15 10:53:47', 10287, 1, 3, 'On a streams update page, on the \'Edit Fields\' tab, you can add as many fields as the stream requires.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11182, '2013-10-15 10:54:12', 10288, 1, 1, 'Moderation rings remove inappropriate content from a stream...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11183, '2013-10-15 10:54:12', 10288, 1, 3, 'This allows you decide what kind of content is inappropriate, be it spam, NSFW or adult in nature.\n\nYou can change your subscribed moderation rings on your stream subscriptions page.\n\nGo to http://cobaltcascade.net/user/streams and then select the \'details\' link on the stream you want to adapt. \nYou can now remove moderation rings or choose new ones from the suggestion or search links.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11184, '2013-10-15 10:55:13', 10289, 1, 1, 'If you are a member of a moderation ring then you can moderate a post by clicking on it\'s ring menu...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11185, '2013-10-15 10:55:13', 10289, 1, 3, 'As a ring member you can take a post in the name of the ring. \n\nWhen you click on the ring take menu a list of ring take options will appear such as \'spam\' or \'inappropriate\',\nselect all the take names that apply. To cancel your take, click it again.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11186, '2013-10-15 10:55:42', 10290, 1, 1, 'To join a ring, go to its profile page...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11187, '2013-10-15 10:55:42', 10290, 1, 3, 'If the ring is open to the public there will be a join link.\n\nSome rings are by application only. You will receive a private message from the ring to let you know if your membership request has been accepted.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11188, '2013-10-15 10:55:51', 10291, 1, 1, 'Click on the rings link at the top of the page to manage the rings you are a member of...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11189, '2013-10-15 10:55:51', 10291, 1, 3, 'Click on the \'members area link\'. From here you can choose to leave the ring.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11190, '2013-10-15 10:56:22', 10292, 1, 1, 'You can create your own rings by clicking on the Rings link at the top of the page...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11191, '2013-10-15 10:56:22', 10292, 1, 3, 'Click the \'Create a new ring\' link.\n\nIn future rings will be used for all aspects of grouping users together. For now they are mostly used for moderating streams.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11192, '2013-10-15 10:56:42', 10293, 1, 1, 'Create a hierarchy of moderation rings...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11193, '2013-10-15 10:56:42', 10293, 1, 3, 'A hierarchy of moderation rings can be used to create different levels of moderation. For example a spam ring can be open to public membership, but this might be gamed, so a second, invitation only, supper spam ring can manage the first ring, enabling it to override the general membership one for controversial posts.\n\nWhen creating the spam ring, select \'By another Ring\' in the membership dropdown.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11194, '2013-10-15 10:57:42', 10294, 1, 1, 'Can you code? Make your own rhythms...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11195, '2013-10-15 10:57:42', 10294, 1, 3, 'Click on the Rhythms link at the top of the page.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11196, '2013-10-15 12:05:44', 10295, 1, 1, 'Most posts can be taken multiple times - just keep clicking...', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11197, '2013-10-15 12:05:44', 10295, 1, 3, 'An increased take value represents a stronger connection to the content - or a stronger repulsion for high negative values.\n\nHover over the arrows to see the current take value.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11198, '2013-10-15 12:21:40', 10296, 1, 1, 'Discussion about the test 88@cobaltcascade.localhost user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11199, '2013-10-15 12:21:40', 10296, 1, 3, NULL, 'http://cobaltcascade.localhost/test%2088/profile', NULL, 'http://cobaltcascade.localhost/test 88/profile', NULL, NULL, NULL, NULL, NULL),
	(11200, '2013-10-15 12:23:16', 10297, 1, 1, 'Discussion about the test 88@cobaltcascade.localhost user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11201, '2013-10-15 12:23:16', 10297, 1, 3, NULL, 'http://cobaltcascade.localhost/test%2088/profile', NULL, 'http://cobaltcascade.localhost/test 88/profile', NULL, NULL, NULL, NULL, NULL),
	(11202, '2013-10-15 12:24:11', 10298, 1, 1, 'Discussion about the test 88@cobaltcascade.localhost user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11203, '2013-10-15 12:24:11', 10298, 1, 3, NULL, 'http://cobaltcascade.localhost/test%2088/profile', NULL, 'http://cobaltcascade.localhost/test 88/profile', NULL, NULL, NULL, NULL, NULL),
	(11204, '2013-10-15 12:24:34', 10299, 1, 1, 'Discussion about the test 88@cobaltcascade.localhost user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11205, '2013-10-15 12:24:34', 10299, 1, 3, NULL, 'http://cobaltcascade.localhost/test%2088/profile', NULL, 'http://cobaltcascade.localhost/test 88/profile', NULL, NULL, NULL, NULL, NULL),
	(11219, '2013-06-17 07:23:20', 10021, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11220, '2013-06-17 07:36:14', 10022, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11221, '2013-06-17 07:55:34', 10024, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11222, '2013-06-18 07:41:12', 10028, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11223, '2013-06-18 08:51:58', 10032, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11224, '2013-06-18 08:55:33', 10033, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11225, '2013-06-18 09:05:50', 10036, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11226, '2013-06-18 09:07:53', 10037, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11227, '2013-06-18 09:09:04', 10038, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11228, '2013-06-18 09:17:23', 10040, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11229, '2013-06-18 09:18:49', 10041, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11230, '2013-06-18 09:20:43', 10042, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11231, '2013-06-18 09:27:20', 10043, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11232, '2013-06-18 09:27:58', 10044, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11233, '2013-06-18 09:35:34', 10047, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11234, '2013-06-18 09:37:11', 10048, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11235, '2013-06-18 09:38:17', 10049, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11236, '2013-06-18 10:19:32', 10052, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11237, '2013-06-18 14:55:00', 10059, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11238, '2013-06-19 04:56:06', 10060, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11239, '2013-06-19 05:41:07', 10063, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11240, '2013-06-19 06:14:14', 10064, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11241, '2013-06-19 09:02:41', 10065, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11242, '2013-06-21 15:37:31', 10069, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11244, '2013-07-03 10:55:09', 10082, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11245, '2013-07-03 10:56:32', 10083, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11246, '2013-07-03 10:59:05', 10084, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11247, '2013-07-03 11:43:06', 10086, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11248, '2013-07-04 15:38:12', 10087, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11249, '2013-07-04 16:35:38', 10088, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11250, '2013-07-05 06:46:43', 10090, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11251, '2013-07-05 08:54:24', 10091, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11252, '2013-07-05 09:39:55', 10092, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11253, '2013-07-11 08:26:45', 10097, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11254, '2013-07-24 08:44:16', 10109, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11255, '2013-07-24 08:49:30', 10110, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11256, '2013-08-01 08:39:43', 10130, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11257, '2013-08-02 10:30:34', 10144, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11258, '2013-08-02 11:50:36', 10145, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11259, '2013-10-08 06:53:03', 10231, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11260, '2013-10-08 08:40:03', 10232, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11261, '2013-10-11 10:02:43', 10261, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11262, '2013-10-11 10:08:25', 10263, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11263, '2013-10-11 10:18:33', 10264, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11264, '2013-10-11 10:23:33', 10265, 1, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11266, '2013-06-17 07:50:17', 10021, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11267, '2013-06-18 07:43:26', 10022, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11268, '2013-06-21 14:46:28', 10028, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11269, '2013-07-24 06:54:53', 10032, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11270, '2013-06-18 08:56:26', 10033, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11271, '2013-06-18 16:55:55', 10036, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11272, '2013-06-18 09:10:40', 10038, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11273, '2013-08-05 15:12:33', 10041, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11274, '2013-06-18 14:58:46', 10059, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11275, '2013-06-19 05:23:47', 10060, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11276, '2013-06-19 05:42:44', 10063, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11277, '2013-06-21 15:24:57', 10064, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11278, '2013-06-19 09:17:31', 10065, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11279, '2013-06-21 15:44:15', 10069, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11280, '2013-07-24 09:11:01', 10082, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11281, '2013-07-03 11:43:33', 10086, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11282, '2013-07-05 06:13:10', 10088, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11283, '2013-07-05 09:47:11', 10092, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11284, '2013-07-24 08:51:33', 10110, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11285, '2013-08-05 10:18:04', 10145, 2, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11286, '2013-06-18 09:43:38', 10022, 3, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11287, '2013-06-21 15:12:17', 10028, 3, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11288, '2013-07-23 09:27:42', 10033, 3, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11289, '2013-06-18 09:15:08', 10038, 3, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11290, '2013-10-08 08:35:09', 10041, 3, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11291, '2013-06-21 15:29:31', 10064, 3, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11292, '2013-07-05 08:30:07', 10065, 3, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11293, '2013-06-21 16:03:11', 10069, 3, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11294, '2013-07-24 09:11:24', 10082, 3, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11295, '2013-07-03 10:34:05', 10022, 4, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11296, '2013-06-21 16:05:49', 10028, 4, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11297, '2013-10-02 13:54:27', 10038, 4, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11298, '2013-07-24 09:11:39', 10082, 4, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11299, '2013-06-26 10:38:53', 10028, 5, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11300, '2013-07-24 09:45:55', 10082, 5, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11301, '2013-06-27 06:34:19', 10028, 6, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11302, '2013-07-24 09:51:37', 10082, 6, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11303, '2013-06-27 06:34:57', 10028, 7, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11304, '2013-07-24 10:16:58', 10082, 7, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11305, '2013-06-17 07:23:20', 10021, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11306, '2013-06-17 07:36:14', 10022, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11307, '2013-06-17 07:55:34', 10024, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11308, '2013-06-18 07:41:12', 10028, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11309, '2013-06-18 08:51:58', 10032, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11310, '2013-06-18 08:55:33', 10033, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11311, '2013-06-18 09:05:50', 10036, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11312, '2013-06-18 09:07:53', 10037, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11313, '2013-06-18 09:09:04', 10038, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11314, '2013-06-18 09:17:23', 10040, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11315, '2013-06-18 09:18:49', 10041, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11316, '2013-06-18 09:20:43', 10042, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11317, '2013-06-18 09:27:20', 10043, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11318, '2013-06-18 09:27:58', 10044, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11319, '2013-06-18 09:35:34', 10047, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11320, '2013-06-18 09:37:11', 10048, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11321, '2013-06-18 09:38:17', 10049, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11322, '2013-06-18 10:19:32', 10052, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11323, '2013-06-18 14:55:00', 10059, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11324, '2013-06-19 04:56:06', 10060, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11325, '2013-06-19 05:41:07', 10063, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11326, '2013-06-19 06:14:14', 10064, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11327, '2013-06-19 09:02:41', 10065, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11328, '2013-06-21 15:37:31', 10069, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11330, '2013-07-03 10:55:09', 10082, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11331, '2013-07-03 10:56:32', 10083, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11332, '2013-07-03 10:59:05', 10084, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11333, '2013-07-03 11:43:06', 10086, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11334, '2013-07-04 15:38:12', 10087, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11335, '2013-07-04 16:35:38', 10088, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11336, '2013-07-05 06:46:43', 10090, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11337, '2013-07-05 08:54:24', 10091, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11338, '2013-07-05 09:39:55', 10092, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11339, '2013-07-11 08:26:45', 10097, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11340, '2013-07-24 08:44:16', 10109, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11341, '2013-07-24 08:49:30', 10110, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11342, '2013-08-01 08:39:43', 10130, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11343, '2013-08-02 10:30:34', 10144, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11344, '2013-08-02 11:50:36', 10145, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11345, '2013-10-08 06:53:03', 10231, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11346, '2013-10-08 08:40:03', 10232, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11347, '2013-10-11 10:02:43', 10261, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11348, '2013-10-11 10:08:25', 10263, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11349, '2013-10-11 10:18:33', 10264, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11350, '2013-10-11 10:23:33', 10265, 1, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11352, '2013-06-17 07:50:17', 10021, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11353, '2013-06-18 07:43:26', 10022, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11354, '2013-06-21 14:46:28', 10028, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11355, '2013-07-24 06:54:53', 10032, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11356, '2013-06-18 08:56:26', 10033, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11357, '2013-06-18 16:55:55', 10036, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11358, '2013-06-18 09:10:40', 10038, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11359, '2013-08-05 15:12:33', 10041, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11360, '2013-06-18 14:58:46', 10059, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11361, '2013-06-19 05:23:47', 10060, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11362, '2013-06-19 05:42:44', 10063, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11363, '2013-06-21 15:24:57', 10064, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11364, '2013-06-19 09:17:31', 10065, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11365, '2013-06-21 15:44:15', 10069, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11366, '2013-07-24 09:11:01', 10082, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11367, '2013-07-03 11:43:33', 10086, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11368, '2013-07-05 06:13:10', 10088, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11369, '2013-07-05 09:47:11', 10092, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11370, '2013-07-24 08:51:33', 10110, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11371, '2013-08-05 10:18:04', 10145, 2, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11372, '2013-06-18 09:43:38', 10022, 3, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11373, '2013-06-21 15:12:17', 10028, 3, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11374, '2013-07-23 09:27:42', 10033, 3, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11375, '2013-06-18 09:15:08', 10038, 3, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11376, '2013-10-08 08:35:09', 10041, 3, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11377, '2013-06-21 15:29:31', 10064, 3, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11378, '2013-07-05 08:30:07', 10065, 3, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11379, '2013-06-21 16:03:11', 10069, 3, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11380, '2013-07-24 09:11:24', 10082, 3, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11381, '2013-07-03 10:34:05', 10022, 4, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11382, '2013-06-21 16:05:49', 10028, 4, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11383, '2013-10-02 13:54:27', 10038, 4, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11384, '2013-07-24 09:11:39', 10082, 4, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11385, '2013-06-26 10:38:53', 10028, 5, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11386, '2013-07-24 09:45:55', 10082, 5, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11387, '2013-06-27 06:34:19', 10028, 6, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11388, '2013-07-24 09:51:37', 10082, 6, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11389, '2013-06-27 06:34:57', 10028, 7, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11390, '2013-07-24 10:16:58', 10082, 7, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11391, '2013-10-18 11:26:41', 10041, 4, 1, 'Adapt the signup to direct towards the indigogo', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11392, '2013-10-18 11:26:41', 10041, 4, 3, 'Both modal and static signup pages should show this alternative.\n\nKeep the signup page, but place a notice above it. Can\'t do this until there is a kickstarter page to point to.\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11393, '2013-10-18 11:26:41', 10041, 4, 4, NULL, NULL, NULL, NULL, NULL, NULL, 'Client domain,Javascript', NULL, NULL),
	(11394, '2013-10-18 11:26:41', 10041, 4, 6, NULL, NULL, NULL, NULL, NULL, NULL, 'kickstarter,signup', NULL, NULL),
	(11395, '2013-10-18 11:26:41', 10041, 4, 7, NULL, NULL, NULL, NULL, NULL, NULL, 'Before Cobalt Cascade alpha', NULL, NULL),
	(11396, '2013-10-18 11:26:41', 10041, 4, 8, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11397, '2013-10-18 11:26:41', 10041, 4, 9, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11398, '2013-10-20 08:09:53', 10305, 1, 1, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11399, '2013-10-20 08:10:01', 10306, 1, 1, 'test2', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11400, '2013-10-20 08:10:06', 10307, 1, 1, 'test 3', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11437, '2013-10-24 10:34:19', 10328, 1, 1, 'Meta conversation for the test everything stream stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11438, '2013-10-24 10:34:19', 10328, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%20everything%20stream/0/0/1', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test everything stream/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(11439, '2013-10-24 10:34:19', 10328, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%20everything%20stream/0/0/1', NULL, 'http://cobaltcascade.localhost/test/stream/view/test everything stream/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(11440, '2013-10-24 10:34:19', 10328, 1, 5, 'A test stream containing all types of field and value', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11454, '2013-10-29 10:27:40', 10341, 1, 1, 'a private composed message', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11455, '2013-10-29 10:28:05', 10342, 1, 1, 'another private composed message', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11457, '2013-10-29 14:53:21', 10344, 1, 1, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11458, '2013-10-29 14:53:59', 10345, 1, 1, 'test2', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11459, '2013-10-29 14:54:38', 10346, 1, 1, 'test 34', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11460, '2013-10-29 14:54:56', 10347, 1, 1, 'test 34', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11469, '2013-11-05 15:10:06', 10352, 1, 1, 'Discussion about the babbling brook alpha tasks dupe Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11470, '2013-11-05 15:10:06', 10352, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling%20brook%20alpha%20tasks%20dupe/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling brook alpha tasks dupe/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11471, '2013-11-05 15:10:06', 10352, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11472, '2013-11-05 15:10:38', 10353, 1, 1, 'Discussion about the babbling brook alpha tasks Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11473, '2013-11-05 15:10:38', 10353, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling%20brook%20alpha%20tasks/0/0/1', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling brook alpha tasks/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(11474, '2013-11-05 15:10:38', 10353, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11637, '2013-11-08 07:24:55', 10434, 1, 1, 'ddddddg fd g dfgffj', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11638, '2013-11-08 07:24:55', 10434, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11639, '2013-11-08 08:27:01', 10435, 1, 1, 'Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. Making a long comment. ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11640, '2013-11-08 08:53:55', 10436, 1, 1, 'Making a really long comment post that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on... that just goes on and on an on.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11641, '2013-11-08 08:58:33', 10437, 1, 1, 'a short comment', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11642, '2013-11-08 08:58:46', 10438, 1, 1, 'A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment.A long comment. ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11643, '2013-11-12 14:11:21', 10439, 1, 1, 'Meta conversation for the babbling brook stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11644, '2013-11-12 14:11:21', 10439, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/babbling%20brook/0/0/1', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/babbling brook/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(11645, '2013-11-12 14:11:21', 10439, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/babbling%20brook/0/0/1', NULL, 'http://cobaltcascade.localhost/sky/stream/view/babbling brook/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(11646, '2013-11-12 14:11:21', 10439, 1, 5, 'A place to discuss the Babbling Brook protocol and network.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11647, '2013-11-12 15:28:50', 10440, 1, 1, 'Discussion about the babbling brook alpha taskss Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11648, '2013-11-12 15:28:50', 10440, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling%20brook%20alpha%20taskss/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/babbling brook alpha taskss/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11649, '2013-11-12 15:28:50', 10440, 1, 4, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\r\n', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11815, '2013-06-18 07:41:12', 10231, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, '', NULL, NULL),
	(11816, '2013-06-18 07:41:12', 10232, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11817, '2013-06-18 07:41:12', 10261, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11818, '2013-06-18 07:41:12', 10262, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11819, '2013-06-18 07:41:12', 10263, 1, 6, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11847, '2014-04-11 15:01:35', 10464, 1, 1, 'Meta conversation for the kittens stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11848, '2014-04-11 15:01:35', 10464, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11849, '2014-04-11 15:01:35', 10464, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11850, '2014-04-11 15:01:35', 10464, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11851, '2014-04-11 15:02:01', 10465, 1, 1, 'Meta conversation for the kittens stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11852, '2014-04-11 15:02:01', 10465, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11853, '2014-04-11 15:02:01', 10465, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11854, '2014-04-11 15:02:01', 10465, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11855, '2014-04-11 15:04:42', 10466, 1, 1, 'Meta conversation for the kittens stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11856, '2014-04-11 15:04:42', 10466, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11857, '2014-04-11 15:04:42', 10466, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11858, '2014-04-11 15:04:42', 10466, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11859, '2014-04-11 15:05:15', 10467, 1, 1, 'Meta conversation for the kittens3 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11860, '2014-04-11 15:05:15', 10467, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens3/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens3/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11861, '2014-04-11 15:05:15', 10467, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens3/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens3/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11862, '2014-04-11 15:05:15', 10467, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11863, '2014-04-11 15:07:05', 10468, 1, 1, 'Meta conversation for the kittens4 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11864, '2014-04-11 15:07:05', 10468, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens4/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens4/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11865, '2014-04-11 15:07:05', 10468, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens4/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens4/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11866, '2014-04-11 15:07:05', 10468, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11867, '2014-04-11 15:07:24', 10469, 1, 1, 'Meta conversation for the kittens5 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11868, '2014-04-11 15:07:24', 10469, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens5/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens5/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11869, '2014-04-11 15:07:24', 10469, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens5/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens5/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11870, '2014-04-11 15:07:24', 10469, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11871, '2014-04-11 15:08:29', 10470, 1, 1, 'Meta conversation for the kittens6 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11872, '2014-04-11 15:08:29', 10470, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens6/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens6/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11873, '2014-04-11 15:08:29', 10470, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens6/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens6/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11874, '2014-04-11 15:08:29', 10470, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11875, '2014-04-11 15:09:17', 10471, 1, 1, 'Meta conversation for the kittens8 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11876, '2014-04-11 15:09:17', 10471, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens8/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens8/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11877, '2014-04-11 15:09:17', 10471, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens8/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens8/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11878, '2014-04-11 15:09:17', 10471, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11879, '2014-04-11 15:10:06', 10472, 1, 1, 'Meta conversation for the kittens9 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11880, '2014-04-11 15:10:06', 10472, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens9/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens9/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11881, '2014-04-11 15:10:06', 10472, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens9/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens9/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11882, '2014-04-11 15:10:06', 10472, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11883, '2014-04-11 15:11:22', 10473, 1, 1, 'Meta conversation for the kittens22 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11884, '2014-04-11 15:11:22', 10473, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens22/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens22/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11885, '2014-04-11 15:11:22', 10473, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens22/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens22/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11886, '2014-04-11 15:11:22', 10473, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11887, '2014-04-11 15:19:52', 10474, 1, 1, 'Meta conversation for the kittens23 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11888, '2014-04-11 15:19:52', 10474, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens23/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens23/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11889, '2014-04-11 15:19:52', 10474, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens23/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens23/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11890, '2014-04-11 15:19:52', 10474, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11899, '2014-04-11 16:37:52', 10477, 1, 1, 'Meta conversation for the kittens100 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11900, '2014-04-11 16:37:52', 10477, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens100/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens100/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11901, '2014-04-11 16:37:52', 10477, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens100/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens100/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11902, '2014-04-11 16:37:52', 10477, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11903, '2014-04-11 16:38:23', 10478, 1, 1, 'Meta conversation for the kittens100 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11904, '2014-04-11 16:38:23', 10478, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens100/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens100/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11905, '2014-04-11 16:38:23', 10478, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens100/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens100/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11906, '2014-04-11 16:38:23', 10478, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11907, '2014-04-11 17:08:19', 10479, 1, 1, 'Meta conversation for the kittens100 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11908, '2014-04-11 17:08:19', 10479, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens100/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens100/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11909, '2014-04-11 17:08:19', 10479, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens100/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens100/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11910, '2014-04-11 17:08:19', 10479, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11915, '2014-04-11 17:17:36', 10481, 1, 1, 'Meta conversation for the kittens stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11916, '2014-04-11 17:17:36', 10481, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11917, '2014-04-11 17:17:36', 10481, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(11918, '2014-04-11 17:17:36', 10481, 1, 5, 'test kitten thumbnails', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(11919, '2014-04-29 11:14:19', 10482, 1, 1, NULL, 'http://imgur.com/gallery/XrGmot2 ', NULL, 'Cute ocelot', NULL, NULL, NULL, NULL, NULL),
	(11920, '2014-04-29 14:48:07', 10483, 1, 1, NULL, 'http://imgur.com/gallery/O2WhkzI', NULL, 'test', NULL, NULL, NULL, NULL, NULL),
	(11941, '2014-05-01 11:07:37', 10504, 1, 1, NULL, 'http://imgur.com/gallery/k5oAaPG', 'http://i.imgur.com/k5oAaPG.jpg', 'teste', NULL, NULL, NULL, NULL, NULL),
	(11943, '2014-05-01 12:35:27', 10506, 1, 1, NULL, 'http://imgur.com/gallery/dQpr2', 'http://i.imgur.com/dQpr2.jpg', 'handy', NULL, NULL, NULL, NULL, NULL),
	(11945, '2014-05-01 12:36:15', 10508, 1, 1, NULL, 'http://imgur.com/gallery/Bj0vEtB', 'http://i.imgur.com/Bj0vEtB.jpg', 'sleepy again', NULL, NULL, NULL, NULL, NULL),
	(11948, '2014-05-01 14:42:03', 10511, 1, 1, NULL, 'http://imgur.com/gallery/upAoM', 'http://i.imgur.com/upAoM.jpg', 'cutty pie', NULL, NULL, NULL, NULL, NULL),
	(11951, '2014-05-02 14:57:57', 10514, 1, 1, NULL, 'http://imgur.com/gallery/upAoM', '//i.imgur.com/upAoM.jpg', 'cutie pie 2', NULL, NULL, NULL, NULL, NULL),
	(12015, '2014-05-16 10:58:39', 10548, 1, 1, 'Meta conversation for the beautiful stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12016, '2014-05-16 10:58:39', 10548, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/beautiful/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/beautiful/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12017, '2014-05-16 10:58:39', 10548, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/beautiful/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/beautiful/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12018, '2014-05-16 10:58:39', 10548, 1, 5, 'Pictures of beautiful things', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12019, '2014-05-16 11:01:49', 10549, 1, 1, 'Discussion about the beautiful tutorial Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12020, '2014-05-16 11:01:49', 10549, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/beautiful%20tutorial/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/beautiful tutorial/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12021, '2014-05-16 11:01:49', 10549, 1, 4, 'Selects specific posts for the beautiful photos tutorial.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12022, '2014-05-16 12:57:43', 10550, 1, 1, NULL, 'http://imgur.com/cfWakZ2', 'http://i.imgur.com/cfWakZ2.jpg', 'MT Baldy', NULL, NULL, NULL, NULL, NULL),
	(12023, '2014-05-16 12:57:43', 10550, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12024, '2014-05-16 13:33:26', 10551, 1, 1, NULL, 'https://i.imgur.com/NiwPMOH.jpg', 'https://i.imgur.com/NiwPMOH.jpg', 'Volcano', NULL, NULL, NULL, NULL, NULL),
	(12025, '2014-05-16 13:33:26', 10551, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12026, '2014-05-16 13:33:42', 10552, 1, 1, NULL, 'http://imgur.com/hP3FJE2', 'http://i.imgur.com/hP3FJE2.jpg', 'Rock', NULL, NULL, NULL, NULL, NULL),
	(12027, '2014-05-16 13:33:42', 10552, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12028, '2014-05-16 13:35:22', 10553, 1, 1, NULL, 'https://imgur.com/ByLxDVi', 'http://i.imgur.com/ByLxDVi.jpg', 'Boring road', NULL, NULL, NULL, NULL, NULL),
	(12029, '2014-05-16 13:35:22', 10553, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12030, '2014-05-19 12:56:52', 10554, 1, 1, NULL, 'http://i.imgur.com/H6ozCth.jpg', 'http://i.imgur.com/H6ozCth.jpg', 'Sunset', NULL, NULL, NULL, NULL, NULL),
	(12031, '2014-05-19 12:56:52', 10554, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12032, '2014-05-19 12:58:12', 10555, 1, 1, NULL, 'http://imgur.com/FPEdb1v', 'http://i.imgur.com/FPEdb1v.jpg', 'Scottish River', NULL, NULL, NULL, NULL, NULL),
	(12033, '2014-05-19 12:58:12', 10555, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12034, '2014-05-19 12:59:58', 10556, 1, 1, NULL, 'http://i.imgur.com/Cfv2sgz.jpg', 'http://i.imgur.com/Cfv2sgz.jpg', 'The wheel of time', NULL, NULL, NULL, NULL, NULL),
	(12035, '2014-05-19 12:59:58', 10556, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12036, '2014-05-19 13:00:41', 10557, 1, 1, NULL, 'http://i.imgur.com/gfB5tF9.jpg', 'http://i.imgur.com/gfB5tF9.jpg', 'Invisible stream', NULL, NULL, NULL, NULL, NULL),
	(12037, '2014-05-19 13:00:41', 10557, 1, 3, '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12038, '2014-05-19 14:33:45', 10558, 1, 1, 'I think it\'s broken.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12039, '2014-05-19 14:36:14', 10559, 1, 1, '"The Wheel of Time turns, and Ages come and pass, leaving memories that become legend. Legend fades to myth, and even myth is long forgotten when the Age that gave it birth comes again. In one Age, called the Third Age by some, an Age yet to come, an Age long past, a wind rose in the Mountains of Mist. The wind was not the beginning. There are neither beginnings nor endings to the turning of the Wheel of Time. But it was a beginning."', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12040, '2014-05-19 14:37:04', 10560, 1, 1, 'Why has it got a piece of wood sticking out of it?', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12045, '2014-05-20 10:13:29', 10562, 1, 1, 'Meta conversation for the tutorial introductions stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12046, '2014-05-20 10:13:29', 10562, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/tutorial%20introductions/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/tutorial introductions/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12047, '2014-05-20 10:13:29', 10562, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/tutorial%20introductions/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/tutorial introductions/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12048, '2014-05-20 10:13:29', 10562, 1, 5, 'Say hello', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12049, '2014-05-20 10:30:21', 10563, 1, 1, 'Meta conversation for the amazing places stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12050, '2014-05-20 10:30:21', 10563, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/amazing%20places/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/amazing places/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12051, '2014-05-20 10:30:21', 10563, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/amazing%20places/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/amazing places/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12052, '2014-05-20 10:30:21', 10563, 1, 5, 'Some of us are touched by the simple and mundane, others by the monumental. Whatever tickles your fancy, write a few words about the most memorable pace that you have been.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12067, '2014-06-20 13:23:09', 10571, 1, 1, 'Meta conversation for the favourite places stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12068, '2014-06-20 13:23:09', 10571, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/favourite%20places/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/favourite places/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12069, '2014-06-20 13:23:09', 10571, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/favourite%20places/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/favourite places/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12070, '2014-06-20 13:23:09', 10571, 1, 5, 'Tell us about the places that inspire you.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12071, '2014-06-20 13:31:54', 10572, 1, 1, 'Meta conversation for the ugly stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12072, '2014-06-20 13:31:54', 10572, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/ugly/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/ugly/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12073, '2014-06-20 13:31:54', 10572, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/ugly/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/ugly/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12074, '2014-06-20 13:31:54', 10572, 1, 5, 'Pictures of ugly things', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12077, '2014-06-20 13:52:47', 10574, 1, 1, 'Meta conversation for the testests stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12078, '2014-06-20 13:52:47', 10574, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testests/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testests/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12079, '2014-06-20 13:52:47', 10574, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testests/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testests/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12080, '2014-06-20 13:52:47', 10574, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12081, '2014-06-20 13:54:05', 10575, 1, 1, 'Meta conversation for the testtestttt stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12082, '2014-06-20 13:54:05', 10575, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testtestttt/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testtestttt/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12083, '2014-06-20 13:54:05', 10575, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testtestttt/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testtestttt/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12084, '2014-06-20 13:54:05', 10575, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12085, '2014-06-20 13:56:13', 10576, 1, 1, 'Meta conversation for the testest stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12086, '2014-06-20 13:56:13', 10576, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12087, '2014-06-20 13:56:13', 10576, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12088, '2014-06-20 13:56:13', 10576, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12089, '2014-06-20 13:56:36', 10577, 1, 1, 'Meta conversation for the testtestest stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12090, '2014-06-20 13:56:36', 10577, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testtestest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testtestest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12091, '2014-06-20 13:56:36', 10577, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testtestest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testtestest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12092, '2014-06-20 13:56:36', 10577, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12093, '2014-06-20 13:57:43', 10578, 1, 1, 'Meta conversation for the testestest stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12094, '2014-06-20 13:57:43', 10578, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12095, '2014-06-20 13:57:43', 10578, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12096, '2014-06-20 13:57:43', 10578, 1, 5, 'testes', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12097, '2014-06-20 13:57:55', 10579, 1, 1, 'Meta conversation for the testsete stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12098, '2014-06-20 13:57:55', 10579, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testsete/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testsete/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12099, '2014-06-20 13:57:55', 10579, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testsete/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testsete/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12100, '2014-06-20 13:57:55', 10579, 1, 5, 'stest', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12101, '2014-06-20 14:04:28', 10580, 1, 1, 'Meta conversation for the testestestsetset stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12102, '2014-06-20 14:04:28', 10580, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestestsetset/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestestsetset/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12103, '2014-06-20 14:04:28', 10580, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestestsetset/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestestsetset/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12104, '2014-06-20 14:04:28', 10580, 1, 5, 'tes', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12105, '2014-06-20 14:07:27', 10581, 1, 1, 'Meta conversation for the testesttestes stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12106, '2014-06-20 14:07:27', 10581, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testesttestes/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testesttestes/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12107, '2014-06-20 14:07:27', 10581, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testesttestes/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testesttestes/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12108, '2014-06-20 14:07:27', 10581, 1, 5, 'testt', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12109, '2014-06-20 14:07:53', 10582, 1, 1, 'Meta conversation for the testestsetesestset stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12110, '2014-06-20 14:07:53', 10582, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestsetesestset/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestsetesestset/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12111, '2014-06-20 14:07:53', 10582, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestsetesestset/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestsetesestset/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12112, '2014-06-20 14:07:53', 10582, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12113, '2014-06-20 14:08:12', 10583, 1, 1, 'Meta conversation for the testsetsetestsets stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12114, '2014-06-20 14:08:12', 10583, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testsetsetestsets/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testsetsetestsets/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12115, '2014-06-20 14:08:12', 10583, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testsetsetestsets/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testsetsetestsets/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12116, '2014-06-20 14:08:12', 10583, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12117, '2014-06-20 14:08:35', 10584, 1, 1, 'Meta conversation for the testesttttttt stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12118, '2014-06-20 14:08:35', 10584, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testesttttttt/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testesttttttt/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12119, '2014-06-20 14:08:35', 10584, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testesttttttt/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testesttttttt/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12120, '2014-06-20 14:08:35', 10584, 1, 5, 'tsetestset', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12121, '2014-06-20 14:12:07', 10585, 1, 1, 'Meta conversation for the testtest stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12122, '2014-06-20 14:12:07', 10585, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testtest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testtest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12123, '2014-06-20 14:12:07', 10585, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testtest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testtest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12124, '2014-06-20 14:12:07', 10585, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12125, '2014-06-20 14:22:50', 10586, 1, 1, 'Meta conversation for the testestestse stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12126, '2014-06-20 14:22:50', 10586, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestestse/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestestse/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12127, '2014-06-20 14:22:50', 10586, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestestse/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestestse/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12128, '2014-06-20 14:22:50', 10586, 1, 5, 'tes', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12129, '2014-06-20 14:23:36', 10587, 1, 1, 'Meta conversation for the testsetsetestes stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12130, '2014-06-20 14:23:36', 10587, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testsetsetestes/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testsetsetestes/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12131, '2014-06-20 14:23:36', 10587, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testsetsetestes/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testsetsetestes/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12132, '2014-06-20 14:23:36', 10587, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12133, '2014-06-20 14:24:21', 10588, 1, 1, 'Meta conversation for the testestsetsets stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12134, '2014-06-20 14:24:21', 10588, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestsetsets/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testestsetsets/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12135, '2014-06-20 14:24:21', 10588, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestsetsets/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testestsetsets/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12136, '2014-06-20 14:24:21', 10588, 1, 5, 'tset', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12208, '2014-06-25 10:10:03', 10644, 1, 1, 'Discussion about the random Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12209, '2014-06-25 10:10:03', 10644, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/random/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/random/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12210, '2014-06-25 10:10:03', 10644, 1, 4, 'Displays posts in a random order', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12211, '2014-06-25 13:36:29', 10645, 1, 1, 'Discussion about the test del Rhythm', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12212, '2014-06-25 13:36:29', 10645, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/test%20del/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/rhythm/view/test del/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12213, '2014-06-25 13:36:30', 10645, 1, 4, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12214, '2014-07-01 06:13:58', 10646, 1, 1, 'Meta conversation for the ace stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12215, '2014-07-01 06:13:58', 10646, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/ace/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/ace/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12216, '2014-07-01 06:13:58', 10646, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/ace/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/ace/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12217, '2014-07-01 06:13:58', 10646, 1, 5, 'This person is ace.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12218, '2014-07-01 06:58:11', 10647, 1, 1, 'Meta conversation for the spammer stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12219, '2014-07-01 06:58:11', 10647, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/spammer/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/spammer/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12220, '2014-07-01 06:58:11', 10647, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/spammer/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/spammer/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12221, '2014-07-01 06:58:11', 10647, 1, 5, 'This user posts inappropriate content.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12224, '2014-07-03 13:45:31', 10650, 1, 1, NULL, 'http://cobaltcascade.localhost/testtut1/profile', NULL, 'cobaltcascade.localhost/testtut1', NULL, NULL, NULL, NULL, NULL),
	(12229, '2014-07-03 14:44:31', 10652, 1, 1, 'Meta conversation for the noob stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12230, '2014-07-03 14:44:32', 10652, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/noob/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/noob/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12231, '2014-07-03 14:44:32', 10652, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/noob/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/noob/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12232, '2014-07-03 14:44:32', 10652, 1, 5, 'you know it.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12235, '2014-07-03 16:49:29', 10655, 1, 1, 'Meta conversation for the dummy stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12236, '2014-07-03 16:49:29', 10655, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12237, '2014-07-03 16:49:29', 10655, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12238, '2014-07-03 16:49:29', 10655, 1, 5, '\n        A stream for tagging users.\n    ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12243, '2014-07-03 16:52:14', 10657, 1, 1, 'Meta conversation for the dummy 3 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12244, '2014-07-03 16:52:14', 10657, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy%203/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy 3/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12245, '2014-07-03 16:52:14', 10657, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy%203/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy 3/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12246, '2014-07-03 16:52:14', 10657, 1, 5, '\n        A stream for tagging users.\n    ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12247, '2014-07-03 16:52:55', 10658, 1, 1, 'Meta conversation for the dummy 4 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12248, '2014-07-03 16:52:55', 10658, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy%204/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy 4/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12249, '2014-07-03 16:52:55', 10658, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy%204/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy 4/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12250, '2014-07-03 16:52:55', 10658, 1, 5, '\n        A stream for tagging users.\n    ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12251, '2014-07-03 16:53:05', 10659, 1, 1, 'Meta conversation for the dummy 5 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12252, '2014-07-03 16:53:05', 10659, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy%205/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy 5/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12253, '2014-07-03 16:53:05', 10659, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy%205/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy 5/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12254, '2014-07-03 16:53:05', 10659, 1, 5, '\n        A stream for tagging users.\n    ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12255, '2014-07-03 16:57:02', 10660, 1, 1, 'Meta conversation for the dummy 6 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12256, '2014-07-03 16:57:02', 10660, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy%206/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/dummy 6/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12257, '2014-07-03 16:57:02', 10660, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy%206/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/dummy 6/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12258, '2014-07-03 16:57:02', 10660, 1, 5, 'woah, my own description', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12264, '2014-07-08 09:16:55', 10663, 1, 1, 'Meta conversation for the invitations stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12265, '2014-07-08 09:16:55', 10663, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/invitations/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/invitations/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12266, '2014-07-08 09:16:55', 10663, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/invitations/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/invitations/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12267, '2014-07-08 09:16:55', 10663, 1, 5, 'Private messages to to invite users to new rings are submitted here. (This is an automated process. Use the \'send invitation\' option on the ring page to send an invitation.)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12268, '2014-07-08 09:29:22', 10664, 1, 1, 'private test message', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12269, '2014-07-08 09:29:55', 10665, 1, 1, 'test agiain', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12270, '2014-07-08 09:30:52', 10666, 1, 1, 'ehh', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12271, '2014-07-08 09:35:40', 10667, 1, 1, 'sdfs', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12304, '2014-07-09 14:17:36', 10700, 1, 1, 'Discussion about the i made a ring@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12305, '2014-07-09 14:17:36', 10700, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20made%20a%20ring/profile', NULL, 'http://cobaltcascade.localhost/i made a ring/profile', NULL, NULL, NULL, NULL, NULL),
	(12306, '2014-07-09 14:19:29', 10701, 1, 1, 'Discussion about the i made another ring@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12307, '2014-07-09 14:19:29', 10701, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20made%20another%20ring/profile', NULL, 'http://cobaltcascade.localhost/i made another ring/profile', NULL, NULL, NULL, NULL, NULL),
	(12308, '2014-07-09 14:20:17', 10702, 1, 1, 'Discussion about the i made another ring 2@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12309, '2014-07-09 14:20:17', 10702, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20made%20another%20ring%202/profile', NULL, 'http://cobaltcascade.localhost/i made another ring 2/profile', NULL, NULL, NULL, NULL, NULL),
	(12310, '2014-07-09 14:24:24', 10703, 1, 1, 'Discussion about the i made another ring 3@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12311, '2014-07-09 14:24:24', 10703, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20made%20another%20ring%203/profile', NULL, 'http://cobaltcascade.localhost/i made another ring 3/profile', NULL, NULL, NULL, NULL, NULL),
	(12312, '2014-07-09 14:29:28', 10704, 1, 1, 'Discussion about the i created another new ring 4@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12313, '2014-07-09 14:29:28', 10704, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20created%20another%20new%20ring%204/profile', NULL, 'http://cobaltcascade.localhost/i created another new ring 4/profile', NULL, NULL, NULL, NULL, NULL),
	(12314, '2014-07-09 14:30:05', 10705, 1, 1, 'Discussion about the i created another new ring 5@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12315, '2014-07-09 14:30:05', 10705, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20created%20another%20new%20ring%205/profile', NULL, 'http://cobaltcascade.localhost/i created another new ring 5/profile', NULL, NULL, NULL, NULL, NULL),
	(12316, '2014-07-09 14:30:40', 10706, 1, 1, 'Discussion about the i created another new ring 6@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12317, '2014-07-09 14:30:40', 10706, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20created%20another%20new%20ring%206/profile', NULL, 'http://cobaltcascade.localhost/i created another new ring 6/profile', NULL, NULL, NULL, NULL, NULL),
	(12318, '2014-07-09 14:31:11', 10707, 1, 1, 'Discussion about the i created another new ring 7@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12319, '2014-07-09 14:31:11', 10707, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20created%20another%20new%20ring%207/profile', NULL, 'http://cobaltcascade.localhost/i created another new ring 7/profile', NULL, NULL, NULL, NULL, NULL),
	(12320, '2014-07-09 14:32:04', 10708, 1, 1, 'Discussion about the i created another new ring 8@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12321, '2014-07-09 14:32:04', 10708, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20created%20another%20new%20ring%208/profile', NULL, 'http://cobaltcascade.localhost/i created another new ring 8/profile', NULL, NULL, NULL, NULL, NULL),
	(12322, '2014-07-09 14:32:47', 10709, 1, 1, 'Discussion about the i created another new ring 9@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12323, '2014-07-09 14:32:47', 10709, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20created%20another%20new%20ring%209/profile', NULL, 'http://cobaltcascade.localhost/i created another new ring 9/profile', NULL, NULL, NULL, NULL, NULL),
	(12324, '2014-07-09 14:35:57', 10710, 1, 1, 'Discussion about the i created another new ring 10@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12325, '2014-07-09 14:35:57', 10710, 1, 3, NULL, 'http://cobaltcascade.localhost/i%20created%20another%20new%20ring%2010/profile', NULL, 'http://cobaltcascade.localhost/i created another new ring 10/profile', NULL, NULL, NULL, NULL, NULL),
	(12326, '2014-07-09 15:02:14', 10711, 1, 1, 'Discussion about the aa another@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12327, '2014-07-09 15:02:14', 10711, 1, 3, NULL, 'http://cobaltcascade.localhost/aa%20another/profile', NULL, 'http://cobaltcascade.localhost/aa another/profile', NULL, NULL, NULL, NULL, NULL),
	(12329, '2014-07-10 09:35:14', 10713, 1, 1, 'You have been invited to join the cobaltcascade.localhost/user spam by cobaltcascade.localhost/sky.\n                    visit your <a href=\'http://cobaltcascade.localhost/testtut1/ring/index\'>ring page</a> to join.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12332, '2014-07-11 09:17:05', 10716, 1, 1, 'Meta conversation for the the tutorial made me do it stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12333, '2014-07-11 09:17:05', 10716, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/the%20tutorial%20made%20me%20do%20it/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/the tutorial made me do it/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12334, '2014-07-11 09:17:05', 10716, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/the%20tutorial%20made%20me%20do%20it/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/the tutorial made me do it/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12335, '2014-07-11 09:17:05', 10716, 1, 5, 'The example tag used for the tutorial.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12341, '2014-07-11 09:36:58', 10719, 1, 1, 'Meta conversation for the another test stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12342, '2014-07-11 09:36:58', 10719, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/another%20test/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/another test/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12343, '2014-07-11 09:36:58', 10719, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/another%20test/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/another test/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12344, '2014-07-11 09:36:58', 10719, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12361, '2014-07-12 15:15:57', 10734, 1, 1, 'Meta conversation for the testtttt stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12362, '2014-07-12 15:15:57', 10734, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/testtttt/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/testtttt/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12363, '2014-07-12 15:15:57', 10734, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/testtttt/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/testtttt/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12364, '2014-07-12 15:15:57', 10734, 1, 5, 'tteste', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12365, '2014-07-12 15:17:45', 10735, 1, 1, 'Meta conversation for the testsetest stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12366, '2014-07-12 15:17:45', 10735, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/testsetest/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/testsetest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12367, '2014-07-12 15:17:45', 10735, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/testsetest/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/testsetest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12368, '2014-07-12 15:17:45', 10735, 1, 5, 'tes', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12369, '2014-07-12 15:18:25', 10736, 1, 1, 'Meta conversation for the yrdydry stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12370, '2014-07-12 15:18:25', 10736, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/yrdydry/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/yrdydry/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12371, '2014-07-12 15:18:25', 10736, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/yrdydry/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/yrdydry/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12372, '2014-07-12 15:18:25', 10736, 1, 5, 'yrdyd', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12373, '2014-07-12 15:19:56', 10737, 1, 1, 'Meta conversation for the sgdfsg stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12374, '2014-07-12 15:19:56', 10737, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/sgdfsg/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/sgdfsg/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12375, '2014-07-12 15:19:56', 10737, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/sgdfsg/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/sgdfsg/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12376, '2014-07-12 15:19:56', 10737, 1, 5, 'dsfgsdfg', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12377, '2014-07-12 15:21:32', 10738, 1, 1, 'Meta conversation for the tetrse stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12378, '2014-07-12 15:21:32', 10738, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/tetrse/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/tetrse/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12379, '2014-07-12 15:21:32', 10738, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/tetrse/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/tetrse/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12380, '2014-07-12 15:21:32', 10738, 1, 5, 'tset', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12381, '2014-07-12 15:31:59', 10739, 1, 1, 'Meta conversation for the sdfds stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12382, '2014-07-12 15:31:59', 10739, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/sdfds/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/sdfds/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12383, '2014-07-12 15:31:59', 10739, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/sdfds/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/sdfds/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12384, '2014-07-12 15:31:59', 10739, 1, 5, 'sdfsdf', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12385, '2014-07-12 15:32:37', 10740, 1, 1, 'Meta conversation for the sad stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12386, '2014-07-12 15:32:37', 10740, 1, 3, NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/sad/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/posts/sad/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12387, '2014-07-12 15:32:37', 10740, 1, 4, NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/sad/0/0/0', NULL, 'http://cobaltcascade.localhost/testtut1/stream/view/sad/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12388, '2014-07-12 15:32:37', 10740, 1, 5, 'asda', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12389, '2014-07-12 16:18:47', 10741, 1, 1, 'Discussion about the tutorial spam@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12390, '2014-07-12 16:18:47', 10741, 1, 3, NULL, 'http://cobaltcascade.localhost/tutorial%20spam/profile', NULL, 'http://cobaltcascade.localhost/tutorial spam/profile', NULL, NULL, NULL, NULL, NULL),
	(12391, '2014-07-12 17:15:12', 10742, 1, 1, 'Discussion about the dadad@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12392, '2014-07-12 17:15:12', 10742, 1, 3, NULL, 'http://cobaltcascade.localhost/dadad/profile', NULL, 'http://cobaltcascade.localhost/dadad/profile', NULL, NULL, NULL, NULL, NULL),
	(12393, '2014-07-12 17:15:45', 10743, 1, 1, 'Discussion about the dadda2@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12394, '2014-07-12 17:15:45', 10743, 1, 3, NULL, 'http://cobaltcascade.localhost/dadda2/profile', NULL, 'http://cobaltcascade.localhost/dadda2/profile', NULL, NULL, NULL, NULL, NULL),
	(12397, '2014-07-12 19:53:20', 10745, 1, 1, 'Meta conversation for the tmp stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12398, '2014-07-12 19:53:20', 10745, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/tmp/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/tmp/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12399, '2014-07-12 19:53:20', 10745, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/tmp/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/tmp/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12400, '2014-07-12 19:53:20', 10745, 1, 5, 'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12411, '2014-08-07 08:39:17', 10751, 1, 1, 'Meta conversation for the favourite places stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12412, '2014-08-07 08:39:17', 10751, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/favourite%20places/0/0/1', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/favourite places/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(12413, '2014-08-07 08:39:17', 10751, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/favourite%20places/0/0/1', NULL, 'http://cobaltcascade.localhost/sky/stream/view/favourite places/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(12414, '2014-08-07 08:39:17', 10751, 1, 5, 'Tell us about the places that inspire you.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12437, '2014-08-10 14:51:51', 10760, 1, 1, 'Meta conversation for the kittens stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12438, '2014-08-10 14:51:51', 10760, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/1', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(12439, '2014-08-10 14:51:51', 10760, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/1', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(12440, '2014-08-10 14:51:51', 10760, 1, 5, 'test kitten thumbnails', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12441, '2014-08-10 14:51:59', 10761, 1, 1, 'Meta conversation for the kittens stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12442, '2014-08-10 14:51:59', 10761, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/2', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/2', NULL, NULL, NULL, NULL, NULL),
	(12443, '2014-08-10 14:51:59', 10761, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/2', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/2', NULL, NULL, NULL, NULL, NULL),
	(12444, '2014-08-10 14:51:59', 10761, 1, 5, 'test kitten thumbnails', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12445, '2014-08-10 14:52:29', 10762, 1, 1, 'Meta conversation for the kittens stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12446, '2014-08-10 14:52:29', 10762, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/3', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens/0/0/3', NULL, NULL, NULL, NULL, NULL),
	(12447, '2014-08-10 14:52:29', 10762, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/3', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens/0/0/3', NULL, NULL, NULL, NULL, NULL),
	(12448, '2014-08-10 14:52:29', 10762, 1, 5, 'test kitten thumbnails', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12449, '2014-08-10 14:53:04', 10763, 1, 1, 'Meta conversation for the kittens2 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12450, '2014-08-10 14:53:04', 10763, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens2/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/kittens2/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12451, '2014-08-10 14:53:04', 10763, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens2/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/kittens2/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12452, '2014-08-10 14:53:04', 10763, 1, 5, 'test kitten thumbnails', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12526, '2014-09-01 08:01:08', 10793, 1, 1, 'Discussion about the tes%$^@cobaltcascade.localhost user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12527, '2014-09-01 08:01:08', 10793, 1, 3, NULL, 'http://cobaltcascade.localhost/tes%25%24%5E/profile', NULL, 'http://cobaltcascade.localhost/tes%$^/profile', NULL, NULL, NULL, NULL, NULL),
	(12800, '2014-09-04 15:39:50', 10876, 1, 1, 'Discussion about the another test ring@cobaltcascade.localhost ring', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12801, '2014-09-04 15:39:50', 10876, 1, 3, NULL, 'http://cobaltcascade.localhost/another%20test%20ring/profile', NULL, 'http://cobaltcascade.localhost/another test ring/profile', NULL, NULL, NULL, NULL, NULL),
	(12833, '2014-09-08 09:59:53', 10892, 1, 1, 'Meta conversation for the test33 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12834, '2014-09-08 09:59:53', 10892, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test33/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test33/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12835, '2014-09-08 09:59:53', 10892, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test33/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test33/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12836, '2014-09-08 09:59:53', 10892, 1, 5, 'f', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12837, '2014-09-08 10:01:34', 10893, 1, 1, 'Meta conversation for the test 34 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12838, '2014-09-08 10:01:34', 10893, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%2034/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test 34/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12839, '2014-09-08 10:01:34', 10893, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%2034/0/0/0', NULL, 'http://cobaltcascade.localhost/test/stream/view/test 34/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12840, '2014-09-08 10:01:34', 10893, 1, 5, 'e', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12851, '2014-09-08 11:17:38', 10898, 1, 1, 'Meta conversation for the test 36 stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12852, '2014-09-08 11:17:38', 10898, 1, 3, NULL, 'http://cobaltcascade.localhost/test/stream/posts/test%2036/0/0/1', NULL, 'http://cobaltcascade.localhost/test/stream/posts/test 36/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(12853, '2014-09-08 11:17:38', 10898, 1, 4, NULL, 'http://cobaltcascade.localhost/test/stream/view/test%2036/0/0/1', NULL, 'http://cobaltcascade.localhost/test/stream/view/test 36/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(12854, '2014-09-08 11:17:38', 10898, 1, 5, 't', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12871, '2014-09-08 12:05:12', 10903, 1, 1, 'Meta conversation for the tttteest stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12872, '2014-09-08 12:05:12', 10903, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/tttteest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/tttteest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12873, '2014-09-08 12:05:12', 10903, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/tttteest/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/tttteest/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12874, '2014-09-08 12:05:12', 10903, 1, 5, 'ttt', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12875, '2014-09-08 12:05:26', 10904, 1, 1, 'Meta conversation for the testttty stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12876, '2014-09-08 12:05:26', 10904, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testttty/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testttty/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12877, '2014-09-08 12:05:26', 10904, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testttty/0/0/0', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testttty/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(12878, '2014-09-08 12:05:26', 10904, 1, 5, 't', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12879, '2014-09-08 13:07:48', 10905, 1, 1, 'Meta conversation for the testttty stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12880, '2014-09-08 13:07:48', 10905, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testttty/0/0/1', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testttty/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(12881, '2014-09-08 13:07:48', 10905, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testttty/0/0/1', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testttty/0/0/1', NULL, NULL, NULL, NULL, NULL),
	(12882, '2014-09-08 13:07:48', 10905, 1, 5, 't', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12883, '2014-09-08 13:10:47', 10906, 1, 1, 'Meta conversation for the testttty stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(12884, '2014-09-08 13:10:47', 10906, 1, 3, NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testttty/0/0/2', NULL, 'http://cobaltcascade.localhost/sky/stream/posts/testttty/0/0/2', NULL, NULL, NULL, NULL, NULL),
	(12885, '2014-09-08 13:10:47', 10906, 1, 4, NULL, 'http://cobaltcascade.localhost/sky/stream/view/testttty/0/0/2', NULL, 'http://cobaltcascade.localhost/sky/stream/view/testttty/0/0/2', NULL, NULL, NULL, NULL, NULL),
	(12886, '2014-09-08 13:10:47', 10906, 1, 5, 't', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13028, '2014-09-11 11:01:16', 10973, 1, 1, 'Discussion about the test20@cobaltcascade.localhost user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13029, '2014-09-11 11:01:16', 10973, 1, 3, NULL, 'http://cobaltcascade.localhost/test20/profile', NULL, 'http://cobaltcascade.localhost/test20/profile', NULL, NULL, NULL, NULL, NULL),
	(13030, '2014-09-11 11:04:14', 10974, 1, 1, 'dsfgdsafgdsfg', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13031, '2014-09-11 11:04:21', 10974, 2, 1, 'dsfgdsafgdsfg fdgh dfg', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13032, '2014-09-11 11:04:36', 10975, 1, 1, 'fghdgh', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13033, '2014-09-11 11:04:36', 10975, 1, 3, 'fdghfdgh', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13034, '2014-09-11 11:06:12', 10976, 1, 1, NULL, 'http://cobaltcascade.localhost/sky/profile', NULL, 'cobaltcascade.localhost/sky', NULL, NULL, NULL, NULL, NULL),
	(13035, '2014-09-11 11:06:50', 10977, 1, 1, 'cvbxvb', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13036, '2014-09-11 11:07:21', 10978, 1, 1, 'Meta conversation for the gf stream', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13037, '2014-09-11 11:07:21', 10978, 1, 3, NULL, 'http://cobaltcascade.localhost/test20/stream/posts/gf/0/0/0', NULL, 'http://cobaltcascade.localhost/test20/stream/posts/gf/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(13038, '2014-09-11 11:07:21', 10978, 1, 4, NULL, 'http://cobaltcascade.localhost/test20/stream/view/gf/0/0/0', NULL, 'http://cobaltcascade.localhost/test20/stream/view/gf/0/0/0', NULL, NULL, NULL, NULL, NULL),
	(13039, '2014-09-11 11:07:21', 10978, 1, 5, 'ndfghdfgh', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13040, '2014-09-11 11:13:05', 10979, 1, 1, 'dvs ds sd fs ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13041, '2014-09-11 11:13:12', 10979, 2, 1, 'dvs ds sd fs  dfg ', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13042, '2014-09-11 11:13:45', 10980, 1, 1, 'fgh', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
	(13043, '2014-09-11 11:13:45', 10980, 1, 3, 'ghd', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
/*!40000 ALTER TABLE `post_content` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.post_descendent
CREATE TABLE IF NOT EXISTS `post_descendent` (
  `post_descendent_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ancestor_post_id` int(10) unsigned NOT NULL DEFAULT '0',
  `descendent_post_id` int(10) unsigned NOT NULL DEFAULT '0',
  `level` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`post_descendent_id`),
  UNIQUE KEY `integrity_id` (`ancestor_post_id`,`descendent_post_id`),
  KEY `parent_post_id` (`ancestor_post_id`)
) ENGINE=InnoDB AUTO_INCREMENT=263 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Indexes the decendents of all all nodes';

-- Dumping data for table cobalt_cascade.post_descendent: ~184 rows (approximately)
/*!40000 ALTER TABLE `post_descendent` DISABLE KEYS */;
INSERT INTO `post_descendent` (`post_descendent_id`, `ancestor_post_id`, `descendent_post_id`, `level`) VALUES
	(1, 1, 9, 1),
	(2, 1, 10, 1),
	(3, 1, 11, 1),
	(4, 1, 12, 1),
	(5, 1, 13, 1),
	(6, 10, 14, 1),
	(7, 10, 15, 1),
	(8, 14, 16, 1),
	(9, 1, 38, 1),
	(10, 1, 39, 1),
	(11, 1, 40, 1),
	(12, 10, 41, 1),
	(13, 10, 42, 1),
	(14, 10, 43, 1),
	(15, 14, 44, 1),
	(16, 14, 45, 1),
	(17, 16, 46, 1),
	(18, 9, 47, 1),
	(19, 47, 48, 1),
	(20, 48, 49, 1),
	(21, 52, 56, 1),
	(22, 59, 60, 1),
	(23, 120, 121, 1),
	(24, 121, 122, 1),
	(25, 122, 123, 1),
	(26, 10026, 10027, 1),
	(27, 10025, 10034, 1),
	(28, 10055, 10057, 1),
	(29, 10095, 10098, 1),
	(30, 10037, 10107, 1),
	(31, 10082, 10146, 1),
	(32, 10025, 10194, 1),
	(33, 10194, 10195, 1),
	(34, 10041, 10305, 1),
	(35, 10305, 10306, 1),
	(36, 10305, 10307, 1),
	(37, 10434, 10435, 1),
	(38, 10436, 10437, 1),
	(39, 10437, 10438, 1),
	(40, 10226, 10463, 1),
	(41, 10514, 10515, 1),
	(42, 10514, 10516, 1),
	(43, 10514, 10517, 1),
	(44, 10515, 10519, 1),
	(45, 10515, 10520, 1),
	(46, 10515, 10521, 1),
	(47, 10515, 10522, 1),
	(48, 10515, 10523, 1),
	(49, 10515, 10524, 1),
	(50, 10515, 10525, 1),
	(51, 10517, 10526, 1),
	(52, 1, 14, 2),
	(53, 1, 15, 2),
	(54, 10, 16, 2),
	(55, 1, 41, 2),
	(56, 1, 42, 2),
	(57, 1, 43, 2),
	(58, 10, 44, 2),
	(59, 10, 45, 2),
	(60, 14, 46, 2),
	(61, 1, 47, 2),
	(62, 9, 48, 2),
	(63, 47, 49, 2),
	(64, 120, 122, 2),
	(65, 121, 123, 2),
	(66, 10025, 10195, 2),
	(67, 10041, 10306, 2),
	(68, 10041, 10307, 2),
	(69, 10436, 10438, 2),
	(70, 10514, 10519, 2),
	(71, 10514, 10520, 2),
	(72, 10514, 10521, 2),
	(73, 10514, 10522, 2),
	(74, 10514, 10523, 2),
	(75, 10514, 10524, 2),
	(76, 10514, 10525, 2),
	(77, 10514, 10526, 2),
	(78, 1, 16, 3),
	(79, 1, 44, 3),
	(80, 1, 45, 3),
	(81, 10, 46, 3),
	(82, 1, 48, 3),
	(83, 9, 49, 3),
	(84, 120, 123, 3),
	(85, 1, 46, 4),
	(86, 1, 49, 4),
	(96, 10515, 10533, 1),
	(97, 10514, 10533, 2),
	(98, 10521, 10533, 3),
	(99, 10515, 10537, 1),
	(100, 10514, 10537, 2),
	(101, 10519, 10537, 3),
	(102, 10556, 10558, 2),
	(103, 10556, 10559, 2),
	(104, 10556, 10560, 2),
	(105, 10556, 10561, 2),
	(114, 10551, 10593, 2),
	(175, 10556, 10624, 2),
	(176, 10558, 10624, 3),
	(177, 10556, 10625, 2),
	(178, 10558, 10625, 3),
	(179, 10556, 10626, 2),
	(180, 10558, 10626, 3),
	(181, 10556, 10627, 2),
	(182, 10558, 10627, 3),
	(183, 10556, 10628, 2),
	(184, 10558, 10628, 3),
	(185, 10556, 10629, 2),
	(186, 10558, 10629, 3),
	(187, 10556, 10630, 2),
	(188, 10558, 10630, 3),
	(190, 10556, 10632, 2),
	(191, 10558, 10632, 3),
	(192, 10556, 10633, 2),
	(193, 10558, 10633, 3),
	(194, 10556, 10641, 2),
	(195, 10560, 10641, 3),
	(196, 10556, 10721, 2),
	(197, 10556, 10722, 2),
	(198, 10556, 10723, 2),
	(199, 10556, 10724, 2),
	(200, 10556, 10725, 2),
	(201, 10556, 10726, 2),
	(202, 10556, 10727, 2),
	(203, 10556, 10728, 2),
	(204, 10560, 10728, 3),
	(205, 10641, 10728, 4),
	(206, 10556, 10729, 2),
	(207, 10560, 10729, 3),
	(208, 10641, 10729, 4),
	(209, 10728, 10729, 5),
	(210, 10556, 10731, 2),
	(211, 10561, 10731, 3),
	(212, 10556, 10732, 2),
	(213, 10561, 10732, 3),
	(214, 10556, 10733, 2),
	(215, 10561, 10733, 3),
	(216, 10556, 10746, 2),
	(217, 10561, 10746, 3),
	(218, 10556, 10748, 2),
	(219, 10556, 10749, 2),
	(220, 10561, 10749, 3),
	(221, 10226, 10774, 2),
	(222, 10828, 10846, 2),
	(223, 10829, 10847, 2),
	(224, 10828, 10848, 2),
	(225, 10829, 10849, 2),
	(226, 10829, 10850, 2),
	(227, 10849, 10850, 3),
	(228, 10226, 10884, 2),
	(229, 10226, 10885, 2),
	(230, 37, 10887, 2),
	(231, 37, 10888, 2),
	(232, 10556, 10928, 2),
	(233, 10559, 10928, 3),
	(234, 10556, 10931, 2),
	(235, 10556, 10934, 2),
	(236, 10931, 10934, 3),
	(237, 10556, 10937, 2),
	(238, 10931, 10937, 3),
	(239, 10556, 10940, 2),
	(240, 10931, 10940, 3),
	(241, 10556, 10944, 2),
	(242, 10931, 10944, 3),
	(243, 10556, 10945, 2),
	(244, 10931, 10945, 3),
	(245, 10556, 10947, 2),
	(246, 10931, 10947, 3),
	(247, 10950, 10952, 2),
	(248, 10556, 10954, 2),
	(249, 10931, 10954, 3),
	(250, 10556, 10958, 2),
	(251, 10931, 10958, 3),
	(252, 10556, 10961, 2),
	(253, 10931, 10961, 3),
	(254, 10556, 10963, 2),
	(255, 10931, 10963, 3),
	(256, 10556, 10968, 2),
	(257, 10556, 10974, 2),
	(258, 10560, 10974, 3),
	(259, 10556, 10977, 2),
	(260, 10556, 10979, 2),
	(261, 10560, 10979, 3),
	(262, 10974, 10979, 4);
/*!40000 ALTER TABLE `post_descendent` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.post_popular
CREATE TABLE IF NOT EXISTS `post_popular` (
  `post_popular_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` int(11) unsigned NOT NULL,
  `type` int(11) unsigned NOT NULL COMMENT 'see lookup table for details',
  PRIMARY KEY (`post_popular_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Global popularity for an post';

-- Dumping data for table cobalt_cascade.post_popular: ~0 rows (approximately)
/*!40000 ALTER TABLE `post_popular` DISABLE KEYS */;
/*!40000 ALTER TABLE `post_popular` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.post_private_recipient
CREATE TABLE IF NOT EXISTS `post_private_recipient` (
  `post_private_recipient_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` int(11) unsigned NOT NULL COMMENT 'The id of the private post that this user has access to',
  `user_id` int(11) unsigned NOT NULL COMMENT 'The id of the user that has access to this post.',
  `deleted` tinyint(3) unsigned NOT NULL COMMENT 'Has the recipient of this message deleted this message.',
  PRIMARY KEY (`post_private_recipient_id`),
  KEY `user_id` (`user_id`),
  KEY `post_id` (`post_id`),
  KEY `deleted` (`deleted`)
) ENGINE=InnoDB AUTO_INCREMENT=10007 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Link table for users who have access to private posts.';

-- Dumping data for table cobalt_cascade.post_private_recipient: ~2 rows (approximately)
/*!40000 ALTER TABLE `post_private_recipient` DISABLE KEYS */;
INSERT INTO `post_private_recipient` (`post_private_recipient_id`, `post_id`, `user_id`, `deleted`) VALUES
	(10000, 10233, 10000, 0),
	(10006, 10977, 10169, 0);
/*!40000 ALTER TABLE `post_private_recipient` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.post_user
CREATE TABLE IF NOT EXISTS `post_user` (
  `post_user_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` int(11) unsigned NOT NULL COMMENT 'The ID of the post that has been made against a user',
  `user_id` int(11) unsigned NOT NULL COMMENT 'The user ID of the user who has an post against them.',
  PRIMARY KEY (`post_user_id`),
  KEY `user_id` (`user_id`),
  KEY `post_id` (`post_id`)
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='user_id for posts made with a stream.kind of user';

-- Dumping data for table cobalt_cascade.post_user: ~26 rows (approximately)
/*!40000 ALTER TABLE `post_user` DISABLE KEYS */;
INSERT INTO `post_user` (`post_user_id`, `post_id`, `user_id`) VALUES
	(1, 50, 4),
	(2, 51, 4),
	(3, 52, 4),
	(4, 53, 4),
	(5, 54, 4),
	(6, 55, 4),
	(7, 57, 5),
	(8, 10648, 10000),
	(9, 10649, 10000),
	(11, 10653, 10000),
	(13, 10662, 10000),
	(14, 10717, 10000),
	(15, 10720, 10000),
	(16, 10851, 10000),
	(17, 10852, 10000),
	(18, 10853, 10000),
	(19, 10854, 10000),
	(20, 10855, 10000),
	(21, 10856, 10000),
	(22, 10857, 10000),
	(23, 10858, 10000),
	(24, 10865, 10000),
	(25, 10867, 10000),
	(26, 10868, 10000),
	(27, 10933, 10000),
	(28, 10976, 10000);
/*!40000 ALTER TABLE `post_user` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.rhythm
CREATE TABLE IF NOT EXISTS `rhythm` (
  `rhythm_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL,
  `name` varchar(128) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`rhythm_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10058 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Stores all Rhythms for processing store data';

-- Dumping data for table cobalt_cascade.rhythm: ~49 rows (approximately)
/*!40000 ALTER TABLE `rhythm` DISABLE KEYS */;
INSERT INTO `rhythm` (`rhythm_id`, `user_id`, `name`) VALUES
	(1, 1, 'test datesort'),
	(2, 1, 'test reverse datesort'),
	(3, 1, 'test stream suggestion'),
	(4, 1, 'test stream suggestion with data source'),
	(5, 1, 'test kindred rhythm1'),
	(6, 1, 'test kindred rhythm2'),
	(7, 1, 'test ring'),
	(8, 1, 'test stream filter suggestion rhythm'),
	(9, 1, 'test filter suggestion'),
	(10, 1, 'test a second filter suggestion'),
	(11, 1, 'test stream suggestion rhythm'),
	(12, 1, 'test moderation suggestion'),
	(13, 1, 'test suggest user'),
	(14, 1, 'test missing sort'),
	(15, 1, 'test broken filter'),
	(16, 1, 'test filter that stores data'),
	(17, 1, 'test posts by date'),
	(18, 1, 'test user tag suggestion'),
	(19, 1, 'test rhythm with params'),
	(10000, 10000, 'oldest'),
	(10002, 10000, 'newest'),
	(10008, 10000, 'skys priority'),
	(10009, 10000, 'skys open bugs'),
	(10010, 10000, 'skys closed bugs'),
	(10011, 10000, 'popular in last hour'),
	(10012, 10000, 'popular in last day'),
	(10013, 10000, 'popular in last week'),
	(10014, 10000, 'skys task priority'),
	(10015, 10000, 'skys in progress tasks'),
	(10016, 10000, 'simple kindred'),
	(10017, 10000, 'popular recently'),
	(10018, 10000, 'basic kindred'),
	(10019, 10000, 'basic stream suggestion'),
	(10020, 10000, 'basic filter suggestion'),
	(10021, 10000, 'basic moderation ring suggestion'),
	(10022, 10000, 'basic user suggestion'),
	(10023, 10000, 'basic user stream suggestion'),
	(10024, 10000, 'cobalt cascade alpha tasks'),
	(10025, 10000, 'cobalt cascade beta tasks'),
	(10026, 10000, 'cobalt cascade version 1 tasks'),
	(10027, 10000, 'cobalt cascade version 2 tasks'),
	(10028, 10000, 'babbling brook alpha tasks'),
	(10029, 10000, 'babbling brook beta tasks'),
	(10030, 10000, 'babbling brook live tasks'),
	(10037, 10000, 'secundus alpha tasks'),
	(10039, 10000, 'babbling brook alpha tasks dupe'),
	(10040, 10000, 'babbling brook alpha taskss'),
	(10056, 10000, 'beautiful tutorial'),
	(10057, 10000, 'random');
/*!40000 ALTER TABLE `rhythm` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.rhythm_cat
CREATE TABLE IF NOT EXISTS `rhythm_cat` (
  `rhythm_cat_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `description` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`rhythm_cat_id`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Rhythm categories';

-- Dumping data for table cobalt_cascade.rhythm_cat: ~11 rows (approximately)
/*!40000 ALTER TABLE `rhythm_cat` DISABLE KEYS */;
INSERT INTO `rhythm_cat` (`rhythm_cat_id`, `name`, `description`) VALUES
	(1, 'sort', 'Rhythms used for sorting posts'),
	(2, 'kindred', 'Rhythms used for determining relationships between users'),
	(5, 'stream_suggestion', 'Rhythms used to suggest new streams that a user might like to subscribe to.'),
	(6, 'stream_filter_suggestion', 'Rhythms used to suggest new stream filters that a user might like to use.'),
	(7, 'user_stream_suggestion', 'Rhythm to suggest streams that the user might like to use to rate other users.'),
	(8, 'ring', 'Alogrithms for rings'),
	(9, 'stream_ring_suggestion', 'Rhythms used for suggesting rings a user might like to use on streams.'),
	(10, 'ring_suggestion', 'Rhythms used for suggesting rings that the user might like to join.'),
	(11, 'user_suggestion', 'Rhythms used for suggesting users that the user might be interested in.'),
	(12, 'meta_suggestion', 'Rhythms used for suggesting new suggestion rhythms to the user.'),
	(13, 'kindred_suggestion', ' Rhythms used for suggesting new kindred rhythms to the user.');
/*!40000 ALTER TABLE `rhythm_cat` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.rhythm_extra
CREATE TABLE IF NOT EXISTS `rhythm_extra` (
  `rhythm_extra_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `date_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `rhythm_id` int(11) unsigned NOT NULL,
  `description` text COLLATE utf8_unicode_ci NOT NULL COMMENT 'Textual description of the Rhythm',
  `mini` text COLLATE utf8_unicode_ci NOT NULL COMMENT 'minified version of the Rhythm',
  `full` text COLLATE utf8_unicode_ci NOT NULL COMMENT 'original full version with preserved spacing',
  `status_id` int(11) unsigned NOT NULL DEFAULT '1' COMMENT 'see status table for valid values.',
  `version_id` int(11) unsigned NOT NULL COMMENT 'Link to version table',
  `rhythm_cat_id` int(11) unsigned NOT NULL COMMENT 'Which category does this Rhythm belong to',
  `meta_post_id` int(11) unsigned DEFAULT NULL COMMENT 'The id of the post that enables meta disscussion about this Rhythm.',
  PRIMARY KEY (`rhythm_extra_id`),
  UNIQUE KEY `version_id` (`version_id`),
  KEY `rhythm_id` (`rhythm_id`,`status_id`,`rhythm_cat_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10067 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- Dumping data for table cobalt_cascade.rhythm_extra: ~52 rows (approximately)
/*!40000 ALTER TABLE `rhythm_extra` DISABLE KEYS */;
INSERT INTO `rhythm_extra` (`rhythm_extra_id`, `date_created`, `rhythm_id`, `description`, `mini`, `full`, `status_id`, `version_id`, `rhythm_cat_id`, `meta_post_id`) VALUES
	(1, '2011-11-08 09:10:40', 1, 'Sort items by date', 'function () {\r\n    \r\n    var init = function () {\r\n        BabblingBrook.Filter.testvar = "init called";\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra = 0;\r\n        var user = post.domain + "/" + post.username;\r\n        extra = 0\r\n        var sort = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var init = function () {\r\n        BabblingBrook.Filter.testvar = "init called";\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra = 0;\r\n        var user = post.domain + "/" + post.username;\r\n        extra = 0\r\n        var sort = post.timestamp  + extra;\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 2, 1, 116),
	(2, '2011-11-08 09:11:28', 2, 'Sort items in reverse order', 'function () {\r\n    \r\n    var init = function () {\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var sort = 10000000000 - post.timestamp;\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var init = function () {\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var sort = 10000000000 - post.timestamp;\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 3, 1, 117),
	(3, '2011-11-30 15:15:23', 3, 'A test stream suggestion Rhythm', 'function () {\r\n    var main = function () {\r\n       var suggestions = [\r\n            {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test suggested stream",\r\n                "version":"latest/latest/latest"                \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    var main = function () {\r\n       var suggestions = [\r\n            {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test suggested stream",\r\n                "version":"latest/latest/latest"                \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 2, 7, 5, 118),
	(4, '2011-12-01 07:53:55', 4, 'A test suggestion Rhythm that fetches data from a a remote url to test this functionality.', 'function () {\r\n    \r\n    var suggestion_data;\r\n    \r\n    var onDataFetched = function (data) {\r\n        suggestion_data = data;\r\n        BabblingBrook.Filter.processSuggestions();\r\n    };\r\n    \r\n    var init = function () {\r\n        var url = "cobaltcascade.localhost/tests/SuggestionTestData";\r\n        BabblingBrook.Filter.getMiscData(url, onDataFetched);     \r\n    };\r\n    \r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain" : suggestion_data.domain\r\n                "username" : suggestion_data.username,\r\n                "name" : suggestion_data.name,\r\n                "version" : suggestion_data.version   \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var suggestion_data;\r\n    \r\n    var onDataFetched = function (data) {\r\n        suggestion_data = data;\r\n        BabblingBrook.Filter.processSuggestions();\r\n    };\r\n    \r\n    var init = function () {\r\n        var url = "cobaltcascade.localhost/tests/SuggestionTestData";\r\n        BabblingBrook.Filter.getMiscData(url, onDataFetched);     \r\n    };\r\n    \r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain" : suggestion_data.domain\r\n                "username" : suggestion_data.username,\r\n                "name" : suggestion_data.name,\r\n                "version" : suggestion_data.version   \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 9, 5, 119),
	(5, '2011-12-12 10:54:11', 5, 'The first test kindred rhythm', 'function () {\r\n    \r\n    var main = function (take) {\r\n        var scores = [\r\n            {\r\n                full_username : take.post_domain + "/" + take.post_username, \r\n                score : 5  \r\n            }\r\n        ]\r\n        BabblingBrook.Kindred.processNextTake(scores);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var main = function (take) {\r\n        var scores = [\r\n            {\r\n                full_username : take.post_domain + "/" + take.post_username, \r\n                score : 5  \r\n            }\r\n        ]\r\n        BabblingBrook.Kindred.processNextTake(scores);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 2, 10, 2, 107),
	(6, '2011-12-12 10:54:50', 6, 'A second test kindred Rhythm', 'function () {\r\n    \r\n    var take;\r\n    \r\n    var onTakesFetched = function (users_takes) {\r\n        var scores = [];\r\n        var kindred = \r\n        $.each(post_takes, function(i, post_take){\r\n            var score = 0;\r\n            if((post_take.value > 0 && take.value > 0) || ((post_take.value < 1 && take.value < 1))) {\r\n                score = 1;\r\n            } else if(post_take.value != 0 && take.value != 0) {\r\n                score = -1;\r\n            }\r\n            var score = {\r\n                full_username : post_take.domain + "/" + post_take.username, \r\n                score : score \r\n            };  \r\n            scores.push(score);            \r\n        });\r\n        BabblingBrook.Kindred.processNextTake(scores);\r\n    };\r\n    \r\n    var main = function (current_take) {\r\n        take = current_take;\r\n        var url = take.stream_domain + "/post/" + take.stream_domain + "/" + take.local_id + "/takes";\r\n        BabblingBrook.Kindred.getMiscData(url, onTakesFetched);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var take;\r\n    \r\n    var onTakesFetched = function (users_takes) {\r\n        var scores = [];\r\n        var kindred = \r\n        $.each(post_takes, function(i, post_take){\r\n            var score = 0;\r\n            if((post_take.value > 0 && take.value > 0) || ((post_take.value < 1 && take.value < 1))) {\r\n                score = 1;\r\n            } else if(post_take.value != 0 && take.value != 0) {\r\n                score = -1;\r\n            }\r\n            var score = {\r\n                full_username : post_take.domain + "/" + post_take.username, \r\n                score : score \r\n            };  \r\n            scores.push(score);            \r\n        });\r\n        BabblingBrook.Kindred.processNextTake(scores);\r\n    };\r\n    \r\n    var main = function (current_take) {\r\n        take = current_take;\r\n        var url = take.stream_domain + "/post/" + take.stream_domain + "/" + take.local_id + "/takes";\r\n        BabblingBrook.Kindred.getMiscData(url, onTakesFetched);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 1, 11, 2, 108),
	(7, '2011-12-14 14:10:37', 7, 'A test ring url', 'function(){\r\n    alert("test ring rhythm");\r\n}', 'function(){\r\n    alert("test ring rhythm");\r\n}', 1, 12, 8, 109),
	(8, '2011-12-14 14:10:37', 8, 'a stream filter suggestion rhythm', 'function () {\r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test filter suggestion",\r\n                "version":"0/0/0"                \r\n            }, {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test a second filter suggestion",\r\n                "version":"0/0/0"  \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test filter suggestion",\r\n                "version":"0/0/0"                \r\n            }, {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test a second filter suggestion",\r\n                "version":"0/0/0"  \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 1, 18, 6, 110),
	(9, '2011-11-07 09:10:40', 9, 'a test filter suggestion. This is used in other test suggestion rhythms, but does nothing itself.', '/**\r\n * Fetches the stream subscriptions of the users nearest kindred and then selects the most \r\n * popular filters that this user is not subscribed to already and has not already declined.\r\n *\r\n * Filters get more points for being higher up the kindred list and \r\n * more points for being close to the start of the top of the filter subscription list.\r\n */\r\nfunction () {\r\n    var user;\r\nvar client_domain;\r\nvar suggestion_type;\r\nvar kindred;\r\nvar user_subscriptions;\r\nvar declined_suggestions;\r\n    \r\n    /**\r\n     * If there is a stream paramater then only fetch suggestions for that stream,\r\n     * the stream location is stored in the suggestion paramaters\r\n     */\r\n    var params;\r\n\r\n/**\r\n * @type {integer} The maximum number of kindred subscriptions to fetch.\r\n */\r\nvar max_kindred_to_process = 30;\r\nvar kindred_subscriptions = [];\r\n    \r\n/**\r\n * Scores for each stream indexed by domain/username/name.\r\n */\r\nvar filter_scores = {};\r\nvar final_scores;\r\n\r\nvar suggestions = [];\r\n\r\nvar max_kindred_points = 100;\r\nvar kindred_points_divider = 0.8;\r\nvar max_subscription_points = 100;\r\nvar subscription_points_divider = 0.8;\r\n    /**\r\n     * A bonus score given if the filter is the first in the stream. \r\n     */\r\n    var bonus_score_to_first = 50;\r\n\r\nvar max_results_to_return = 25;\r\n\r\nvar init_done = false;\r\n\r\n/**\r\n * Checks to see if all requested data has returned before starting the suggestion generation.\r\n */\r\nvar isInitDone = function () {\r\nif (Object.keys(kindred_subscriptions).length === max_kindred_to_process) {       \r\nif (typeof user_subscriptions !== "undefined" && typeof declined_suggestions !== "undefined") {              \r\nif (init_done === false) {                  \r\ninit_done = true;\r\nBabblingBrook.Suggestion.processSuggestions();\r\nreturn true;\r\n}\r\n}\r\n}\r\nreturn false;\r\n};\r\n\r\nvar onUserSubscriptionsFetched = function (data) {\r\nuser_subscriptions = data.subscriptions;\r\nisInitDone();\r\n};\r\n\r\nvar onUserDeclinedSuggestionsFetched = function (data) {\r\ndeclined_suggestions = data.suggestions_declined;\r\nisInitDone();\r\n};\r\n\r\nvar onKindredSubscriptionsFetched = function (index, data) {       \r\nkindred_subscriptions[index] = data.subscriptions;\r\nisInitDone();\r\n};\r\n\r\n/**\r\n * If a kindreds subscription data does not respond then just\r\n * use an empty array, so that the rhythm can proceed without it.\r\n * \r\n * @param index The id of this kindred in the kindred_subscriptions array.\r\n *\r\n * return {void}\r\n */\r\nvar onKindredSubscriptionsFetchedError = function (index) {\r\nkindred_subscriptions[index] = [];\r\nisInitDone();\r\n};\r\n\r\nvar onUserSubscriptionsFetchedError = function () {\r\nthrow "Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm";\r\n};\r\n\r\nvar onUserDeclinedSuggestionsFetchedError = function () {\r\nthrow "Error whilst fetchning this users declined suggestions in suggestion rhtyhm";\r\n};\r\n\r\n    var init = function () {        \r\nparams = BabblingBrook.Suggestion.getParamaters();\r\n        \r\n        user = BabblingBrook.Suggestion.getUser();\r\nclient_domain = BabblingBrook.Suggestion.getClientDomain();\r\nsuggestion_type = BabblingBrook.Suggestion.getSuggestionType();\r\n\r\n        var url = user.domain + "/" + user.username + \r\n            "/clientdata/getstreamfiltersubscriptions/?client_domain=" + client_domain;\r\n        BabblingBrook.Suggestion.getMiscData(\r\nurl, \r\nonUserSubscriptionsFetched,\r\nonUserSubscriptionsFetchedError\r\n);\r\n\r\n        url = user.domain + "/" + user.username + \r\n            "/clientdata/getdeclinedsuggestions/?client_domain=" + client_domain + \r\n"&type=" + suggestion_type;\r\n        BabblingBrook.Suggestion.getMiscData(\r\nurl, \r\nonUserDeclinedSuggestionsFetched,\r\nonUserDeclinedSuggestionsFetchedError\r\n); \r\n\r\nkindred = BabblingBrook.Suggestion.getKindred();\r\nvar kindred_length = Object.keys(kindred).length;\r\nif (kindred_length < max_kindred_to_process) {\r\nmax_kindred_to_process = kindred_length;\r\n}\r\n        var i = 0;\r\n        for (var full_username in kindred) {\r\n            if (i === max_kindred_to_process) {\r\n                break;    \r\n            }   \r\nvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\r\nvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\r\nvar url = kindred_domain + "/" + kindred_username + \r\n"/clientdata/getstreamfiltersubscriptions/?client_domain=" + client_domain;\r\nBabblingBrook.Suggestion.getMiscData(\r\nurl, \r\nonKindredSubscriptionsFetched.bind(null, i),\r\nonKindredSubscriptionsFetchedError.bind(null, i)\r\n);\r\ni++; \r\n}\r\nisInitDone();\r\n    };\r\n\r\nvar createScoreFilter = function (filter) {\r\nvar filter_name = filter.domain + "/" + filter.username + "/" + filter.name;     \r\nif (typeof filter_scores[filter_name] === "undefined") {\r\nfilter_scores[filter_name] = filter;\r\nfilter_scores[filter_name].score = 0;\r\n}\r\n};\r\n\r\nvar isInDomain = function (domain) {    \r\nif (typeof params.domain !== "string") {\r\nreturn true;\r\n} else if (params.domain === domain){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n};\r\n\r\nvar isInUsername = function (username) {\r\nif (typeof params.username !== "string") {\r\nreturn true;\r\n} else if (params.username === username){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n};\r\n\r\nvar isInName = function (name) {\r\nif (typeof params.name !== "string") {\r\nreturn true;\r\n} else if (params.name === name){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n};\r\n\r\nvar isSubValid = function (sub) {         \r\nif (isInDomain(sub.domain) === true \r\n&& isInUsername(sub.username) === true \r\n&& isInName(sub.name) === true\r\n) {\r\nreturn true;\r\n}\r\nreturn false;\r\n};\r\n\r\nvar calculateScores = function () {\r\nfor (var i = 0; i < max_kindred_to_process; i++) {              \r\nfor (var j in kindred_subscriptions[i]) {                \r\nvar sub = kindred_subscriptions[i][j];   \r\nif (isSubValid(sub) === true) {              \r\n var filters = sub.filters;\r\njQuery.each(filters, function (k, filter) {\r\ncreateScoreFilter(filters[k]);\r\nvar kindred_divider = kindred_points_divider * (i + 1);\r\nvar kindred_score = max_kindred_points / kindred_divider;\r\nvar position_divider = subscription_points_divider * (k + 1);\r\nvar position_score = max_subscription_points / subscription_points_divider;\r\nif (k === 0) {\r\nposition_score += bonus_score_to_first;\r\n}\r\nvar filter_name = filters[k].domain + "/" + filters[k].username + "/" + filters[k].name;\r\nfilter_scores[filter_name].score += Math.round(position_score + kindred_score);  \r\n});\r\n}\r\n}\r\n}\r\n};\r\n\r\nvar sortScores = function () {\r\nconsole.debug(filter_scores);\r\nvar final_scores = [];\r\nfor (var i in filter_scores) {\r\nif (filter_scores[i].score > 0) {\r\nfinal_scores.push(filter_scores[i]);\r\n}\r\n}\r\nfinal_scores.sort(function (a, b) {\r\nreturn b.score - a.score;\r\n});\r\nfor (var j=0; j<final_scores.length; j++) {\r\nsuggestions.push({\r\n                "domain" : final_scores[j].domain,                \r\n                "username" : final_scores[j].username,\r\n                "name" : final_scores[j].name,\r\n                "version" : final_scores[j].version \r\n});\r\n}\r\n};\r\n\r\nvar removeSubscribedStreamFilters = function () {     \r\n// Don"t do this for the test one.\r\n\r\n};\r\n\r\nvar removeDeclinedSuggestions = function () {            \r\n//r (var i = 0; i < declined_suggestions.length; i++) {  \r\n      //if (isSubValid(declined_suggestions[i]) === true) {    \r\n                  //var filters = declined_suggestions[i].filters;\r\n                var filters = declined_suggestions;         \r\nfor (var k = 0; k < filters.length; k++) {\r\n                    \r\nfor (var j in filter_scores) {\r\nvar filter = filters[k];\r\nvar suggestion = filter_scores[j];\r\nif (filter.domain === suggestion.domain\r\n&& filter.username === suggestion.username\r\n&& filter.name === suggestion.name\r\n) {\r\nsuggestion.score = 0;\r\n}\r\n}\r\n}\r\n//}\r\n//\r\n};\r\n\r\n    var main = function () {\r\ncalculateScores();\r\nconsole.debug(suggestions);\r\nremoveSubscribedStreamFilters();\r\nremoveDeclinedSuggestions();\r\nsortScores();\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}\r\n', '/**\r\n * Fetches the stream subscriptions of the users nearest kindred and then selects the most \r\n * popular filters that this user is not subscribed to already and has not already declined.\r\n *\r\n * Filters get more points for being higher up the kindred list and \r\n * more points for being close to the start of the top of the filter subscription list.\r\n */\r\nfunction () {\r\n    var user;\r\nvar client_domain;\r\nvar suggestion_type;\r\nvar kindred;\r\nvar user_subscriptions;\r\nvar declined_suggestions;\r\n    \r\n    /**\r\n     * If there is a stream paramater then only fetch suggestions for that stream,\r\n     * the stream location is stored in the suggestion paramaters\r\n     */\r\n    var params;\r\n\r\n/**\r\n * @type {integer} The maximum number of kindred subscriptions to fetch.\r\n */\r\nvar max_kindred_to_process = 30;\r\nvar kindred_subscriptions = [];\r\n    \r\n/**\r\n * Scores for each stream indexed by domain/username/name.\r\n */\r\nvar filter_scores = {};\r\nvar final_scores;\r\n\r\nvar suggestions = [];\r\n\r\nvar max_kindred_points = 100;\r\nvar kindred_points_divider = 0.8;\r\nvar max_subscription_points = 100;\r\nvar subscription_points_divider = 0.8;\r\n    /**\r\n     * A bonus score given if the filter is the first in the stream. \r\n     */\r\n    var bonus_score_to_first = 50;\r\n\r\nvar max_results_to_return = 25;\r\n\r\nvar init_done = false;\r\n\r\n/**\r\n * Checks to see if all requested data has returned before starting the suggestion generation.\r\n */\r\nvar isInitDone = function () {\r\nif (Object.keys(kindred_subscriptions).length === max_kindred_to_process) {       \r\nif (typeof user_subscriptions !== "undefined" && typeof declined_suggestions !== "undefined") {              \r\nif (init_done === false) {                  \r\ninit_done = true;\r\nBabblingBrook.Suggestion.processSuggestions();\r\nreturn true;\r\n}\r\n}\r\n}\r\nreturn false;\r\n};\r\n\r\nvar onUserSubscriptionsFetched = function (data) {\r\nuser_subscriptions = data.subscriptions;\r\nisInitDone();\r\n};\r\n\r\nvar onUserDeclinedSuggestionsFetched = function (data) {\r\ndeclined_suggestions = data.suggestions_declined;\r\nisInitDone();\r\n};\r\n\r\nvar onKindredSubscriptionsFetched = function (index, data) {       \r\nkindred_subscriptions[index] = data.subscriptions;\r\nisInitDone();\r\n};\r\n\r\n/**\r\n * If a kindreds subscription data does not respond then just\r\n * use an empty array, so that the rhythm can proceed without it.\r\n * \r\n * @param index The id of this kindred in the kindred_subscriptions array.\r\n *\r\n * return {void}\r\n */\r\nvar onKindredSubscriptionsFetchedError = function (index) {\r\nkindred_subscriptions[index] = [];\r\nisInitDone();\r\n};\r\n\r\nvar onUserSubscriptionsFetchedError = function () {\r\nthrow "Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm";\r\n};\r\n\r\nvar onUserDeclinedSuggestionsFetchedError = function () {\r\nthrow "Error whilst fetchning this users declined suggestions in suggestion rhtyhm";\r\n};\r\n\r\n    var init = function () {        \r\nparams = BabblingBrook.Suggestion.getParamaters();\r\n        \r\n        user = BabblingBrook.Suggestion.getUser();\r\nclient_domain = BabblingBrook.Suggestion.getClientDomain();\r\nsuggestion_type = BabblingBrook.Suggestion.getSuggestionType();\r\n\r\n        var url = user.domain + "/" + user.username + \r\n            "/clientdata/getstreamfiltersubscriptions/?client_domain=" + client_domain;\r\n        BabblingBrook.Suggestion.getMiscData(\r\nurl, \r\nonUserSubscriptionsFetched,\r\nonUserSubscriptionsFetchedError\r\n);\r\n\r\n        url = user.domain + "/" + user.username + \r\n            "/clientdata/getdeclinedsuggestions/?client_domain=" + client_domain + \r\n"&type=" + suggestion_type;\r\n        BabblingBrook.Suggestion.getMiscData(\r\nurl, \r\nonUserDeclinedSuggestionsFetched,\r\nonUserDeclinedSuggestionsFetchedError\r\n); \r\n\r\nkindred = BabblingBrook.Suggestion.getKindred();\r\nvar kindred_length = Object.keys(kindred).length;\r\nif (kindred_length < max_kindred_to_process) {\r\nmax_kindred_to_process = kindred_length;\r\n}\r\n        var i = 0;\r\n        for (var full_username in kindred) {\r\n            if (i === max_kindred_to_process) {\r\n                break;    \r\n            }   \r\nvar kindred_domain = BabblingBrook.Library.extractDomain(full_username);\r\nvar kindred_username = BabblingBrook.Library.extractUsername(full_username);\r\nvar url = kindred_domain + "/" + kindred_username + \r\n"/clientdata/getstreamfiltersubscriptions/?client_domain=" + client_domain;\r\nBabblingBrook.Suggestion.getMiscData(\r\nurl, \r\nonKindredSubscriptionsFetched.bind(null, i),\r\nonKindredSubscriptionsFetchedError.bind(null, i)\r\n);\r\ni++; \r\n}\r\nisInitDone();\r\n    };\r\n\r\nvar createScoreFilter = function (filter) {\r\nvar filter_name = filter.domain + "/" + filter.username + "/" + filter.name;     \r\nif (typeof filter_scores[filter_name] === "undefined") {\r\nfilter_scores[filter_name] = filter;\r\nfilter_scores[filter_name].score = 0;\r\n}\r\n};\r\n\r\nvar isInDomain = function (domain) {    \r\nif (typeof params.domain !== "string") {\r\nreturn true;\r\n} else if (params.domain === domain){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n};\r\n\r\nvar isInUsername = function (username) {\r\nif (typeof params.username !== "string") {\r\nreturn true;\r\n} else if (params.username === username){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n};\r\n\r\nvar isInName = function (name) {\r\nif (typeof params.name !== "string") {\r\nreturn true;\r\n} else if (params.name === name){\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n};\r\n\r\nvar isSubValid = function (sub) {         \r\nif (isInDomain(sub.domain) === true \r\n&& isInUsername(sub.username) === true \r\n&& isInName(sub.name) === true\r\n) {\r\nreturn true;\r\n}\r\nreturn false;\r\n};\r\n\r\nvar calculateScores = function () {\r\nfor (var i = 0; i < max_kindred_to_process; i++) {              \r\nfor (var j in kindred_subscriptions[i]) {                \r\nvar sub = kindred_subscriptions[i][j];   \r\nif (isSubValid(sub) === true) {              \r\n var filters = sub.filters;\r\njQuery.each(filters, function (k, filter) {\r\ncreateScoreFilter(filters[k]);\r\nvar kindred_divider = kindred_points_divider * (i + 1);\r\nvar kindred_score = max_kindred_points / kindred_divider;\r\nvar position_divider = subscription_points_divider * (k + 1);\r\nvar position_score = max_subscription_points / subscription_points_divider;\r\nif (k === 0) {\r\nposition_score += bonus_score_to_first;\r\n}\r\nvar filter_name = filters[k].domain + "/" + filters[k].username + "/" + filters[k].name;\r\nfilter_scores[filter_name].score += Math.round(position_score + kindred_score);  \r\n});\r\n}\r\n}\r\n}\r\n};\r\n\r\nvar sortScores = function () {\r\nconsole.debug(filter_scores);\r\nvar final_scores = [];\r\nfor (var i in filter_scores) {\r\nif (filter_scores[i].score > 0) {\r\nfinal_scores.push(filter_scores[i]);\r\n}\r\n}\r\nfinal_scores.sort(function (a, b) {\r\nreturn b.score - a.score;\r\n});\r\nfor (var j=0; j<final_scores.length; j++) {\r\nsuggestions.push({\r\n                "domain" : final_scores[j].domain,                \r\n                "username" : final_scores[j].username,\r\n                "name" : final_scores[j].name,\r\n                "version" : final_scores[j].version \r\n});\r\n}\r\n};\r\n\r\nvar removeSubscribedStreamFilters = function () {     \r\n// Don"t do this for the test one.\r\n\r\n};\r\n\r\nvar removeDeclinedSuggestions = function () {            \r\n//r (var i = 0; i < declined_suggestions.length; i++) {  \r\n      //if (isSubValid(declined_suggestions[i]) === true) {    \r\n                  //var filters = declined_suggestions[i].filters;\r\n                var filters = declined_suggestions;         \r\nfor (var k = 0; k < filters.length; k++) {\r\n                    \r\nfor (var j in filter_scores) {\r\nvar filter = filters[k];\r\nvar suggestion = filter_scores[j];\r\nif (filter.domain === suggestion.domain\r\n&& filter.username === suggestion.username\r\n&& filter.name === suggestion.name\r\n) {\r\nsuggestion.score = 0;\r\n}\r\n}\r\n}\r\n//}\r\n//\r\n};\r\n\r\n    var main = function () {\r\ncalculateScores();\r\nconsole.debug(suggestions);\r\nremoveSubscribedStreamFilters();\r\nremoveDeclinedSuggestions();\r\nsortScores();\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}\r\n', 2, 19, 6, 111),
	(10, '2011-11-07 09:10:41', 10, 'a second test filter suggestion. This is used in other test suggestion rhythms, but does nothing itself.', '//.\r\nfunction () {\r\n    var main = function () {\r\n        BabblingBrook.Suggestion.suggestionsGenerated();\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', '// .\r\nfunction () {\r\n    var main = function () {\r\n        BabblingBrook.Suggestion.suggestionsGenerated();\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 2, 20, 6, 112),
	(11, '2011-12-14 14:10:37', 11, 'a stream suggestion rhythm', 'function () {\r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test suggested stream",\r\n                "version":"latest/latest/latest"                \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated();\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test suggested stream",\r\n                "version":"latest/latest/latest"                \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated();\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 1, 28, 6, 113),
	(12, '2011-11-07 09:10:40', 12, 'a test moderation suggestion', 'function () {\r\n    var main = function () {\r\n        var suggestions = [\r\n            {\r\n                "username":"test suggested ring",\r\n                "domain":"cobaltcascade.localhost"\r\n            }, {\r\n                "username":"test ring",\r\n                "domain":"cobaltcascade.localhost"\r\n            }\r\n        ]\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    var main = function () {\r\n        var suggestions = [\r\n            {\r\n                "username":"test suggested ring",\r\n                "domain":"cobaltcascade.localhost"\r\n            }, {\r\n                "username":"test ring",\r\n                "domain":"cobaltcascade.localhost"\r\n            }\r\n        ]\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 2, 27, 9, 114),
	(13, '2011-11-07 09:10:40', 13, 'a user suggestion Rhythm', 'function () {\r\n    \r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain" : "cobaltcascade.localhost",\r\n                "username" : "test"\r\n            },\r\n            {\r\n                "domain" : "cobaltcascade.localhost",\r\n                "username" : "test2"\r\n            }            \r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain" : "cobaltcascade.localhost",\r\n                "username" : "test"\r\n            },\r\n            {\r\n                "domain" : "cobaltcascade.localhost",\r\n                "username" : "test2"\r\n            }            \r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 2, 34, 7, 115),
	(14, '2011-11-07 09:10:50', 13, 'a user suggestion Rhythm a second depricated version', 'function () {\r\n    \r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain" : "cobaltcascade.localhost",\r\n                "username" : "test2"\r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var main = function () {\r\n        suggestions = [\r\n            {\r\n                "domain" : "cobaltcascade.localhost",\r\n                "username" : "test2"\r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 3, 36, 7, 105),
	(15, '2011-12-07 09:10:50', 14, 'a sort filter that is missing. - the json action in the control returns empty data so that it fails the data test on the client side and an error is passed to the user.', '', '', 2, 38, 1, 106),
	(16, '2011-11-07 09:10:50', 15, 'a filter Rhythm that errors with a syntax error when evaled.', 'function () {\r\n    \r\n    var init = function () {\r\n        BabblingBrook.Filter.t=%443tdgs43:Df@dsg446Ã‚Â£estvar = "init called";\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra=0;\r\n        var user= post.domain+"/" + post.username;\r\n        if(typeof BabblingBrook.FilterKindred[user]!="undefined") {\r\n            extra=10000000;\r\n        }\r\n        var score = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(score);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var init = function () {\r\n        BabblingBrook.Filter.t=%443tdgs43:Df@dsg446Ã‚Â£estvar = "init called";\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra=0;\r\n        var user= post.domain+"/" + post.username;\r\n        if(typeof BabblingBrook.FilterKindred[user]!="undefined") {\r\n            extra=10000000;\r\n        }\r\n        var score = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(score);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 39, 1, 101),
	(17, '2011-11-07 09:10:50', 15, 'a filter Rhythm that errors with a runtime error in the init function.', 'function () {\r\n    \r\n    var init = function () {\r\n        someFunctionThatDoesNotExist();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra=0;\r\n        var user= post.domain+"/"+ post.username;\r\n        if(typeof BabblingBrook.FilterKindred[user]!="undefined") {\r\n            extra=10000000;\r\n        }\r\n        var score = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(score);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var init = function () {\r\n        someFunctionThatDoesNotExist();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra=0;\r\n        var user= post.domain+"/"+ post.username;\r\n        if(typeof BabblingBrook.FilterKindred[user]!="undefined") {\r\n            extra=10000000;\r\n        }\r\n        var score = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(score);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 40, 1, 102),
	(18, '2011-11-07 09:10:50', 15, 'a filter Rhythm that errors with a runtime error in the main function.', 'function () {\r\n    \r\n    var init = function () {\r\n        \r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra=0;\r\n        var user= post.domain+ "/" + post.username;\r\n        if(typeof BabblingBrook.FilterKindred[user]!="undefined") {\r\n            extra=10000000;\r\n        }\r\n        var score = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(score);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var init = function () {\r\n        \r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra=0;\r\n        var user= post.domain+ "/" + post.username;\r\n        if(typeof BabblingBrook.FilterKindred[user]!="undefined") {\r\n            extra=10000000;\r\n        }\r\n        var score = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(score);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 41, 1, 103),
	(19, '2011-11-07 09:10:50', 15, 'a filter Rhythm that errors with a custom error that is called by the Rhythm.', 'function () {\r\n    \r\n    var init = function () {\r\n        error_callback("Test rhythm is generating an error.", "filter_rhythm_custom");\r\n    };\r\n    \r\n    var main = function (post) {\r\n        someFunctionThatDoesNotExist();var extra = 0;\r\n        var user = post.domain + "/" + post.username;\r\n        if(typeof BabblingBrook.FilterKindred[user] != "undefined") {\r\n            extra = 10000000;\r\n        }\r\n        var score = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(score);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var init = function () {\r\n        error_callback("Test rhythm is generating an error.", "filter_rhythm_custom");\r\n    };\r\n    \r\n    var main = function (post) {\r\n        someFunctionThatDoesNotExist();var extra = 0;\r\n        var user = post.domain + "/" + post.username;\r\n        if(typeof BabblingBrook.FilterKindred[user] != "undefined") {\r\n            extra = 10000000;\r\n        }\r\n        var score = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(score);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 42, 1, 104),
	(20, '2011-12-14 14:10:37', 7, 'A test ring url - version 2. Used to test that versions are correctly populated in version select lists', 'function(){\r\n    alert("test ring rhythm");\r\n}', 'function(){\r\n    alert("test ring rhythm");\r\n}', 1, 50, 8, 100),
	(21, '2011-12-14 14:10:37', 16, 'A filter rhythm that stores data for the rhythm between sessions', '/**\r\n * After test data is reset this will try to fetch the test data and find nothing, setting data_found to false.\r\n * It will then store some data, setting data_stored to true.\r\n * It will then sort the posts to represent this.\r\n * \r\n * When the page is reloaded, data_found will be set to true and the data will be sorted in a different way. \r\n * \r\n */\r\nfunction () {\r\n    var data_found;\r\n    \r\n    var data_stored;\r\n    \r\n    var onStoreDataError = function () {\r\n        console.error("Store rhythem data error. This should not be called in the test.");\r\n    };\r\n    \r\n    var onDataStored = function () {\r\n        data_stored = true;\r\n        BabblingBrook.Filter.processNextPost();\r\n    };    \r\n    \r\n    var storeData = function () {\r\n        var test_data = {\r\n            some_data : "something"\r\n        };      \r\n        BabblingBrook.Filter.storeData (test_data, onDataStored, onStoreDataError);\r\n    };\r\n    \r\n    var onGetDataError = function () {\r\n        data_found = false;\r\n        storeData();\r\n    };\r\n    \r\n    var onDataFetched = function () {\r\n        data_found = true;\r\n        storeData();\r\n    };  \r\n    var init = function () {\r\n        BabblingBrook.Filter.getData (onDataFetched, onGetDataError);\r\n    };\r\n    \r\n    var main = function (post) {    \r\n        var sort = 0;\r\n        if (data_found === false) {\r\n            if (post.post_id == 130) {\r\n                sort = 2;\r\n            }\r\n            if (post.post_id == 131) {\r\n                sort = 3;\r\n            }\r\n            if (post.post_id == 132) {\r\n                sort = 1;\r\n            }          \r\n        }\r\n        if (data_found === true) {\r\n            if (post.post_id == 130) {\r\n                sort = 2;\r\n            }\r\n            if (post.post_id == 131) {\r\n                sort = 1;\r\n            }\r\n            if (post.post_id == 132) {\r\n                sort = 3;\r\n            }    \r\n        }      \r\n        if (data_stored === false) {\r\n            if (post.post_id == 130) {\r\n                sort = 3;\r\n            }\r\n            if (post.post_id == 131) {\r\n                sort = 2;\r\n            }\r\n            if (post.post_id == 132) {\r\n                sort = 1;\r\n            }    \r\n        }            \r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', '/**\r\n * After test data is reset this will try to fetch the test data and find nothing, setting data_found to false.\r\n * It will then store some data, setting data_stored to true.\r\n * It will then sort the posts to represent this.\r\n * \r\n * When the page is reloaded, data_found will be set to true and the data will be sorted in a different way. \r\n * \r\n */\r\nfunction () {\r\n    var data_found;\r\n    \r\n    var data_stored;\r\n    \r\n    var onStoreDataError = function () {\r\n        console.error("Store rhythem data error. This should not be called in the test.");\r\n    };\r\n    \r\n    var onDataStored = function () {\r\n        data_stored = true;\r\n        BabblingBrook.Filter.processNextPost();\r\n    };    \r\n    \r\n    var storeData = function () {\r\n        var test_data = {\r\n            some_data : "something"\r\n        };      \r\n        BabblingBrook.Filter.storeData (test_data, onDataStored, onStoreDataError);\r\n    };\r\n    \r\n    var onGetDataError = function () {\r\n        data_found = false;\r\n        storeData();\r\n    };\r\n    \r\n    var onDataFetched = function () {\r\n        data_found = true;\r\n        storeData();\r\n    };  \r\n    var init = function () {\r\n        BabblingBrook.Filter.getData (onDataFetched, onGetDataError);\r\n    };\r\n    \r\n    var main = function (post) {    \r\n        var sort = 0;\r\n        if (data_found === false) {\r\n            if (post.post_id == 130) {\r\n                sort = 2;\r\n            }\r\n            if (post.post_id == 131) {\r\n                sort = 3;\r\n            }\r\n            if (post.post_id == 132) {\r\n                sort = 1;\r\n            }          \r\n        }\r\n        if (data_found === true) {\r\n            if (post.post_id == 130) {\r\n                sort = 2;\r\n            }\r\n            if (post.post_id == 131) {\r\n                sort = 1;\r\n            }\r\n            if (post.post_id == 132) {\r\n                sort = 3;\r\n            }    \r\n        }      \r\n        if (data_stored === false) {\r\n            if (post.post_id == 130) {\r\n                sort = 3;\r\n            }\r\n            if (post.post_id == 131) {\r\n                sort = 2;\r\n            }\r\n            if (post.post_id == 132) {\r\n                sort = 1;\r\n            }    \r\n        }            \r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 1, 56, 1, 128),
	(22, '2011-12-14 14:10:37', 17, 'test filter that only fetches a block of posts by its date and filters it down to the middle two.', '/**\r\n * Filters out all the posts except for the posts within the date range\r\n */\r\nfunction () {\r\n    \r\n    var init = function () {\r\n		BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var timestamp = parseInt(post.timestamp);  \r\n        var sort = 0;\r\n        if (timestamp < 1320843600 || timestamp >  1320847200) {        \r\n       		sort = -10000;\r\n        } else {           \r\n          	sort = timestamp;\r\n        }\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', '/**\r\n * Filters out all the posts except for the posts within the date range\r\n */\r\nfunction () {\r\n    \r\n    var init = function () {\r\n		BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var timestamp = parseInt(post.timestamp);  \r\n        var sort = 0;\r\n        if (timestamp < 1320843600 || timestamp >  1320847200) {        \r\n       		sort = -10000;\r\n        } else {           \r\n          	sort = timestamp;\r\n        }\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 1, 58, 1, 133),
	(23, '2011-11-30 15:15:23', 18, 'A test rhythm for suggesting user tags', 'function () {\r\n    var main = function () {\r\n       var suggestions = [\r\n            {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test user stream",\r\n                "version":"0/0/0"                \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    var main = function () {\r\n       var suggestions = [\r\n            {\r\n                "domain":"cobaltcascade.localhost",                \r\n                "username":"test",\r\n                "name":"test user stream",\r\n                "version":"0/0/0"                \r\n            }\r\n        ];\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        main : main\r\n    };\r\n}', 2, 59, 5, 118),
	(24, '2011-11-30 15:15:23', 19, 'A test rhythm that console logs params that are passed to it.', 'function () {\r\n    \r\n    var init = function () {\r\n        var params = BabblingBrook.Filter.getClientParams();\r\n        console.debug(params);\r\n        BabblingBrook.Filter.testvar = "init called";\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra = 0;\r\n        var user = post.domain + "/" + post.username;\r\n        extra = 0\r\n        var sort = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 'function () {\r\n    \r\n    var init = function () {\r\n        var params = BabblingBrook.Filter.getClientParams();\r\n        console.debug(params);\r\n        BabblingBrook.Filter.testvar = "init called";\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var extra = 0;\r\n        var user = post.domain + "/" + post.username;\r\n        extra = 0\r\n        var sort = post.timestamp + extra;\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 60, 1, 118),
	(10000, '2011-11-08 09:10:40', 10000, 'Sort items by date, with the oldest first.', '\nfunction(){var main=function(post){var sort_value=10000000000-post.timestamp;BabblingBrook.Filter.processNextPost(sort_value);};return{main:main};}', 'function () {\r\n	var main = function (post) {\r\n      var sort_value = 10000000000 - post.timestamp;\r\n      BabblingBrook.Filter.processNextPost(sort_value);\r\n	};\r\n  \r\n	return {\r\n      main : main\r\n	};\r\n}', 2, 10008, 1, 10006),
	(10002, '2013-06-14 09:20:07', 10002, 'Sort items by date, with the newest first.', '\nfunction(){var main=function(post){var sort_value=post.timestamp;BabblingBrook.Filter.processNextPost(sort_value);};return{main:main};}', 'function () {\r\n	var main = function (post) {\r\n      var sort_value = post.timestamp;\r\n      BabblingBrook.Filter.processNextPost(sort_value);\r\n	};\r\n  \r\n	return {\r\n      main : main\r\n	};\r\n}', 2, 10014, 1, 10013),
	(10008, '2013-06-18 10:00:35', 10008, 'Order the results by the take value that user sky has given the main value.', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;calculateSort();}};var calculateSort=function(){var post_id=post.post_id;var sort=0;if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys filter error. Fetching takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post;if(sky_takes_fetched===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;if(block_numbers_length===0){BabblingBrook.Filter.processNextPost(0);}\nfor(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n    var sky_takes_fetched = false;\r\n    \r\n    var sky_takes_fetched_count = 0;\r\n    \r\n    var sky_takes = [];\r\n    \r\n    var stream_name;\r\n    \r\n    var stream_version;\r\n    \r\n    var stream_domain;\r\n    \r\n    var stream_username;    \r\n    \r\n    var post;\r\n    \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n            calculateSort();\r\n        }\r\n    };\r\n    \r\n    var calculateSort = function () {  \r\n        var post_id = post.post_id; \r\n        var sort = 0;\r\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys filter error. Fetching takes failed.");\r\n    };\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (current_post) {\r\n        post = current_post;\r\n        if (sky_takes_fetched === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;\r\n\r\n            if (block_numbers_length === 0) {\r\n                BabblingBrook.Filter.processNextPost(0);\r\n            }\r\n            for (var i = 0; i < block_numbers_length; i++) {      \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];\r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));           	\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10026, 1, 10051),
	(10009, '2013-06-19 09:21:50', 10009, 'Only used in the sky/bug stream, removes bugs that have been closed and then orders the results by the take value that user sky has given the main value.', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nvar status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(isNaN(status_value)===false){if(status_value===3||status_value===4||status_value===5||status_value===6){sort=-10000;}}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=8\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        } \r\n    };\r\n      \r\n    var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;   \r\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);\r\n        if (isNaN(status_value) === false) {\r\n            if (status_value === 3 || status_value === 4 || status_value === 5 || status_value === 6) {\r\n                sort = -10000;\r\n            }\r\n        }    \r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n  \r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching status takes failed.");\r\n    };\r\n  \r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);    \r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post\r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream&field_id=8\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length)); \r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 2, 10027, 1, 10066),
	(10010, '2013-06-21 14:35:18', 10010, 'Only used in the sky/bug stream, removes bugs that are open and then orders the results by newest date first.', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nvar status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(isNaN(status_value)===false){if(status_value===3||status_value===4||status_value===5||status_value===6){sort=post.timestamp;}else{sort=-10000;}}else{sort=-10000;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=7\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        } \r\n    };\r\n      \r\n    var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;   \r\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);\r\n        if (isNaN(status_value) === false) {\r\n            if (status_value === 3 || status_value === 4 || status_value === 5 || status_value === 6) {\r\n                sort = post.timestamp;\r\n            } else {\r\n                sort = -10000;\r\n            }\r\n        } else {\r\n            sort = -10000;\r\n        }    \r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n  \r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching status takes failed.");\r\n    };\r\n  \r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);         \r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post\r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream&field_id=7\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length)); \r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 2, 10028, 1, 10067),
	(10011, '2013-06-21 14:58:05', 10011, 'Displays the most popular posts from the last hour. Weighting more recent posts with a higher score.', '\nfunction(){var block_takes_fetched=[];var calculate_ready=false;var takes={};var stream_name;var stream_version;var stream_domain;var stream_username;var now;var an_hour_ago;var post;var calculateSort=function(){var value=0;if(post.timestamp<an_hour_ago||post.timestamp>now){value=-10000;}else{for(var domain in takes[post.post_id]){for(var username in takes[post.post_id][domain]){value+=parseInt(takes[post.post_id][domain][username].value);}}}\nBabblingBrook.Filter.processNextPost(value);};var onTakesFetchedError=function(){console.error("error fetching takes for popular in hour sort");};var onTakesFetched=function(block_number,block_takes){jQuery.extend(takes,block_takes);block_takes_fetched.push(block_number);if(block_takes_fetched.length===BabblingBrook.Filter.getBlockNumbers().length){calculate_ready=true;calculateSort();}};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);now=Math.round(new Date().getTime()/1000);an_hour_ago=now-(60*60);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post;if(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getstreamtakes?username=sky&block_number=\'+block_number;BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_number));}}else{calculateSort();}};return{init:init,main:main};}', '/**\r\n * Fetches all the takes for all the blocks that posts have been fetched from.\r\n * It then sums the takes for each post in the last day and discards others.\r\n * \r\n */\r\nfunction () {\r\n\r\n	var block_takes_fetched = [];\r\n  \r\n	var calculate_ready = false;\r\n  \r\n	var takes = {};\r\n  \r\n	var stream_name;\r\n  \r\n	var stream_version;\r\n  \r\n	var stream_domain;\r\n  \r\n	var stream_username;    \r\n  \r\n	var now;\r\n  \r\n	var an_hour_ago;\r\n    \r\n    var post;\r\n    \r\n	var calculateSort = function () {      \r\n		var value = 0;      \r\n		if (post.timestamp < an_hour_ago || post.timestamp > now) {\r\n			value = -10000;\r\n		} else {   \r\n			for (var domain in takes[post.post_id]) {       \r\n				for (var username in takes[post.post_id][domain]) {          \r\n					value += parseInt(takes[post.post_id][domain][username].value);\r\n				}\r\n			}\r\n		}\r\n        BabblingBrook.Filter.processNextPost(value);\r\n	};\r\n  \r\n	var onTakesFetchedError = function () {\r\n		console.error("error fetching takes for popular in hour sort");\r\n	};\r\n    \r\n	var onTakesFetched = function (block_number, block_takes) {\r\n		jQuery.extend(takes, block_takes);\r\n		block_takes_fetched.push(block_number);      \r\n		if (block_takes_fetched.length === BabblingBrook.Filter.getBlockNumbers().length) {\r\n			calculate_ready = true;\r\n			calculateSort();\r\n		}\r\n	};\r\n  \r\n	var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);               \r\n		now = Math.round(new Date().getTime() / 1000);\r\n		an_hour_ago = now - (60 * 60);\r\n		BabblingBrook.Filter.processNextPost();\r\n	};\r\n  \r\n	var main = function (current_post) {\r\n        post = current_post;\r\n		if (calculate_ready === false) {            \r\n			var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n			for (var i = 0; i < block_numbers_length; i++) {           \r\n				var block_number = BabblingBrook.Filter.getBlockNumbers()[i];   \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n						stream_name + \'/\' + stream_version + \'/getstreamtakes?username=sky&block_number=\' + block_number;\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_number)); \r\n			}       \r\n		} else {\r\n			calculateSort();\r\n		}\r\n	};\r\n  \r\n	return {\r\n      init : init,\r\n      main : main\r\n	};\r\n}', 2, 10029, 1, 10068),
	(10012, '2013-07-03 06:57:07', 10012, 'Displays the most popular posts from the last hour. Weighting more recent posts with a higher score.', '\nfunction(){var block_takes_fetched=[];var calculate_ready=false;var takes={};var stream_name;var stream_version;var stream_domain;var stream_username;var now;var an_hour_ago;var post;var calculateSort=function(){var value=0;if(post.timestamp<an_hour_ago||post.timestamp>now){value=-10000;}else{for(var domain in takes[post.post_id]){for(var username in takes[post.post_id][domain]){value+=parseInt(takes[post.post_id][domain][username].value);}}}\nBabblingBrook.Filter.processNextPost(value);};var onTakesFetchedError=function(){console.error("error fetching takes for popular in hour sort");};var onTakesFetched=function(block_number,block_takes){jQuery.extend(takes,block_takes);block_takes_fetched.push(block_number);if(block_takes_fetched.length===BabblingBrook.Filter.getBlockNumbers().length){calculate_ready=true;calculateSort();}};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);now=Math.round(new Date().getTime()/1000);an_hour_ago=now-(60*60*24);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post;if(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getstreamtakes?username=sky&block_number=\'+block_number;BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_number));}}else{calculateSort();}};return{init:init,main:main};}', '/**\r\n * Fetches all the takes for all the blocks that posts have been fetched from.\r\n * It then sums the takes for each post in the last day and discards others.\r\n * \r\n */\r\nfunction () {\r\n\r\n	var block_takes_fetched = [];\r\n  \r\n	var calculate_ready = false;\r\n  \r\n	var takes = {};\r\n  \r\n	var stream_name;\r\n  \r\n	var stream_version;\r\n  \r\n	var stream_domain;\r\n  \r\n	var stream_username;    \r\n  \r\n	var now;\r\n  \r\n	var an_hour_ago;\r\n    \r\n    var post;\r\n    \r\n	var calculateSort = function () {      \r\n		var value = 0;      \r\n		if (post.timestamp < an_hour_ago || post.timestamp > now) {\r\n			value = -10000;\r\n		} else {   \r\n			for (var domain in takes[post.post_id]) {       \r\n				for (var username in takes[post.post_id][domain]) {          \r\n					value += parseInt(takes[post.post_id][domain][username].value);\r\n				}\r\n			}\r\n		}\r\n        BabblingBrook.Filter.processNextPost(value);\r\n	};\r\n  \r\n	var onTakesFetchedError = function () {\r\n		console.error("error fetching takes for popular in hour sort");\r\n	};\r\n    \r\n	var onTakesFetched = function (block_number, block_takes) {\r\n		jQuery.extend(takes, block_takes);\r\n		block_takes_fetched.push(block_number);      \r\n		if (block_takes_fetched.length === BabblingBrook.Filter.getBlockNumbers().length) {\r\n			calculate_ready = true;\r\n			calculateSort();\r\n		}\r\n	};\r\n  \r\n	var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);            \r\n		now = Math.round(new Date().getTime() / 1000);\r\n		an_hour_ago = now - (60 * 60 * 24);\r\n		BabblingBrook.Filter.processNextPost();\r\n	};\r\n  \r\n	var main = function (current_post) {\r\n        post = current_post;\r\n		if (calculate_ready === false) {            \r\n			var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n			for (var i = 0; i < block_numbers_length; i++) {           \r\n				var block_number = BabblingBrook.Filter.getBlockNumbers()[i];   \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n						stream_name + \'/\' + stream_version + \'/getstreamtakes?username=sky&block_number=\' + block_number;\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_number)); \r\n			}       \r\n		} else {\r\n			calculateSort();\r\n		}\r\n	};\r\n  \r\n	return {\r\n      init : init,\r\n      main : main\r\n	};\r\n}', 2, 10030, 1, 10076),
	(10013, '2013-07-03 06:58:12', 10013, 'Displays the most popular posts from the last hour. Weighting more recent posts with a higher score.', '\nfunction(){var block_takes_fetched=[];var calculate_ready=false;var takes={};var stream_name;var stream_version;var stream_domain;var stream_username;var now;var an_hour_ago;var post;var calculateSort=function(){var value=0;if(post.timestamp<an_hour_ago||post.timestamp>now){value=-10000;}else{for(var domain in takes[post.post_id]){for(var username in takes[post.post_id][domain]){value+=parseInt(takes[post.post_id][domain][username].value);}}}\nBabblingBrook.Filter.processNextPost(value);};var onTakesFetchedError=function(){console.error("error fetching takes for popular in hour sort");};var onTakesFetched=function(block_number,block_takes){jQuery.extend(takes,block_takes);block_takes_fetched.push(block_number);if(block_takes_fetched.length===BabblingBrook.Filter.getBlockNumbers().length){calculate_ready=true;calculateSort();}};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);now=Math.round(new Date().getTime()/1000);an_hour_ago=now-(60*60*24*7);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post;if(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getstreamtakes?username=sky&block_number=\'+block_number;BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_number));}}else{calculateSort();}};return{init:init,main:main};}', '/**\r\n * Fetches all the takes for all the blocks that posts have been fetched from.\r\n * It then sums the takes for each post in the last day and discards others.\r\n * \r\n */\r\nfunction () {\r\n\r\n	var block_takes_fetched = [];\r\n  \r\n	var calculate_ready = false;\r\n  \r\n	var takes = {};\r\n  \r\n	var stream_name;\r\n  \r\n	var stream_version;\r\n  \r\n	var stream_domain;\r\n  \r\n	var stream_username;    \r\n  \r\n	var now;\r\n  \r\n	var an_hour_ago;\r\n    \r\n    var post;\r\n    \r\n	var calculateSort = function () {      \r\n		var value = 0;      \r\n		if (post.timestamp < an_hour_ago || post.timestamp > now) {\r\n			value = -10000;\r\n		} else {   \r\n			for (var domain in takes[post.post_id]) {       \r\n				for (var username in takes[post.post_id][domain]) {          \r\n					value += parseInt(takes[post.post_id][domain][username].value);\r\n				}\r\n			}\r\n		}\r\n        BabblingBrook.Filter.processNextPost(value);\r\n	};\r\n  \r\n	var onTakesFetchedError = function () {\r\n		console.error("error fetching takes for popular in hour sort");\r\n	};\r\n    \r\n	var onTakesFetched = function (block_number, block_takes) {\r\n		jQuery.extend(takes, block_takes);\r\n		block_takes_fetched.push(block_number);      \r\n		if (block_takes_fetched.length === BabblingBrook.Filter.getBlockNumbers().length) {\r\n			calculate_ready = true;\r\n			calculateSort();\r\n		}\r\n	};\r\n  \r\n	var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);                       \r\n		now = Math.round(new Date().getTime() / 1000);\r\n		an_hour_ago = now - (60 * 60 * 24 * 7);\r\n		BabblingBrook.Filter.processNextPost();\r\n	};\r\n  \r\n	var main = function (current_post) {\r\n        post = current_post;\r\n		if (calculate_ready === false) {            \r\n			var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n			for (var i = 0; i < block_numbers_length; i++) {           \r\n				var block_number = BabblingBrook.Filter.getBlockNumbers()[i];   \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n						stream_name + \'/\' + stream_version + \'/getstreamtakes?username=sky&block_number=\' + block_number;\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_number)); \r\n			}       \r\n		} else {\r\n			calculateSort();\r\n		}\r\n	};\r\n  \r\n	return {\r\n      init : init,\r\n      main : main\r\n	};\r\n}', 2, 10031, 1, 10077),
	(10014, '2013-07-03 10:15:52', 10014, 'Removes tasks that have been completed and orders the results by the take value that user sky has given the main value', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){console.debug(data);var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort_value=0;var post_id=post.post_id;if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort_value=sky_takes[\'o_\'+post_id];}else{sort_value=0;}\nvar status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(isNaN(status_value)===false){if(status_value===3){sort_value=-10000;}}\nBabblingBrook.Filter.processNextPost(sort_value);};var onTakesFetchedError=function(){console.error("skys task priority filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=6\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n    var sky_takes_fetched = false;\r\n    \r\n    var sky_takes_fetched_count = 0;\r\n    \r\n    var sky_status_takes_fetched = false;\r\n    \r\n    var sky_status_takes_fetched_count = 0;\r\n    \r\n    var calculate_ready = false;  \r\n    \r\n    var sky_takes = [];\r\n    \r\n    var sky_status_takes = [];\r\n    \r\n    var stream_name;\r\n    \r\n    var stream_version;\r\n    \r\n    var stream_domain;\r\n    \r\n    var stream_username;  \r\n    \r\n    var post;\r\n    \r\n    var onTakesFetched = function (block_numbers_length, data) {   \r\nconsole.debug(data);        \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        } \r\n    };\r\n    \r\n    var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n    \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort_value = 0;\r\n        var post_id = post.post_id;   \r\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort_value = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort_value = 0;\r\n        }\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     \r\n        if (isNaN(status_value) === false) {\r\n            if (status_value === 3) {\r\n                sort_value = -10000;\r\n            }\r\n        }      \r\n        BabblingBrook.Filter.processNextPost(sort_value);\r\n    };\r\n    \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching takes failed.");\r\n    };\r\n    \r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);              \r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (current_post) {\r\n        post = current_post\r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];         \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=6\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10032, 1, 10078),
	(10015, '2013-07-03 10:40:30', 10015, 'Order the results by the take value that user sky has given the main value.', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nvar status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(isNaN(status_value)===true||status_value!==2){sort=-10000;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys task priority filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post;if(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n    var sky_takes_fetched = false;\r\n    \r\n    var sky_takes_fetched_count = 0;\r\n    \r\n    var sky_status_takes_fetched = false;\r\n    \r\n    var sky_status_takes_fetched_count = 0;\r\n    \r\n    var calculate_ready = false;  \r\n    \r\n    var sky_takes = [];\r\n    \r\n    var sky_status_takes = [];\r\n    \r\n    var stream_name;\r\n    \r\n    var stream_version;\r\n    \r\n    var stream_domain;\r\n    \r\n    var stream_username;  \r\n    \r\n    var post;\r\n    \r\n    var onTakesFetched = function (block_numbers_length, data) {        \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        } \r\n    };\r\n    \r\n    var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n    \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;   \r\n        if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);    \r\n        if (isNaN(status_value) === true || status_value !== 2) {\r\n            sort = -10000;\r\n        }      \r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching takes failed.");\r\n    };\r\n    \r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    \r\n    \r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);              \r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (current_post) {\r\n        post = current_post;\r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];   \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));                \r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));                \r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10033, 1, 10081),
	(10016, '2013-07-03 11:00:27', 10016, 'When you take something made by a user, you become closer to them.', '\nfunction(){var main=function(take){var scores={[full_username:take.post_domain+"/"+take.post_username,score:5]};BabblingBrook.Kindred.processNextTake(scores);};return{main:main}};', 'function(){\r\n       \r\n    var main = function (take) {\r\n        var scores = {\r\n            [\r\n                full_username : take.post_domain + "/" + take.post_username,\r\n                score : 5\r\n            ]\r\n        };\r\n        BabblingBrook.Kindred.processNextTake(scores);\r\n    };\r\n\r\n    return {\r\n        main  : main\r\n    }\r\n};', 2, 10034, 2, 10085),
	(10017, '2013-07-10 05:41:21', 10017, 'Sorts the latest five thousand posts by popularity.', '\nfunction(){var block_takes_fetched=[];var calculate_ready=false;var takes={};var stream_name;var stream_version;var stream_domain;var stream_username;var post;var qty=5000;var calculateSort=function(){var value=0;for(var domain in takes[post.post_id]){for(var username in takes[post.post_id][domain]){value+=parseInt(takes[post.post_id][domain][username].value);}}\nBabblingBrook.Filter.processNextPost(value);};var onTakesFetchedError=function(){console.error("error fetching takes for popular in hour sort");};var onTakesFetched=function(block_number,block_takes){jQuery.extend(takes,block_takes);block_takes_fetched.push(block_number);if(block_takes_fetched.length===BabblingBrook.Filter.getBlockNumbers().length){calculate_ready=true;calculateSort();}};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setSortQty(qty);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post;if(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getstreamtakes?username=sky&block_number=\'+block_number;BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_number));}}else{calculateSort();}};return{init:init,main:main};}', '/**\r\n * Fetches all the takes for all the blocks that posts have been fetched from.\r\n * It then sums the takes for each post in the last day and discards others.\r\n * \r\n */\r\nfunction () {\r\n\r\n	var block_takes_fetched = [];\r\n  \r\n	var calculate_ready = false;\r\n  \r\n	var takes = {};\r\n  \r\n	var stream_name;\r\n  \r\n	var stream_version;\r\n  \r\n	var stream_domain;\r\n  \r\n	var stream_username;    \r\n    \r\n    var post;\r\n    \r\n    var qty = 5000;\r\n    \r\n	var calculateSort = function () {      \r\n		var value = 0;      \r\n        for (var domain in takes[post.post_id]) {       \r\n            for (var username in takes[post.post_id][domain]) {          \r\n                value += parseInt(takes[post.post_id][domain][username].value);\r\n            }\r\n        }\r\n        BabblingBrook.Filter.processNextPost(value);\r\n	};\r\n  \r\n	var onTakesFetchedError = function () {\r\n		console.error("error fetching takes for popular in hour sort");\r\n	};\r\n    \r\n	var onTakesFetched = function (block_number, block_takes) {\r\n		jQuery.extend(takes, block_takes);\r\n		block_takes_fetched.push(block_number);      \r\n		if (block_takes_fetched.length === BabblingBrook.Filter.getBlockNumbers().length) {\r\n			calculate_ready = true;\r\n			calculateSort();\r\n		}\r\n	};\r\n  \r\n	var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);                       \r\n		BabblingBrook.Filter.setSortQty(qty);\r\n		BabblingBrook.Filter.processNextPost();\r\n	};\r\n  \r\n	var main = function (current_post) {\r\n        post = current_post;\r\n		if (calculate_ready === false) {            \r\n			var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n			for (var i = 0; i < block_numbers_length; i++) {           \r\n				var block_number = BabblingBrook.Filter.getBlockNumbers()[i];   \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n						stream_name + \'/\' + stream_version + \'/getstreamtakes?username=sky&block_number=\' + block_number;\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_number)); \r\n			}       \r\n		} else {\r\n			calculateSort();\r\n		}\r\n	};\r\n  \r\n	return {\r\n      init : init,\r\n      main : main\r\n	};\r\n}', 2, 10035, 1, 10096),
	(10018, '2013-07-24 08:15:02', 10018, 'A simple kindred rhythm that creates kindred relationships with users who submit content you vote on.', '\nfunction(){var main=function(take){var score=0;if(take.value>0){score=1;}else{score=-1;}\nvar scores=[{full_username:take.post_domain+"/"+take.post_username,score:score}];BabblingBrook.Kindred.processNextTake(scores);};return{main:main};}', 'function (){\r\n       \r\n    var main = function (take) {\r\n        var score = 0;\r\n        if (take.value > 0) {\r\n            score = 1;\r\n        } else {\r\n            score = -1;\r\n        }\r\n        var scores = [\r\n            {\r\n                full_username : take.post_domain + "/" + take.post_username,\r\n                score : score\r\n            }\r\n        ];\r\n        BabblingBrook.Kindred.processNextTake(scores);\r\n    };\r\n\r\n    return {\r\n        main  : main\r\n    };\r\n}', 2, 10036, 2, 10108),
	(10019, '2013-07-25 05:45:30', 10019, 'A simple stream suggestion rhythm that suggests streams that your nearest kindred are subscribed to.', '\nfunction(){var user;var client_domain;var suggestion_type;var kindred;var user_subscriptions;var declined_suggestions;var max_kindred_to_process=10;var kindred_subscriptions=[];var stream_scores={};var final_scores;var suggestions=[];var max_kindred_points=100;var kindred_points_divider=0.8;var max_subscription_points=100;var subscription_points_divider=0.8;var max_results_to_return=25;var init_done=false;var isInitDone=function(){if(Object.keys(kindred_subscriptions).length===max_kindred_to_process){if(typeof user_subscriptions!==\'undefined\'&&typeof declined_suggestions!==\'undefined\'){if(init_done===false){init_done=true;BabblingBrook.Suggestion.processSuggestions();return true;}}}\nreturn false;};var onUserSubscriptionsFetched=function(data){user_subscriptions=data.subscriptions;isInitDone();};var onUserDeclinedSuggestionsFetched=function(data){declined_suggestions=data.suggestions_declined;isInitDone();};var onKindredSubscriptionsFetched=function(index,data){kindred_subscriptions[index]=data.subscriptions;isInitDone();};var onKindredSubscriptionsFetchedError=function(index){kindred_subscriptions[index]=[];isInitDone();};var onUserSubscriptionsFetchedError=function(){throw\'Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm\';};var onUserDeclinedSuggestionsFetchedError=function(){throw\'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';};var init=function(){user=BabblingBrook.Suggestion.getUser();client_domain=BabblingBrook.Suggestion.getClientDomain();suggestion_type=BabblingBrook.Suggestion.getSuggestionType();var url=user.domain+\'/\'+user.username+\'/clientdata/getstreamsubscriptions/?client_domain=\'+client_domain;BabblingBrook.Suggestion.getMiscData(url,onUserSubscriptionsFetched,onUserSubscriptionsFetchedError);url=user.domain+\'/\'+user.username+\'/clientdata/getdeclinedsuggestions/?client_domain=\'+client_domain+\'&type=\'+suggestion_type;BabblingBrook.Suggestion.getMiscData(url,onUserDeclinedSuggestionsFetched,onUserDeclinedSuggestionsFetchedError);kindred=BabblingBrook.Suggestion.getKindred();var kindred_length=Object.keys(kindred).length;if(kindred_length<max_kindred_to_process){max_kindred_to_process=kindred_length;}\nvar i=0;for(var full_username in kindred){if(i===max_kindred_to_process){break;}\nvar kindred_domain=BabblingBrook.Library.extractDomain(full_username);var kindred_username=BabblingBrook.Library.extractUsername(full_username);var url=kindred_domain+\'/\'+kindred_username+\'/clientdata/getstreamsubscriptions/?client_domain=\'+client_domain;BabblingBrook.Suggestion.getMiscData(url,onKindredSubscriptionsFetched.bind(null,i),onKindredSubscriptionsFetchedError.bind(null,i));i++;}\nisInitDone();};var createScoreStream=function(sub){var stream_name=sub.domain+\'/\'+sub.username+\'/\'+sub.name;if(typeof stream_scores[stream_name]===\'undefined\'){stream_scores[stream_name]=sub;stream_scores[stream_name].score=0;}};var calculateScores=function(){for(var i=0;i<max_kindred_to_process;i++){for(var j=0;j<kindred_subscriptions[i].length;j++){var sub=kindred_subscriptions[i][j];createScoreStream(sub);var kindred_divider=kindred_points_divider*(i+1);var kindred_score=max_kindred_points/kindred_divider;var position_divider=subscription_points_divider*(j+1);var position_score=max_subscription_points/position_divider;var stream_name=sub.domain+\'/\'+sub.username+\'/\'+sub.name;stream_scores[stream_name].score+=Math.round(position_score+kindred_score);}}};var sortScores=function(){var final_scores=[];for(var i in stream_scores){if(stream_scores[i].score>0){final_scores.push(stream_scores[i]);}}\nfinal_scores.sort(function(a,b){return b.score-a.score;});for(var j=0;j<final_scores.length;j++){suggestions.push({"domain":final_scores[j].domain,"username":final_scores[j].username,"name":final_scores[j].name,"version":final_scores[j].version});}};var removeSubscribedStreams=function(){for(var i=0;i<user_subscriptions.length;i++){for(var j in stream_scores){var sub=user_subscriptions[i];var suggestion=stream_scores[j];if(sub.domain===suggestion.domain&&sub.username===suggestion.username&&sub.name===suggestion.name){suggestion.score=0;}}}};var removeDeclinedSuggestions=function(){for(var i=0;i<declined_suggestions.length;i++){for(var j in stream_scores){var declined=declined_suggestions[i];var suggestion=stream_scores[j];if(declined.domain===suggestion.domain&&declined.username===suggestion.username&&declined.name===suggestion.name){suggestion.score=0;}}}};var main=function(){calculateScores();removeSubscribedStreams();removeDeclinedSuggestions();sortScores();BabblingBrook.Suggestion.suggestionsGenerated(suggestions);};return{init:init,main:main};}', ' /** \r\n * Fetches the stream subscriptions of the users nearest kindred and then selects the most popular that\r\n * this user is not subscribed to already and has not already declined.\r\n *\r\n * Streams get more points for being higher up the kindred list and \r\n * more points for being close to the start of the subscription list.\r\n */\r\nfunction () {\r\n    var user;\r\n	var client_domain;\r\n	var suggestion_type;\r\n	var kindred;\r\n	var user_subscriptions;\r\n	var declined_suggestions;\r\n	\r\n	/**\r\n	 * @type {integer} The maximum number of kindred subscriptions to fetch.\r\n	 */\r\n	var max_kindred_to_process = 10;\r\n	var kindred_subscriptions = [];\r\n    \r\n	/**\r\n	 * Scores for each stream indexed by domain/username/name.\r\n	 */\r\n    var stream_scores = {};\r\n	var final_scores;\r\n	\r\n	var suggestions = [];\r\n	\r\n	var max_kindred_points = 100;\r\n	var kindred_points_divider = 0.8;	\r\n	var max_subscription_points = 100;\r\n	var subscription_points_divider = 0.8;\r\n	\r\n	var max_results_to_return = 25;\r\n	\r\n	var init_done = false;\r\n	\r\n	/**\r\n	 * Checks to see if all requested data has returned before starting the suggestion generation.\r\n	 */\r\n	var isInitDone = function () {    \r\n		if (Object.keys(kindred_subscriptions).length === max_kindred_to_process) {              \r\n			if (typeof user_subscriptions !== \'undefined\' && typeof declined_suggestions !== \'undefined\') {           \r\n				if (init_done === false) {	\r\n					init_done = true;\r\n					BabblingBrook.Suggestion.processSuggestions();\r\n					return true;\r\n				}\r\n			}\r\n		}\r\n		return false;\r\n	};\r\n	\r\n	var onUserSubscriptionsFetched = function (data) {\r\n		user_subscriptions = data.subscriptions;\r\n		isInitDone();\r\n	};\r\n	\r\n	var onUserDeclinedSuggestionsFetched = function (data) {	       \r\n		declined_suggestions = data.suggestions_declined;\r\n		isInitDone();\r\n	};	\r\n	\r\n	var onKindredSubscriptionsFetched = function (index, data) {\r\n		kindred_subscriptions[index] = data.subscriptions;\r\n		isInitDone();\r\n	};	\r\n\r\n	/**\r\n	 * If a kindreds subscription data does not respond then just\r\n	 * use an empty array, so that the rhythm can proceed without it.\r\n	 * \r\n	 * @param index The id of this kindred in the kindred_subscriptions array.\r\n	 *\r\n	 * return {void}\r\n	 */\r\n	var onKindredSubscriptionsFetchedError = function (index) {\r\n		kindred_subscriptions[index] = [];\r\n		isInitDone();\r\n	};	\r\n	\r\n	var onUserSubscriptionsFetchedError = function () {\r\n		throw \'Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm\';\r\n	};	\r\n	\r\n	var onUserDeclinedSuggestionsFetchedError = function () {\r\n		throw \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\r\n	};	\r\n	\r\n    var init = function () {\r\n        user = BabblingBrook.Suggestion.getUser();\r\n		client_domain = BabblingBrook.Suggestion.getClientDomain();\r\n		suggestion_type = BabblingBrook.Suggestion.getSuggestionType();\r\n		\r\n        var url = user.domain + \'/\' + user.username + \r\n            \'/clientdata/getstreamsubscriptions/?client_domain=\' + client_domain;\r\n        BabblingBrook.Suggestion.getMiscData(\r\n			url, \r\n			onUserSubscriptionsFetched,\r\n			onUserSubscriptionsFetchedError\r\n		);\r\n	\r\n        url = user.domain + \'/\' + user.username + \r\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \r\n			\'&type=\' + suggestion_type;\r\n        BabblingBrook.Suggestion.getMiscData(\r\n			url, \r\n			onUserDeclinedSuggestionsFetched,\r\n			onUserDeclinedSuggestionsFetchedError\r\n		); 		\r\n		\r\n		kindred = BabblingBrook.Suggestion.getKindred();  \r\n		var kindred_length = Object.keys(kindred).length;\r\n		if (kindred_length < max_kindred_to_process) {\r\n			max_kindred_to_process = kindred_length;\r\n		}     \r\n        var i = 0;\r\n        for (var full_username in kindred) {\r\n            if (i === max_kindred_to_process) {\r\n                break;    \r\n            }   \r\n			var kindred_domain = BabblingBrook.Library.extractDomain(full_username);\r\n			var kindred_username = BabblingBrook.Library.extractUsername(full_username);\r\n			var url = kindred_domain + \'/\' + kindred_username + \r\n				\'/clientdata/getstreamsubscriptions/?client_domain=\' + client_domain;\r\n			BabblingBrook.Suggestion.getMiscData(\r\n				url, \r\n				onKindredSubscriptionsFetched.bind(null, i),\r\n				onKindredSubscriptionsFetchedError.bind(null, i)\r\n			);\r\n            i++;               \r\n		}\r\n		isInitDone();\r\n    };\r\n	\r\n    var createScoreStream = function (sub) { \r\n		var stream_name = sub.domain + \'/\' + sub.username + \'/\' + sub.name;\r\n		if (typeof stream_scores[stream_name] === \'undefined\') {\r\n			stream_scores[stream_name] = sub;\r\n			stream_scores[stream_name].score = 0;\r\n		}\r\n	};\r\n	\r\n	var calculateScores = function () {       \r\n		for (var i = 0; i < max_kindred_to_process; i++) {\r\n			for (var j = 0; j < kindred_subscriptions[i].length; j++) {               \r\n				var sub = kindred_subscriptions[i][j];\r\n				createScoreStream(sub);\r\n				var kindred_divider = kindred_points_divider * (i + 1);\r\n				var kindred_score = max_kindred_points / kindred_divider;\r\n				var position_divider = subscription_points_divider * (j + 1);\r\n				var position_score = max_subscription_points / position_divider;\r\n				var stream_name = sub.domain + \'/\' + sub.username + \'/\' + sub.name;              \r\n				stream_scores[stream_name].score += Math.round(position_score + kindred_score);\r\n			}\r\n		} \r\n	};\r\n	\r\n	var sortScores = function () { \r\n		var final_scores = [];\r\n		for (var i in stream_scores) {\r\n			if (stream_scores[i].score > 0) {\r\n				final_scores.push(stream_scores[i]);\r\n			}\r\n		}\r\n		final_scores.sort(function (a, b) {\r\n			return b.score - a.score;\r\n		});\r\n		for (var j=0; j<final_scores.length; j++) {\r\n			suggestions.push({\r\n                "domain" : final_scores[j].domain,                \r\n                "username" : final_scores[j].username,\r\n                "name" : final_scores[j].name,\r\n                "version" : final_scores[j].version \r\n			});\r\n		}  \r\n	};\r\n	\r\n	var removeSubscribedStreams = function () {         \r\n		for (var i=0; i<user_subscriptions.length; i++) {\r\n			for (var j in stream_scores) {\r\n				var sub = user_subscriptions[i];\r\n				var suggestion = stream_scores[j];\r\n				if (sub.domain === suggestion.domain\r\n					&& sub.username === suggestion.username\r\n					&& sub.name === suggestion.name\r\n				) {\r\n					suggestion.score = 0;\r\n				}\r\n			}\r\n		}\r\n	};	\r\n	\r\n	var removeDeclinedSuggestions = function () { \r\n		for (var i=0; i<declined_suggestions.length; i++) {\r\n			for (var j in stream_scores) {\r\n				var declined = declined_suggestions[i];\r\n				var suggestion = stream_scores[j];\r\n				if (declined.domain === suggestion.domain\r\n					&& declined.username === suggestion.username\r\n					&& declined.name === suggestion.name\r\n				) {\r\n					suggestion.score = 0;\r\n				}\r\n			}\r\n		}\r\n	};	\r\n	\r\n    var main = function () {     \r\n		calculateScores();       \r\n		removeSubscribedStreams();\r\n		removeDeclinedSuggestions();\r\n		sortScores();\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10037, 5, 10125),
	(10020, '2013-07-30 12:09:39', 10020, 'A simple filter suggestion rhythm. Suggests filters from your nearest kindreds subscribed rhythms.', '/**\n * Fetches the stream subscriptions of the users nearest kindred and then selects the most \n * popular filters that this user is not subscribed to already and has not already declined.\n *\n * Filters get more points for being higher up the kindred list and \n * more points for being close to the start of the top of the filter subscription list.\n */\nfunction () {\n    var user;\n	var client_domain;\n	var suggestion_type;\n	var kindred;\n	var user_subscriptions;\n	var declined_suggestions;\n    \n    /**\n     * If there is a stream paramater then only fetch suggestions for that stream,\n     * the stream location is stored in the suggestion paramaters\n     */\n    var params;\n	\n	/**\n	 * @type {integer} The maximum number of kindred subscriptions to fetch.\n	 */\n	var max_kindred_to_process = 30;\n	var kindred_subscriptions = [];\n    \n	/**\n	 * Scores for each stream indexed by domain/username/name.\n	 */\n	var filter_scores = {};\n	var final_scores;\n	\n	var suggestions = [];\n	\n	var max_kindred_points = 100;\n	var kindred_points_divider = 0.8;	\n	var max_subscription_points = 100;\n	var subscription_points_divider = 0.8;\n    /**\n     * A bonus score given if the filter is the first in the stream. \n     */\n    var bonus_score_to_first = 50;\n	\n	var max_results_to_return = 25;\n	\n	var init_done = false;\n	\n	/**\n	 * Checks to see if all requested data has returned before starting the suggestion generation.\n	 */\n	var isInitDone = function () {\n		if (Object.keys(kindred_subscriptions).length === max_kindred_to_process) {       \n			if (typeof user_subscriptions !== \'undefined\' && typeof declined_suggestions !== \'undefined\') {	              \n				if (init_done === false) {	                  \n					init_done = true;\n					BabblingBrook.Suggestion.processSuggestions();\n					return true;\n				}\n			}\n		}\n		return false;\n	};\n	\n	var onUserSubscriptionsFetched = function (data) {\n		user_subscriptions = data.subscriptions;\n		isInitDone();\n	};\n	\n	var onUserDeclinedSuggestionsFetched = function (data) {	\n		declined_suggestions = data.suggestions_declined;\n		isInitDone();\n	};	\n	\n	var onKindredSubscriptionsFetched = function (index, data) {       \n		kindred_subscriptions[index] = data.subscriptions;\n		isInitDone();\n	};	\n\n	/**\n	 * If a kindreds subscription data does not respond then just\n	 * use an empty array, so that the rhythm can proceed without it.\n	 * \n	 * @param index The id of this kindred in the kindred_subscriptions array.\n	 *\n	 * return {void}\n	 */\n	var onKindredSubscriptionsFetchedError = function (index) {\n		kindred_subscriptions[index] = [];\n		isInitDone();\n	};	\n	\n	var onUserSubscriptionsFetchedError = function () {\n		throw \'Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm\';\n	};	\n	\n	var onUserDeclinedSuggestionsFetchedError = function () {\n		throw \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\n	};	\n	\n    var init = function () {        \n		params = BabblingBrook.Suggestion.getParamaters();\n        \n        user = BabblingBrook.Suggestion.getUser();\n		client_domain = BabblingBrook.Suggestion.getClientDomain();\n		suggestion_type = BabblingBrook.Suggestion.getSuggestionType();\n		\n        var url = user.domain + \'/\' + user.username + \n            \'/clientdata/getstreamfiltersubscriptions/?client_domain=\' + client_domain;\n        BabblingBrook.Suggestion.getMiscData(\n			url, \n			onUserSubscriptionsFetched,\n			onUserSubscriptionsFetchedError\n		);\n	\n        url = user.domain + \'/\' + user.username + \n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \n			\'&type=\' + suggestion_type;\n        BabblingBrook.Suggestion.getMiscData(\n			url, \n			onUserDeclinedSuggestionsFetched,\n			onUserDeclinedSuggestionsFetchedError\n		); 		\n		\n		kindred = BabblingBrook.Suggestion.getKindred();\n		var kindred_length = Object.keys(kindred).length;\n		if (kindred_length < max_kindred_to_process) {\n			max_kindred_to_process = kindred_length;\n		}\n        var i = 0;\n        for (var full_username in kindred) {\n            if (i === max_kindred_to_process) {\n                break;    \n            }   \n			var kindred_domain = BabblingBrook.Library.extractDomain(full_username);\n			var kindred_username = BabblingBrook.Library.extractUsername(full_username);\n			var url = kindred_domain + \'/\' + kindred_username + \n				\'/clientdata/getstreamfiltersubscriptions/?client_domain=\' + client_domain;\n			BabblingBrook.Suggestion.getMiscData(\n				url, \n				onKindredSubscriptionsFetched.bind(null, i),\n				onKindredSubscriptionsFetchedError.bind(null, i)\n			);\n			i++; \n		}\n		isInitDone();\n    };\n	\n	var createScoreFilter = function (filter) {\n		var filter_name = filter.domain + \'/\' + filter.username + \'/\' + filter.name;     \n		if (typeof filter_scores[filter_name] === \'undefined\') {\n			filter_scores[filter_name] = filter;\n			filter_scores[filter_name].score = 0;\n		}\n	};\n	\n	var isInDomain = function (domain) {    \n		if (typeof params.domain !== \'string\') {\n			return true;\n		} else if (params.domain === domain){\n			return true;\n		} else {\n			return false;\n		}\n	};\n	\n	var isInUsername = function (username) {\n		if (typeof params.username !== \'string\') {\n			return true;\n		} else if (params.username === username){\n			return true;\n		} else {\n			return false;\n		}\n	};\n	\n	var isInName = function (name) {\n		if (typeof params.name !== \'string\') {\n			return true;\n		} else if (params.name === name){\n			return true;\n		} else {\n			return false;\n		}\n	};\n	\n	var isSubValid = function (sub) {         \n		if (isInDomain(sub.domain) === true \n			&& isInUsername(sub.username) === true \n			&& isInName(sub.name) === true\n		) {\n			return true;\n		}\n		return false;\n	};\n	\n	var calculateScores = function () {\n		for (var i = 0; i < max_kindred_to_process; i++) {              \n			for (var j in kindred_subscriptions[i]) {                \n				var sub = kindred_subscriptions[i][j];           \n				if (isSubValid(sub) === true) {                   \n					var filters = sub.filters;\n					jQuery.each(filters, function (k, filter) {\n						createScoreFilter(filters[k]);\n						var kindred_divider = kindred_points_divider * (i + 1);\n						var kindred_score = max_kindred_points / kindred_divider;\n						var position_divider = subscription_points_divider * (k + 1);\n						var position_score = max_subscription_points / subscription_points_divider;\n						if (k === 0) {\n							position_score += bonus_score_to_first;\n						}\n						var filter_name = filters[k].domain + \'/\' + filters[k].username + \'/\' + filters[k].name;\n						filter_scores[filter_name].score += Math.round(position_score + kindred_score);  \n					});\n				}\n			}\n		}\n	};\n	\n	var sortScores = function () {\n		var final_scores = [];\n		for (var i in filter_scores) {\n			if (filter_scores[i].score > 0) {\n				final_scores.push(filter_scores[i]);\n			}\n		}\n		final_scores.sort(function (a, b) {\n			return b.score - a.score;\n		});\n		for (var j=0; j<final_scores.length; j++) {\n			suggestions.push({\n                "domain" : final_scores[j].domain,                \n                "username" : final_scores[j].username,\n                "name" : final_scores[j].name,\n                "version" : final_scores[j].version \n			});\n		}\n	};\n	\n	var removeSubscribedStreamFilters = function () {     \n		for (var i in user_subscriptions) {          \n			if (isSubValid(user_subscriptions[i]) === true) {\n				var filters = user_subscriptions[i].filters;                                \n				for (var k = 0; k < filters.length; k++) {\n					for (var j in filter_scores) {\n						var filter = filters[k];\n						var suggestion = filter_scores[j];\n						if (filter.domain === suggestion.domain\n							&& filter.username === suggestion.username\n							&& filter.name === suggestion.name\n						) {\n							suggestion.score = 0;\n						}\n					}\n				}\n			}\n		}\n	};	\n	\n	var removeDeclinedSuggestions = function () {            \n		//r (var i = 0; i < declined_suggestions.length; i++) {        \n			//if (isSubValid(declined_suggestions[i]) === true) {                      \n				//var filters = declined_suggestions[i].filters;\n                var filters = declined_suggestions;         \n				for (var k = 0; k < filters.length; k++) {\n                    \n					for (var j in filter_scores) {\n						var filter = filters[k];\n						var suggestion = filter_scores[j];\n						if (filter.domain === suggestion.domain\n							&& filter.username === suggestion.username\n							&& filter.name === suggestion.name\n						) {\n							suggestion.score = 0;\n						}\n					}\n				}\n			//}\n		//\n	};		\n	\n    var main = function () {\n		calculateScores();\n		removeSubscribedStreamFilters();\n		removeDeclinedSuggestions();\n		sortScores();\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\n    };\n    \n    return {\n        init : init,\n        main : main\n    };\n}', '/**\r\n * Fetches the stream subscriptions of the users nearest kindred and then selects the most \r\n * popular filters that this user is not subscribed to already and has not already declined.\r\n *\r\n * Filters get more points for being higher up the kindred list and \r\n * more points for being close to the start of the top of the filter subscription list.\r\n */\r\nfunction () {\r\n    var user;\r\n	var client_domain;\r\n	var suggestion_type;\r\n	var kindred;\r\n	var user_subscriptions;\r\n	var declined_suggestions;\r\n    \r\n    /**\r\n     * If there is a stream paramater then only fetch suggestions for that stream,\r\n     * the stream location is stored in the suggestion paramaters\r\n     */\r\n    var params;\r\n	\r\n	/**\r\n	 * @type {integer} The maximum number of kindred subscriptions to fetch.\r\n	 */\r\n	var max_kindred_to_process = 30;\r\n	var kindred_subscriptions = [];\r\n    \r\n	/**\r\n	 * Scores for each stream indexed by domain/username/name.\r\n	 */\r\n	var filter_scores = {};\r\n	var final_scores;\r\n	\r\n	var suggestions = [];\r\n	\r\n	var max_kindred_points = 100;\r\n	var kindred_points_divider = 0.8;	\r\n	var max_subscription_points = 100;\r\n	var subscription_points_divider = 0.8;\r\n    /**\r\n     * A bonus score given if the filter is the first in the stream. \r\n     */\r\n    var bonus_score_to_first = 50;\r\n	\r\n	var max_results_to_return = 25;\r\n	\r\n	var init_done = false;\r\n	\r\n	/**\r\n	 * Checks to see if all requested data has returned before starting the suggestion generation.\r\n	 */\r\n	var isInitDone = function () {\r\n		if (Object.keys(kindred_subscriptions).length === max_kindred_to_process) {       \r\n			if (typeof user_subscriptions !== \'undefined\' && typeof declined_suggestions !== \'undefined\') {	              \r\n				if (init_done === false) {	                  \r\n					init_done = true;\r\n					BabblingBrook.Suggestion.processSuggestions();\r\n					return true;\r\n				}\r\n			}\r\n		}\r\n		return false;\r\n	};\r\n	\r\n	var onUserSubscriptionsFetched = function (data) {\r\n		user_subscriptions = data.subscriptions;\r\n		isInitDone();\r\n	};\r\n	\r\n	var onUserDeclinedSuggestionsFetched = function (data) {	\r\n		declined_suggestions = data.suggestions_declined;\r\n		isInitDone();\r\n	};	\r\n	\r\n	var onKindredSubscriptionsFetched = function (index, data) {       \r\n		kindred_subscriptions[index] = data.subscriptions;\r\n		isInitDone();\r\n	};	\r\n\r\n	/**\r\n	 * If a kindreds subscription data does not respond then just\r\n	 * use an empty array, so that the rhythm can proceed without it.\r\n	 * \r\n	 * @param index The id of this kindred in the kindred_subscriptions array.\r\n	 *\r\n	 * return {void}\r\n	 */\r\n	var onKindredSubscriptionsFetchedError = function (index) {\r\n		kindred_subscriptions[index] = [];\r\n		isInitDone();\r\n	};	\r\n	\r\n	var onUserSubscriptionsFetchedError = function () {\r\n		throw \'Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm\';\r\n	};	\r\n	\r\n	var onUserDeclinedSuggestionsFetchedError = function () {\r\n		throw \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\r\n	};	\r\n	\r\n    var init = function () {        \r\n		params = BabblingBrook.Suggestion.getParamaters();\r\n        \r\n        user = BabblingBrook.Suggestion.getUser();\r\n		client_domain = BabblingBrook.Suggestion.getClientDomain();\r\n		suggestion_type = BabblingBrook.Suggestion.getSuggestionType();\r\n		\r\n        var url = user.domain + \'/\' + user.username + \r\n            \'/clientdata/getstreamfiltersubscriptions/?client_domain=\' + client_domain;\r\n        BabblingBrook.Suggestion.getMiscData(\r\n			url, \r\n			onUserSubscriptionsFetched,\r\n			onUserSubscriptionsFetchedError\r\n		);\r\n	\r\n        url = user.domain + \'/\' + user.username + \r\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \r\n			\'&type=\' + suggestion_type;\r\n        BabblingBrook.Suggestion.getMiscData(\r\n			url, \r\n			onUserDeclinedSuggestionsFetched,\r\n			onUserDeclinedSuggestionsFetchedError\r\n		); 		\r\n		\r\n		kindred = BabblingBrook.Suggestion.getKindred();\r\n		var kindred_length = Object.keys(kindred).length;\r\n		if (kindred_length < max_kindred_to_process) {\r\n			max_kindred_to_process = kindred_length;\r\n		}\r\n        var i = 0;\r\n        for (var full_username in kindred) {\r\n            if (i === max_kindred_to_process) {\r\n                break;    \r\n            }   \r\n			var kindred_domain = BabblingBrook.Library.extractDomain(full_username);\r\n			var kindred_username = BabblingBrook.Library.extractUsername(full_username);\r\n			var url = kindred_domain + \'/\' + kindred_username + \r\n				\'/clientdata/getstreamfiltersubscriptions/?client_domain=\' + client_domain;\r\n			BabblingBrook.Suggestion.getMiscData(\r\n				url, \r\n				onKindredSubscriptionsFetched.bind(null, i),\r\n				onKindredSubscriptionsFetchedError.bind(null, i)\r\n			);\r\n			i++; \r\n		}\r\n		isInitDone();\r\n    };\r\n	\r\n	var createScoreFilter = function (filter) {\r\n		var filter_name = filter.domain + \'/\' + filter.username + \'/\' + filter.name;     \r\n		if (typeof filter_scores[filter_name] === \'undefined\') {\r\n			filter_scores[filter_name] = filter;\r\n			filter_scores[filter_name].score = 0;\r\n		}\r\n	};\r\n	\r\n	var isInDomain = function (domain) {    \r\n		if (typeof params.domain !== \'string\') {\r\n			return true;\r\n		} else if (params.domain === domain){\r\n			return true;\r\n		} else {\r\n			return false;\r\n		}\r\n	};\r\n	\r\n	var isInUsername = function (username) {\r\n		if (typeof params.username !== \'string\') {\r\n			return true;\r\n		} else if (params.username === username){\r\n			return true;\r\n		} else {\r\n			return false;\r\n		}\r\n	};\r\n	\r\n	var isInName = function (name) {\r\n		if (typeof params.name !== \'string\') {\r\n			return true;\r\n		} else if (params.name === name){\r\n			return true;\r\n		} else {\r\n			return false;\r\n		}\r\n	};\r\n	\r\n	var isSubValid = function (sub) {         \r\n		if (isInDomain(sub.domain) === true \r\n			&& isInUsername(sub.username) === true \r\n			&& isInName(sub.name) === true\r\n		) {\r\n			return true;\r\n		}\r\n		return false;\r\n	};\r\n	\r\n	var calculateScores = function () {\r\n		for (var i = 0; i < max_kindred_to_process; i++) {              \r\n			for (var j in kindred_subscriptions[i]) {                \r\n				var sub = kindred_subscriptions[i][j];           \r\n				if (isSubValid(sub) === true) {                   \r\n					var filters = sub.filters;\r\n					jQuery.each(filters, function (k, filter) {\r\n						createScoreFilter(filters[k]);\r\n						var kindred_divider = kindred_points_divider * (i + 1);\r\n						var kindred_score = max_kindred_points / kindred_divider;\r\n						var position_divider = subscription_points_divider * (k + 1);\r\n						var position_score = max_subscription_points / subscription_points_divider;\r\n						if (k === 0) {\r\n							position_score += bonus_score_to_first;\r\n						}\r\n						var filter_name = filters[k].domain + \'/\' + filters[k].username + \'/\' + filters[k].name;\r\n						filter_scores[filter_name].score += Math.round(position_score + kindred_score);  \r\n					});\r\n				}\r\n			}\r\n		}\r\n	};\r\n	\r\n	var sortScores = function () {\r\n		var final_scores = [];\r\n		for (var i in filter_scores) {\r\n			if (filter_scores[i].score > 0) {\r\n				final_scores.push(filter_scores[i]);\r\n			}\r\n		}\r\n		final_scores.sort(function (a, b) {\r\n			return b.score - a.score;\r\n		});\r\n		for (var j=0; j<final_scores.length; j++) {\r\n			suggestions.push({\r\n                "domain" : final_scores[j].domain,                \r\n                "username" : final_scores[j].username,\r\n                "name" : final_scores[j].name,\r\n                "version" : final_scores[j].version \r\n			});\r\n		}\r\n	};\r\n	\r\n	var removeSubscribedStreamFilters = function () {     \r\n		for (var i in user_subscriptions) {          \r\n			if (isSubValid(user_subscriptions[i]) === true) {\r\n				var filters = user_subscriptions[i].filters;                                \r\n				for (var k = 0; k < filters.length; k++) {\r\n					for (var j in filter_scores) {\r\n						var filter = filters[k];\r\n						var suggestion = filter_scores[j];\r\n						if (filter.domain === suggestion.domain\r\n							&& filter.username === suggestion.username\r\n							&& filter.name === suggestion.name\r\n						) {\r\n							suggestion.score = 0;\r\n						}\r\n					}\r\n				}\r\n			}\r\n		}\r\n	};	\r\n	\r\n	var removeDeclinedSuggestions = function () {            \r\n		//r (var i = 0; i < declined_suggestions.length; i++) {        \r\n			//if (isSubValid(declined_suggestions[i]) === true) {                      \r\n				//var filters = declined_suggestions[i].filters;\r\n                var filters = declined_suggestions;         \r\n				for (var k = 0; k < filters.length; k++) {\r\n                    \r\n					for (var j in filter_scores) {\r\n						var filter = filters[k];\r\n						var suggestion = filter_scores[j];\r\n						if (filter.domain === suggestion.domain\r\n							&& filter.username === suggestion.username\r\n							&& filter.name === suggestion.name\r\n						) {\r\n							suggestion.score = 0;\r\n						}\r\n					}\r\n				}\r\n			//}\r\n		//\r\n	};		\r\n	\r\n    var main = function () {\r\n		calculateScores();\r\n		removeSubscribedStreamFilters();\r\n		removeDeclinedSuggestions();\r\n		sortScores();\r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10038, 6, 10127),
	(10021, '2013-07-30 15:25:32', 10021, 'A simple rhythm that creates suggestions for new moderation rings for streams you are subscribed to.', '\nfunction(){var user;var client_domain;var suggestion_type;var kindred;var user_subscriptions;var declined_suggestions;var params;var max_kindred_to_process=30;var kindred_subscriptions=[];var ring_scores={};var final_scores;var suggestions=[];var max_kindred_points=100;var kindred_points_divider=0.8;var max_subscription_points=100;var subscription_points_divider=0.8;var bonus_score_to_first=10;var max_results_to_return=25;var init_done=false;var isInitDone=function(){if(Object.keys(kindred_subscriptions).length===max_kindred_to_process){if(typeof user_subscriptions!==\'undefined\'&&typeof declined_suggestions!==\'undefined\'){if(init_done===false){init_done=true;BabblingBrook.Suggestion.processSuggestions();return true;}}}\nreturn false;};var onUserSubscriptionsFetched=function(data){user_subscriptions=data.subscriptions;isInitDone();};var onUserDeclinedSuggestionsFetched=function(data){declined_suggestions=data.suggestions_declined;isInitDone();};var onKindredSubscriptionsFetched=function(index,data){kindred_subscriptions[index]=data.subscriptions;isInitDone();};var onKindredSubscriptionsFetchedError=function(index){kindred_subscriptions[index]=[];isInitDone();};var onUserSubscriptionsFetchedError=function(){throw\'Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm\';};var onUserDeclinedSuggestionsFetchedError=function(){throw\'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';};var init=function(){params=BabblingBrook.Suggestion.getParamaters();user=BabblingBrook.Suggestion.getUser();client_domain=BabblingBrook.Suggestion.getClientDomain();suggestion_type=BabblingBrook.Suggestion.getSuggestionType();var url=user.domain+\'/\'+user.username+\'/clientdata/getstreamfiltersubscriptions/?client_domain=\'+client_domain;BabblingBrook.Suggestion.getMiscData(url,onUserSubscriptionsFetched,onUserSubscriptionsFetchedError);url=user.domain+\'/\'+user.username+\'/clientdata/getdeclinedsuggestions/?client_domain=\'+client_domain+\'&type=\'+suggestion_type;BabblingBrook.Suggestion.getMiscData(url,onUserDeclinedSuggestionsFetched,onUserDeclinedSuggestionsFetchedError);kindred=BabblingBrook.Suggestion.getKindred();var kindred_length=Object.keys(kindred).length;if(kindred_length<max_kindred_to_process){max_kindred_to_process=kindred_length;}\nvar i=0;for(var full_username in kindred){if(i===max_kindred_to_process){break;}\nvar kindred_domain=BabblingBrook.Library.extractDomain(full_username);var kindred_username=BabblingBrook.Library.extractUsername(full_username);var url=kindred_domain+\'/\'+kindred_username+\'/clientdata/getstreamfiltersubscriptions/?client_domain=\'+client_domain;BabblingBrook.Suggestion.getMiscData(url,onKindredSubscriptionsFetched.bind(null,i),onKindredSubscriptionsFetchedError.bind(null,i));i++;}\nisInitDone();};var createScoreRing=function(domain,username){var ring_name=domain+\'/\'+username;if(typeof ring_scores[ring_name]===\'undefined\'){ring_scores[ring_name]={};ring_scores[ring_name].domain=domain;ring_scores[ring_name].username=username;ring_scores[ring_name].score=0;}};var isInDomain=function(domain){if(typeof params.domain!==\'string\'){return true;}else if(params.domain===domain){return true;}else{return false;}};var isInUsername=function(username){if(typeof params.username!==\'string\'){return true;}else if(params.username===username){return true;}else{return false;}};var isInName=function(name){if(typeof params.name!==\'string\'){return true;}else if(params.name===name){return true;}else{return false;}};var isSubValid=function(sub){if(isInDomain(sub.domain)===true&&isInUsername(sub.username)===true&&isInName(sub.name)===true){return true;}\nreturn false;};var calculateScores=function(){for(var i=0;i<max_kindred_to_process;i++){for(var j in kindred_subscriptions[i]){var sub=kindred_subscriptions[i][j];if(isSubValid(sub)===true){var rings=sub.moderation_rings;for(var k=0;k<rings.length;k++){var kindred_domain=BabblingBrook.Library.extractDomain(rings[k]);var kindred_username=BabblingBrook.Library.extractUsername(rings[k]);createScoreRing(kindred_domain,kindred_username);var kindred_divider=kindred_points_divider*(i+1);var kindred_score=max_kindred_points/kindred_divider;var position_divider=subscription_points_divider*(k+1);var position_score=max_subscription_points/subscription_points_divider;if(k===0){position_score+=bonus_score_to_first;}\nvar ring_name=rings[k];ring_scores[ring_name].score+=Math.round(position_score+kindred_score);}}}}};var sortScores=function(){var final_scores=[];for(var i in ring_scores){if(ring_scores[i].score>0){final_scores.push(ring_scores[i]);}}\nfinal_scores.sort(function(a,b){return b.score-a.score;});for(var j=0;j<final_scores.length;j++){suggestions.push({"domain":final_scores[j].domain,"username":final_scores[j].username});}};var removeSubscribedStreamRings=function(){for(var i=0;i<user_subscriptions.length;i++){if(isSubValid(user_subscriptions[i])===true){var rings=user_subscriptions[i].rings;for(var k=0;k<rings.length;k++){for(var j in ring_scores){var ring=rings[k];var suggestion=ring_scores[j];if(ring.domain===suggestion.domain&&ring.username===suggestion.username&&ring.name===suggestion.name){suggestion.score=0;}}}}}};var removeDeclinedSuggestions=function(){var rings=declined_suggestions;for(var k=0;k<rings.length;k++){for(var j in ring_scores){var ring=rings[k];var suggestion=ring_scores[j];if(ring.domain===suggestion.domain&&ring.username===suggestion.username&&ring.name===suggestion.name){suggestion.score=0;}}}};var main=function(){calculateScores();removeSubscribedStreamRings();removeDeclinedSuggestions();sortScores();BabblingBrook.Suggestion.suggestionsGenerated(suggestions);};return{init:init,main:main};}', '/**\r\n * Fetches the stream subscriptions of the users nearest kindred and then selects the most \r\n * popular rings that this user is not subscribed to already and has not already declined.\r\n *\r\n * Rings get more points for being higher up the kindred list and \r\n * more points for being close to the start of the top of the ring subscription list.\r\n */\r\nfunction () {\r\n    var user;\r\n	var client_domain;\r\n	var suggestion_type;\r\n	var kindred;\r\n	var user_subscriptions;\r\n	var declined_suggestions;\r\n    \r\n    /**\r\n     * If there is a stream paramater then only fetch suggestions for that stream,\r\n     * the stream location is stored in the suggestion paramaters\r\n     */\r\n    var params;\r\n	\r\n	/**\r\n	 * @type {integer} The maximum number of kindred subscriptions to fetch.\r\n	 */\r\n	var max_kindred_to_process = 30;\r\n	var kindred_subscriptions = [];\r\n    \r\n	/**\r\n	 * Scores for each stream indexed by domain/username/name.\r\n	 */\r\n	var ring_scores ={};\r\n	var final_scores;\r\n	\r\n	var suggestions = [];\r\n	\r\n	var max_kindred_points = 100;\r\n	var kindred_points_divider = 0.8;	\r\n	var max_subscription_points = 100;\r\n	var subscription_points_divider = 0.8;\r\n    /**\r\n     * A bonus score given if the ring is the first in the stream. \r\n     */\r\n    var bonus_score_to_first = 10;\r\n	\r\n	var max_results_to_return = 25;\r\n	\r\n	var init_done = false;\r\n	\r\n	/**\r\n	 * Checks to see if all requested data has returned before starting the suggestion generation.\r\n	 */\r\n	var isInitDone = function () {\r\n		if (Object.keys(kindred_subscriptions).length === max_kindred_to_process) {\r\n			if (typeof user_subscriptions !== \'undefined\' && typeof declined_suggestions !== \'undefined\') {	\r\n				if (init_done === false) {		\r\n					init_done = true;\r\n					BabblingBrook.Suggestion.processSuggestions();\r\n					return true;\r\n				}\r\n			}\r\n		}\r\n		return false;\r\n	};\r\n	\r\n	var onUserSubscriptionsFetched = function (data) {\r\n		user_subscriptions = data.subscriptions;\r\n		isInitDone();\r\n	};\r\n	\r\n	var onUserDeclinedSuggestionsFetched = function (data) {	\r\n		declined_suggestions = data.suggestions_declined;\r\n		isInitDone();\r\n	};	\r\n	\r\n	var onKindredSubscriptionsFetched = function (index, data) {\r\n		kindred_subscriptions[index] = data.subscriptions;\r\n		isInitDone();\r\n	};	\r\n\r\n	/**\r\n	 * If a kindreds subscription data does not respond then just\r\n	 * use an empty array, so that the rhythm can proceed without it.\r\n	 * \r\n	 * @param index The id of this kindred in the kindred_subscriptions array.\r\n	 *\r\n	 * return {void}\r\n	 */\r\n	var onKindredSubscriptionsFetchedError = function (index) {\r\n		kindred_subscriptions[index] = [];\r\n		isInitDone();\r\n	};	\r\n	\r\n	var onUserSubscriptionsFetchedError = function () {\r\n		throw \'Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm\';\r\n	};	\r\n	\r\n	var onUserDeclinedSuggestionsFetchedError = function () {\r\n		throw \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\r\n	};	\r\n	\r\n    var init = function () {\r\n		params = BabblingBrook.Suggestion.getParamaters();\r\n        user = BabblingBrook.Suggestion.getUser();\r\n		client_domain = BabblingBrook.Suggestion.getClientDomain();\r\n		suggestion_type = BabblingBrook.Suggestion.getSuggestionType();\r\n		\r\n        var url = user.domain + \'/\' + user.username + \r\n            \'/clientdata/getstreamfiltersubscriptions/?client_domain=\' + client_domain;\r\n        BabblingBrook.Suggestion.getMiscData(\r\n			url, \r\n			onUserSubscriptionsFetched,\r\n			onUserSubscriptionsFetchedError\r\n		);\r\n	\r\n        url = user.domain + \'/\' + user.username + \r\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \r\n			\'&type=\' + suggestion_type;\r\n        BabblingBrook.Suggestion.getMiscData(\r\n			url, \r\n			onUserDeclinedSuggestionsFetched,\r\n			onUserDeclinedSuggestionsFetchedError\r\n		); 		\r\n		\r\n		kindred = BabblingBrook.Suggestion.getKindred();\r\n		var kindred_length = Object.keys(kindred).length;\r\n		if (kindred_length < max_kindred_to_process) {\r\n			max_kindred_to_process = kindred_length;\r\n		}\r\n		\r\n        var i = 0;\r\n        for (var full_username in kindred) {\r\n            if (i === max_kindred_to_process) {\r\n                break;    \r\n            }   \r\n			var kindred_domain = BabblingBrook.Library.extractDomain(full_username);\r\n			var kindred_username = BabblingBrook.Library.extractUsername(full_username);\r\n			var url = kindred_domain + \'/\' + kindred_username + \r\n				\'/clientdata/getstreamfiltersubscriptions/?client_domain=\' + client_domain;\r\n			BabblingBrook.Suggestion.getMiscData(\r\n				url, \r\n				onKindredSubscriptionsFetched.bind(null, i),\r\n				onKindredSubscriptionsFetchedError.bind(null, i)\r\n			);\r\n			i++; \r\n		}\r\n		isInitDone();\r\n    };\r\n	\r\n	var createScoreRing = function (domain, username) {\r\n        var ring_name = domain + \'/\' + username;\r\n		if (typeof ring_scores[ring_name] === \'undefined\') {\r\n            ring_scores[ring_name] = {};\r\n            ring_scores[ring_name].domain = domain;\r\n            ring_scores[ring_name].username = username;            \r\n			ring_scores[ring_name].score = 0;\r\n		}\r\n	};\r\n	\r\n	var isInDomain = function (domain) {    \r\n		if (typeof params.domain !== \'string\') {\r\n			return true;\r\n		} else if (params.domain === domain){\r\n			return true;\r\n		} else {\r\n			return false;\r\n		}\r\n	};\r\n	\r\n	var isInUsername = function (username) {\r\n		if (typeof params.username !== \'string\') {\r\n			return true;\r\n		} else if (params.username === username){\r\n			return true;\r\n		} else {\r\n			return false;\r\n		}\r\n	};\r\n	\r\n	var isInName = function (name) {\r\n		if (typeof params.name !== \'string\') {\r\n			return true;\r\n		} else if (params.name === name){\r\n			return true;\r\n		} else {\r\n			return false;\r\n		}\r\n	};\r\n	\r\n	var isSubValid = function (sub) {         \r\n		if (isInDomain(sub.domain) === true \r\n			&& isInUsername(sub.username) === true \r\n			&& isInName(sub.name) === true\r\n		) {\r\n			return true;\r\n		}\r\n		return false;\r\n	};\r\n	\r\n	var calculateScores = function () {\r\n		for (var i = 0; i < max_kindred_to_process; i++) {            \r\n			for (var j in kindred_subscriptions[i]) {               \r\n				var sub = kindred_subscriptions[i][j];\r\n				if (isSubValid(sub) === true) {			\r\n					var rings = sub.moderation_rings;	          \r\n					for (var k = 0; k < rings.length; k++) {\r\n                        var kindred_domain = BabblingBrook.Library.extractDomain(rings[k]);\r\n			            var kindred_username = BabblingBrook.Library.extractUsername(rings[k]);                        \r\n						createScoreRing(kindred_domain, kindred_username);\r\n						var kindred_divider = kindred_points_divider * (i + 1);\r\n						var kindred_score = max_kindred_points / kindred_divider;\r\n						var position_divider = subscription_points_divider * (k + 1);\r\n						var position_score = max_subscription_points / subscription_points_divider;\r\n						if (k === 0) {\r\n							position_score += bonus_score_to_first;\r\n						}\r\n						var ring_name = rings[k];\r\n						ring_scores[ring_name].score += Math.round(position_score + kindred_score);\r\n					}\r\n				}\r\n			}\r\n		}\r\n	};\r\n	\r\n	var sortScores = function () {      \r\n		var final_scores = [];\r\n		for (var i in ring_scores) {\r\n			if (ring_scores[i].score > 0) {\r\n				final_scores.push(ring_scores[i]);\r\n			}\r\n		}\r\n		final_scores.sort(function (a, b) {\r\n			return b.score - a.score;\r\n		});\r\n		for (var j=0; j<final_scores.length; j++) {\r\n			suggestions.push({\r\n                "domain" : final_scores[j].domain,                \r\n                "username" : final_scores[j].username\r\n			});\r\n		}\r\n	};\r\n	\r\n	var removeSubscribedStreamRings = function () {\r\n		for (var i = 0; i < user_subscriptions.length; i++) {\r\n			if (isSubValid(user_subscriptions[i]) === true) {\r\n				var rings = user_subscriptions[i].rings;\r\n				for (var k = 0; k < rings.length; k++) {\r\n					for (var j in ring_scores) {\r\n						var ring = rings[k];\r\n						var suggestion = ring_scores[j];\r\n						if (ring.domain === suggestion.domain\r\n							&& ring.username === suggestion.username\r\n							&& ring.name === suggestion.name\r\n						) {\r\n							suggestion.score = 0;\r\n						}\r\n					}\r\n				}\r\n			}\r\n		}\r\n	};	\r\n	\r\n	var removeDeclinedSuggestions = function () {\r\n		//for (var i = 0; i < declined_suggestions.length; i++) {\r\n			//if (isSubValid(declined_suggestions[i]) === true) {\r\n				//var rings = declined_suggestions[i].rings;\r\n                var rings = declined_suggestions;\r\n				for (var k = 0; k < rings.length; k++) {\r\n					for (var j in ring_scores) {\r\n						var ring = rings[k];\r\n						var suggestion = ring_scores[j];\r\n						if (ring.domain === suggestion.domain\r\n							&& ring.username === suggestion.username\r\n							&& ring.name === suggestion.name\r\n						) {\r\n							suggestion.score = 0;\r\n						}\r\n					}\r\n				}\r\n			//}\r\n		//}\r\n	};		\r\n	\r\n    var main = function () {     \r\n		calculateScores();        \r\n		removeSubscribedStreamRings();\r\n		removeDeclinedSuggestions();\r\n		sortScores();   \r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10039, 9, 10129),
	(10022, '2013-08-02 12:07:54', 10022, 'A simple rhythm for suggesting new users.', '/**\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \n */\nfunction () {\n    var user;\n	var client_domain;\n	var suggestion_type;\n	var kindred;\n	var user_kindred = [];\n	var declined_suggestions;\n    \n    /**\n     * If there is a stream paramater then only fetch suggestions for that stream,\n     * the stream location is stored in the suggestion paramaters\n     */\n    var params;\n	\n	/**\n	 * @type {integer} The maximum number of kindred subscriptions to fetch.\n	 */\n	var max_kindred_to_process = 30;\n	var max_sub_kindred_to_process = 10;    \n    \n	/**\n	 * Scores for each stream indexed by domain/username/name.\n	 */\n	var kindred_scores ={};\n	var final_scores;\n	\n	var suggestions = [];\n	\n	var max_kindred_points = 100;\n	var kindred_points_divider = 0.8;	\n	var sub_max_kindred_points = 100;\n	var sub_kindred_points_divider = 0.8;	    \n	\n	var max_results_to_return = 25;\n	\n	var init_done = false;\n	\n	/**\n	 * Checks to see if all requested data has returned before starting the suggestion generation.\n	 */\n	var isInitDone = function () {\n		if (Object.keys(user_kindred).length === max_kindred_to_process) {\n			if (typeof declined_suggestions !== \'undefined\') {	\n				if (init_done === false) {\n					init_done = true;\n					BabblingBrook.Suggestion.processSuggestions(suggestions);\n				}\n			}\n		}\n	};\n	\n	var onKindredDataFetched = function (index, data) {\n		user_kindred[index] = data;\n		isInitDone();\n	};\n	\n	var onUserDeclinedSuggestionsFetched = function (data) {	\n		declined_suggestions = data.suggestions_declined;\n		isInitDone();\n	};	\n	\n\n	/**\n	 * If a users kindred data does not respond then just\n	 * use an empty array, so that the rhythm can proceed without it.\n	 * \n	 * @param index The id of this kindred in the kindred_subscriptions array.\n	 *\n	 * return {void}\n	 */\n	var onKindredDataFetchedError = function (index) {\n		user_kindred[index] = [];\n		isInitDone();\n	};\n	\n	var onUserDeclinedSuggestionsFetchedError = function () {\n		throw \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\n	};	\n	\n    var init = function () {\n		params = BabblingBrook.Suggestion.getParamaters();\n        user = BabblingBrook.Suggestion.getUser();\n		client_domain = BabblingBrook.Suggestion.getClientDomain();\n		suggestion_type = BabblingBrook.Suggestion.getSuggestionType();\n		\n        url = user.domain + \'/\' + user.username + \n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \n			\'&type=\' + suggestion_type;\n        BabblingBrook.Suggestion.getMiscData(\n			url, \n			onUserDeclinedSuggestionsFetched,\n			onUserDeclinedSuggestionsFetchedError\n		); 		\n		\n		kindred = BabblingBrook.Suggestion.getKindred();\n		var kindred_length = Object.keys(kindred).length;\n		if (kindred_length < max_kindred_to_process) {\n			max_kindred_to_process = kindred_length;\n		}\n\n        var i = 0;\n        for (var full_username in kindred) {\n            if (i === max_kindred_to_process) {\n                break;    \n            }   \n			var kindred_domain = BabblingBrook.Library.extractDomain(full_username);\n			var kindred_username = BabblingBrook.Library.extractUsername(full_username);\n            var url = kindred_domain + \'/\' + kindred_username + \'/getkindred\';\n            BabblingBrook.Suggestion.getMiscData(\n			    url, \n			    onKindredDataFetched.bind(null, i),\n			    onKindredDataFetchedError.bind(null, i)\n		    );\n			i++; \n		}\n \n		isInitDone();\n    };\n	\n	var createScoreObject = function (domain, username) {\n        var kindred_name = domain + \'/\' + username;\n		if (typeof kindred_scores[kindred_name] === \'undefined\') {\n            kindred_scores[kindred_name] = {};\n            kindred_scores[kindred_name].domain = domain;\n            kindred_scores[kindred_name].username = username;            \n			kindred_scores[kindred_name].score = 0;\n		}\n	};\n	\n	var calculateScores = function () {\n        var max_kindred = max_kindred_to_process;\n        if (max_kindred > kindred.legnth - 1) {\n            max_kindred = kindred.legnth - 1;\n        }\n        for (var i=0; i < max_kindred; i++) {    \n            var kindred_blob = user_kindred[i];\n            var j = 0;\n			jQuery.each(kindred_blob, function (key, user) {\n                if (j === max_sub_kindred_to_process) {\n                    return false; // exit the .each\n                }\n                j++;                    \n                createScoreObject(user.domain, user.username);\n                var kindred_divider = kindred_points_divider * (i + 1);\n                var kindred_score = max_kindred_points / kindred_divider;\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\n				kindred_scores[user.domain + \'/\' + user.username].score += Math.round(kindred_score + sub_kindred_score);\n			});\n		}     \n	};\n	\n	var sortScores = function () {      \n		var final_scores = [];\n		for (var i in kindred_scores) {\n			if (kindred_scores[i].score > 0) {\n				final_scores.push(kindred_scores[i]);\n			}\n		}\n		final_scores.sort(function (a, b) {\n			return b.score - a.score;\n		});\n		for (var j=0; j<final_scores.length; j++) {\n			suggestions.push({\n                "domain" : final_scores[j].domain,                \n                "username" : final_scores[j].username\n			});\n		}\n	};\n	\n	var removeDeclinedSuggestions = function () {\n        var users = declined_suggestions;\n        for (var k = 0; k < users.length; k++) {\n            for (var j in kindred_scores) {\n                var user = users[k];\n                var suggestion = kindred_scores[j];\n                if (user.domain === suggestion.domain\n                    && user.username === suggestion.username\n                    && user.name === suggestion.name\n                ) {\n                    suggestion.score = 0;\n                }\n            }\n        }\n	};		\n	\n    var main = function () {     \n		calculateScores();\n		removeDeclinedSuggestions();\n		sortScores();   \n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\n    };\n    \n    return {\n        init : init,\n        main : main\n    };\n}', '/**\r\n * Fetches the kindred data for your own kindred and uses that to find users you might like to find. \r\n */\r\nfunction () {\r\n    var user;\r\n	var client_domain;\r\n	var suggestion_type;\r\n	var kindred;\r\n	var user_kindred = [];\r\n	var declined_suggestions;\r\n    \r\n    /**\r\n     * If there is a stream paramater then only fetch suggestions for that stream,\r\n     * the stream location is stored in the suggestion paramaters\r\n     */\r\n    var params;\r\n	\r\n	/**\r\n	 * @type {integer} The maximum number of kindred subscriptions to fetch.\r\n	 */\r\n	var max_kindred_to_process = 30;\r\n	var max_sub_kindred_to_process = 10;    \r\n    \r\n	/**\r\n	 * Scores for each stream indexed by domain/username/name.\r\n	 */\r\n	var kindred_scores ={};\r\n	var final_scores;\r\n	\r\n	var suggestions = [];\r\n	\r\n	var max_kindred_points = 100;\r\n	var kindred_points_divider = 0.8;	\r\n	var sub_max_kindred_points = 100;\r\n	var sub_kindred_points_divider = 0.8;	    \r\n	\r\n	var max_results_to_return = 25;\r\n	\r\n	var init_done = false;\r\n	\r\n	/**\r\n	 * Checks to see if all requested data has returned before starting the suggestion generation.\r\n	 */\r\n	var isInitDone = function () {\r\n		if (Object.keys(user_kindred).length === max_kindred_to_process) {\r\n			if (typeof declined_suggestions !== \'undefined\') {	\r\n				if (init_done === false) {\r\n					init_done = true;\r\n					BabblingBrook.Suggestion.processSuggestions(suggestions);\r\n				}\r\n			}\r\n		}\r\n	};\r\n	\r\n	var onKindredDataFetched = function (index, data) {\r\n		user_kindred[index] = data;\r\n		isInitDone();\r\n	};\r\n	\r\n	var onUserDeclinedSuggestionsFetched = function (data) {	\r\n		declined_suggestions = data.suggestions_declined;\r\n		isInitDone();\r\n	};	\r\n	\r\n\r\n	/**\r\n	 * If a users kindred data does not respond then just\r\n	 * use an empty array, so that the rhythm can proceed without it.\r\n	 * \r\n	 * @param index The id of this kindred in the kindred_subscriptions array.\r\n	 *\r\n	 * return {void}\r\n	 */\r\n	var onKindredDataFetchedError = function (index) {\r\n		user_kindred[index] = [];\r\n		isInitDone();\r\n	};\r\n	\r\n	var onUserDeclinedSuggestionsFetchedError = function () {\r\n		throw \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\r\n	};	\r\n	\r\n    var init = function () {\r\n		params = BabblingBrook.Suggestion.getParamaters();\r\n        user = BabblingBrook.Suggestion.getUser();\r\n		client_domain = BabblingBrook.Suggestion.getClientDomain();\r\n		suggestion_type = BabblingBrook.Suggestion.getSuggestionType();\r\n		\r\n        url = user.domain + \'/\' + user.username + \r\n            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \r\n			\'&type=\' + suggestion_type;\r\n        BabblingBrook.Suggestion.getMiscData(\r\n			url, \r\n			onUserDeclinedSuggestionsFetched,\r\n			onUserDeclinedSuggestionsFetchedError\r\n		); 		\r\n		\r\n		kindred = BabblingBrook.Suggestion.getKindred();\r\n		var kindred_length = Object.keys(kindred).length;\r\n		if (kindred_length < max_kindred_to_process) {\r\n			max_kindred_to_process = kindred_length;\r\n		}\r\n\r\n        var i = 0;\r\n        for (var full_username in kindred) {\r\n            if (i === max_kindred_to_process) {\r\n                break;    \r\n            }   \r\n			var kindred_domain = BabblingBrook.Library.extractDomain(full_username);\r\n			var kindred_username = BabblingBrook.Library.extractUsername(full_username);\r\n            var url = kindred_domain + \'/\' + kindred_username + \'/getkindred\';\r\n            BabblingBrook.Suggestion.getMiscData(\r\n			    url, \r\n			    onKindredDataFetched.bind(null, i),\r\n			    onKindredDataFetchedError.bind(null, i)\r\n		    );\r\n			i++; \r\n		}\r\n \r\n		isInitDone();\r\n    };\r\n	\r\n	var createScoreObject = function (domain, username) {\r\n        var kindred_name = domain + \'/\' + username;\r\n		if (typeof kindred_scores[kindred_name] === \'undefined\') {\r\n            kindred_scores[kindred_name] = {};\r\n            kindred_scores[kindred_name].domain = domain;\r\n            kindred_scores[kindred_name].username = username;            \r\n			kindred_scores[kindred_name].score = 0;\r\n		}\r\n	};\r\n	\r\n	var calculateScores = function () {\r\n        var max_kindred = max_kindred_to_process;\r\n        if (max_kindred > kindred.legnth - 1) {\r\n            max_kindred = kindred.legnth - 1;\r\n        }\r\n        for (var i=0; i < max_kindred; i++) {    \r\n            var kindred_blob = user_kindred[i];\r\n            var j = 0;\r\n			jQuery.each(kindred_blob, function (key, user) {\r\n                if (j === max_sub_kindred_to_process) {\r\n                    return false; // exit the .each\r\n                }\r\n                j++;                    \r\n                createScoreObject(user.domain, user.username);\r\n                var kindred_divider = kindred_points_divider * (i + 1);\r\n                var kindred_score = max_kindred_points / kindred_divider;\r\n                var sub_kindred_divider = sub_kindred_points_divider * (j + 1);\r\n                var sub_kindred_score = sub_max_kindred_points / sub_kindred_divider;\r\n				kindred_scores[user.domain + \'/\' + user.username].score += Math.round(kindred_score + sub_kindred_score);\r\n			});\r\n		}     \r\n	};\r\n	\r\n	var sortScores = function () {      \r\n		var final_scores = [];\r\n		for (var i in kindred_scores) {\r\n			if (kindred_scores[i].score > 0) {\r\n				final_scores.push(kindred_scores[i]);\r\n			}\r\n		}\r\n		final_scores.sort(function (a, b) {\r\n			return b.score - a.score;\r\n		});\r\n		for (var j=0; j<final_scores.length; j++) {\r\n			suggestions.push({\r\n                "domain" : final_scores[j].domain,                \r\n                "username" : final_scores[j].username\r\n			});\r\n		}\r\n	};\r\n	\r\n	var removeDeclinedSuggestions = function () {\r\n        var users = declined_suggestions;\r\n        for (var k = 0; k < users.length; k++) {\r\n            for (var j in kindred_scores) {\r\n                var user = users[k];\r\n                var suggestion = kindred_scores[j];\r\n                if (user.domain === suggestion.domain\r\n                    && user.username === suggestion.username\r\n                    && user.name === suggestion.name\r\n                ) {\r\n                    suggestion.score = 0;\r\n                }\r\n            }\r\n        }\r\n	};		\r\n	\r\n    var main = function () {     \r\n		calculateScores();\r\n		removeDeclinedSuggestions();\r\n		sortScores();   \r\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10040, 11, 10147),
	(10023, '2013-08-02 14:00:18', 10023, 'A simple rhythm for suggesting streams are used for rating users.', '\nfunction(){var init=function(){BabblingBrook.Suggestion.processSuggestions();};var main=function(){BabblingBrook.Suggestion.suggestionsGenerated([]);};return{init:init,main:main};}', ' /** \r\n * @todo this needs to fetch the most popular rating types used by this users kindred.\r\n * Inorder to do this properly actionPopularUserStreams in the user controller needs refactoring so that\r\n * is removes takes to a seperate action and is moved to the info domain and all input is in GET rather than post.\r\n */\r\nfunction () {\r\n    \r\n//    var user;\r\n//	var client_domain;\r\n//	var suggestion_type;\r\n//	var kindred;\r\n//	var user_subscriptions;\r\n//	var declined_suggestions;\r\n//	\r\n//	/**\r\n//	 * @type {integer} The maximum number of kindred subscriptions to fetch.\r\n//	 */\r\n//	var max_kindred_to_process = 10;\r\n//	var kindred_subscriptions = [];\r\n//    \r\n//	/**\r\n//	 * Scores for each stream indexed by domain/username/name.\r\n//	 */\r\n//    var stream_scores = {};\r\n//	var final_scores;\r\n//	\r\n//	var suggestions = [];\r\n//	\r\n//	var max_kindred_points = 100;\r\n//	var kindred_points_divider = 0.8;	\r\n//	var max_subscription_points = 100;\r\n//	var subscription_points_divider = 0.8;\r\n//	\r\n//	var max_results_to_return = 25;\r\n//	\r\n//	var init_done = false;\r\n	\r\n//	/**\r\n//	 * Checks to see if all requested data has returned before starting the suggestion generation.\r\n//	 */\r\n//	var isInitDone = function () {    \r\n//		if (Object.keys(kindred_subscriptions).length === max_kindred_to_process) {              \r\n//			if (typeof user_subscriptions !== \'undefined\' && typeof declined_suggestions !== \'undefined\') {                   \r\n//				if (init_done === false) {		                        \r\n//					init_done = true;\r\n//					BabblingBrook.Suggestion.processSuggestions();\r\n//					return true;\r\n//				}\r\n//			}\r\n//		}\r\n//		return false;\r\n//	};\r\n//	\r\n//	var onUserSubscriptionsFetched = function (data) {\r\n//		user_subscriptions = data.subscriptions;\r\n//		isInitDone();\r\n//	};\r\n//	\r\n//	var onUserDeclinedSuggestionsFetched = function (data) {	       \r\n//		declined_suggestions = data.suggestions_declined;\r\n//		isInitDone();\r\n//	};	\r\n//	\r\n//	var onKindredSubscriptionsFetched = function (index, data) {\r\n//		kindred_subscriptions[index] = data.subscriptions;\r\n//		isInitDone();\r\n//	};	\r\n//\r\n//	/**\r\n//	 * If a kindreds subscription data does not respond then just\r\n//	 * use an empty array, so that the rhythm can proceed without it.\r\n//	 * \r\n//	 * @param index The id of this kindred in the kindred_subscriptions array.\r\n//	 *\r\n//	 * return {void}\r\n//	 */\r\n//	var onKindredSubscriptionsFetchedError = function (index) {\r\n//		kindred_subscriptions[index] = [];\r\n//		isInitDone();\r\n//	};	\r\n//	\r\n//	var onUserSubscriptionsFetchedError = function () {\r\n//		throw \'Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm\';\r\n//	};	\r\n//	\r\n//	var onUserDeclinedSuggestionsFetchedError = function () {\r\n//		throw \'Error whilst fetchning this users declined suggestions in suggestion rhtyhm\';\r\n//	};	    \r\n    \r\n    var init = function () {\r\n//        user = BabblingBrook.Suggestion.getUser();\r\n//		client_domain = BabblingBrook.Suggestion.getClientDomain();\r\n//		suggestion_type = BabblingBrook.Suggestion.suggestion_type;\r\n//	\r\n//        url = user.domain + \'/\' + user.username + \r\n//            \'/clientdata/getdeclinedsuggestions/?client_domain=\' + client_domain + \r\n//			\'&type=\' + suggestion_type;\r\n//        BabblingBrook.Suggestion.getMiscData(\r\n//			url, \r\n//			onUserDeclinedSuggestionsFetched,\r\n//			onUserDeclinedSuggestionsFetchedError\r\n//		); 		\r\n//		\r\n//		kindred = BabblingBrook.Suggestion.kindred;      \r\n//		var kindred_length = Object.keys(kindred).length;\r\n//		if (kindred_length < max_kindred_to_process) {\r\n//			max_kindred_to_process = kindred_length;\r\n//		}\r\n//        var i = 0;\r\n//        for (var full_username in kindred) {\r\n//            if (i === max_kindred_to_process) {\r\n//                break;    \r\n//            }   \r\n//			var kindred_domain = BabblingBrook.Library.extractDomain(full_username);\r\n//			var kindred_username = BabblingBrook.Library.extractUsername(full_username);\r\n//			var url = kindred_domain + \'/\' + kindred_username + \r\n//				\'/clientdata/getstreamsubscriptions/?client_domain=\' + client_domain;\r\n//            var make_post_data = ;\r\n//            var data = {\r\n//                url : make_post_url,\r\n//                data : {\r\n//                    page : 1,\r\n//                    qty : 10\r\n//                },\r\n//                https : false\r\n//            };            \r\n//			BabblingBrook.Suggestion.getMiscData(\r\n//				url, \r\n//				onKindredSubscriptionsFetched.bind(null, i),\r\n//				onKindredSubscriptionsFetchedError.bind(null, i)\r\n//			);\r\n//            i++;               \r\n//		}\r\n//		isInitDone();\r\n        BabblingBrook.Suggestion.processSuggestions();\r\n    };\r\n	\r\n//    var createScoreStream = function (sub) { \r\n//		var stream_name = sub.domain + \'/\' + sub.username + \'/\' + sub.name;\r\n//		if (typeof stream_scores[stream_name] === \'undefined\') {\r\n//			stream_scores[stream_name] = sub;\r\n//			stream_scores[stream_name].score = 0;\r\n//		}\r\n//	};\r\n//	\r\n//	var calculateScores = function () {\r\n//		for (var i = 0; i < max_kindred_to_process; i++) {\r\n//			for (var j = 0; j < kindred_subscriptions[i].length; j++) {               \r\n//				var sub = kindred_subscriptions[i][j];\r\n//				createScoreStream(sub);\r\n//				var kindred_divider = kindred_points_divider * (i + 1);\r\n//				var kindred_score = max_kindred_points / kindred_divider;\r\n//				var position_divider = subscription_points_divider * (j + 1);\r\n//				var position_score = max_subscription_points / position_divider;\r\n//				var stream_name = sub.domain + \'/\' + sub.username + \'/\' + sub.name;              \r\n//				stream_scores[stream_name].score += Math.round(position_score + kindred_score);\r\n//			}\r\n//		}\r\n//	};\r\n//	\r\n//	var sortScores = function () {\r\n//		var final_scores = [];\r\n//		for (var i in stream_scores) {\r\n//			if (stream_scores[i].score > 0) {\r\n//				final_scores.push(stream_scores[i]);\r\n//			}\r\n//		}\r\n//		final_scores.sort(function (a, b) {\r\n//			return b.score - a.score;\r\n//		});\r\n//		for (var j=0; j<final_scores.length; j++) {\r\n//			suggestions.push({\r\n//                "domain" : final_scores[j].domain,                \r\n//                "username" : final_scores[j].username,\r\n//                "name" : final_scores[j].name,\r\n//                "version" : final_scores[j].version \r\n//			});\r\n//		}\r\n//	};\r\n//	\r\n//	var removeSubscribedStreams = function () {\r\n//		for (var i=0; i<user_subscriptions.length; i++) {\r\n//			for (var j in stream_scores) {\r\n//				var sub = user_subscriptions[i];\r\n//				var suggestion = stream_scores[j];\r\n//				if (sub.domain === suggestion.domain\r\n//					&& sub.username === suggestion.username\r\n//					&& sub.name === suggestion.name\r\n//				) {\r\n//					suggestion.score = 0;\r\n//				}\r\n//			}\r\n//		}\r\n//	};	\r\n//	\r\n//	var removeDeclinedSuggestions = function () {\r\n//		for (var i=0; i<declined_suggestions.length; i++) {\r\n//			for (var j in stream_scores) {\r\n//				var declined = declined_suggestions[i];\r\n//				var suggestion = stream_scores[j];\r\n//				if (declined.domain === suggestion.domain\r\n//					&& declined.username === suggestion.username\r\n//					&& declined.name === suggestion.name\r\n//				) {\r\n//					suggestion.score = 0;\r\n//				}\r\n//			}\r\n//		}\r\n//	};	\r\n	\r\n    var main = function () {     \r\n//		calculateScores();       \r\n//		removeSubscribedStreams();\r\n//		removeDeclinedSuggestions();\r\n//		sortScores();\r\n//      BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\r\n        BabblingBrook.Suggestion.suggestionsGenerated([]);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10041, 7, 10148),
	(10024, '2013-10-02 11:15:25', 10024, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var client_params;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Cobalt Cascade alpha\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);client_params=BabblingBrook.Filter.getClientParams();BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post;if(typeof client_params[\'meta task\']===\'string\'&&client_params[\'meta task\']!==\'\'){if(typeof post.content[6]===\'undefined\'){console.log(post.post_id);BabblingBrook.Filter.processNextPost(-10000);return;}\nconsole.debug(client_params);console.debug(client_params[\'meta task\']);console.debug(post.content[6].selected);if(jQuery.inArray(client_params[\'meta task\'],post.content[6].selected)===-1){console.debug(\'found\');BabblingBrook.Filter.processNextPost(-10000);return;}}\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n    \r\n    var client_params;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade alpha\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        client_params = BabblingBrook.Filter.getClientParams();\r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post;\r\n        \r\n        // remove tasks that are not in the filter\r\n        if (typeof client_params[\'meta task\'] === \'string\' && client_params[\'meta task\'] !== \'\') {\r\n            if (typeof post.content[6] === \'undefined\') {\r\n                console.log(post.post_id);\r\n                BabblingBrook.Filter.processNextPost(-10000);\r\n                return;\r\n            }            \r\nconsole.debug(client_params);\r\nconsole.debug(client_params[\'meta task\']);  \r\nconsole.debug(post.content[6].selected);    \r\n            if (jQuery.inArray(client_params[\'meta task\'], post.content[6].selected) === -1) {\r\nconsole.debug(\'found\');                \r\n                BabblingBrook.Filter.processNextPost(-10000);\r\n                return;\r\n            }\r\n        }\r\n        \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 1, 10044, 1, 10211),
	(10025, '2013-10-02 13:27:05', 10025, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade beta\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Cobalt Cascade beta\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade beta\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 2, 10045, 1, 10212),
	(10033, '2013-10-02 13:44:57', 10026, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade version 1\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Cobalt Cascade version 1\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Before Cobalt Cascade version 1\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 2, 10053, 1, 10220),
	(10034, '2013-10-02 13:45:49', 10027, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Cobalt Cascade version 2+\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Cobalt Cascade version 2+\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Cobalt Cascade version 2+\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 2, 10054, 1, 10221),
	(10035, '2013-10-02 13:46:27', 10028, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Babbling Brook alpha\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 2, 10055, 1, 10222),
	(10036, '2013-10-02 13:46:44', 10029, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook beta\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Babbling Brook beta\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook beta\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 2, 10056, 1, 10223),
	(10037, '2013-10-02 13:47:16', 10030, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook live\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Babbling Brook live\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook live\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 2, 10057, 1, 10224),
	(10045, '2013-10-11 14:18:00', 10037, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Cobalt Cascade alpha\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Secundus alpha\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Before Secundus alpha\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 2, 10072, 1, 10266),
	(10047, '2013-11-05 15:10:06', 10039, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Babbling Brook alpha\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 1, 10077, 1, 10352),
	(10048, '2013-11-05 15:10:38', 10028, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Babbling Brook alpha\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 1, 10078, 1, 10353),
	(10049, '2013-11-12 15:28:50', 10040, 'A list of all tasks, order by the priority of user Sky, that have not been closed, that are in the \'Before Babbling Brook alpha\' priority.\r\n', '\nfunction(){var sky_takes_fetched=false;var sky_takes_fetched_count=0;var sky_status_takes_fetched=false;var sky_status_takes_fetched_count=0;var calculate_ready=false;var sky_takes=[];var sky_status_takes=[];var stream_name;var stream_version;var stream_domain;var stream_username;var post;var onTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_takes_fetched_count++;if(sky_takes_fetched_count===block_numbers_length){sky_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var onStatusTakesFetched=function(block_numbers_length,data){var data_length=data.takes.length;for(var j=0;j<data_length;j++){sky_status_takes[\'o_\'+data.takes[j].post_id]=data.takes[j].value;}\nsky_status_takes_fetched_count++;if(sky_status_takes_fetched_count===block_numbers_length){sky_status_takes_fetched=true;}\nif(sky_takes_fetched===true&&sky_status_takes_fetched===true){calculateSort();}};var calculateSort=function(){calculate_ready=true;var sort=0;var post_id=post.post_id;var status_value=parseInt(sky_status_takes[\'o_\'+post_id]);if(post.content[\'7\'].selected[0]!==\'Before Babbling Brook alpha\'){sort=-10000;}else if(status_value===2){sort=-10000;}else if(typeof sky_takes[\'o_\'+post_id]!==\'undefined\'){sort=sky_takes[\'o_\'+post_id];}else{sort=0;}\nBabblingBrook.Filter.processNextPost(sort);};var onTakesFetchedError=function(){console.error("skys open bugs filter error. Fetching takes failed.");};var onStatusTakesFetchedError=function(){console.error("skys task priority filter error. Fetching status takes failed.");};var init=function(){var stream_url=BabblingBrook.Filter.getStreamUrl();stream_name=BabblingBrook.Library.extractName(stream_url);stream_version=BabblingBrook.Library.extractVersion(stream_url);stream_domain=BabblingBrook.Library.extractDomain(stream_url);stream_username=BabblingBrook.Library.extractUsername(stream_url);BabblingBrook.Filter.setPostsWithContent(true);BabblingBrook.Filter.processNextPost();};var main=function(current_post){post=current_post\nif(calculate_ready===false){var block_numbers_length=BabblingBrook.Filter.getBlockNumbers().length;for(var i=0;i<block_numbers_length;i++){var block_number=BabblingBrook.Filter.getBlockNumbers()[i];var url=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream\';BabblingBrook.Filter.getMiscData(url,onTakesFetched.bind(null,block_numbers_length));var url2=stream_domain+\'/\'+stream_username+\'/stream/\'+\nstream_name+\'/\'+stream_version+\'/getusertakes?username=sky&block_number=\'+\nblock_number+\'&type=stream&field_id=5\';BabblingBrook.Filter.getMiscData(url2,onStatusTakesFetched.bind(null,block_numbers_length));}}else{calculateSort();}};return{init:init,main:main};}', 'function () {\r\n\r\n    var sky_takes_fetched = false;\r\n  \r\n    var sky_takes_fetched_count = 0;\r\n\r\n    var sky_status_takes_fetched = false;\r\n  \r\n    var sky_status_takes_fetched_count = 0;\r\n  \r\n    var calculate_ready = false;  \r\n  \r\n    var sky_takes = [];\r\n  \r\n    var sky_status_takes = [];\r\n  \r\n    var stream_name;\r\n  \r\n    var stream_version;\r\n  \r\n    var stream_domain;\r\n  \r\n    var stream_username;\r\n    \r\n    var post;\r\n  \r\n    var onTakesFetched = function (block_numbers_length, data) {           \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_takes_fetched_count++;\r\n        if (sky_takes_fetched_count === block_numbers_length) {\r\n            sky_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n	var onStatusTakesFetched = function (block_numbers_length, data) {   \r\n        var data_length = data.takes.length;\r\n        for (var j = 0; j < data_length; j++) {                      \r\n            sky_status_takes[\'o_\' + data.takes[j].post_id] = data.takes[j].value;\r\n        }\r\n        sky_status_takes_fetched_count++;\r\n        if (sky_status_takes_fetched_count === block_numbers_length) {\r\n            sky_status_takes_fetched = true;\r\n        }\r\n        if(sky_takes_fetched === true && sky_status_takes_fetched === true) {\r\n            calculateSort();\r\n        }\r\n    };\r\n  \r\n    var calculateSort = function () {  \r\n        calculate_ready = true;\r\n        var sort = 0;\r\n        var post_id = post.post_id;\r\n        var status_value = parseInt(sky_status_takes[\'o_\' + post_id]);     	\r\n		\r\n        if (post.content[\'7\'].selected[0] !== \'Before Babbling Brook alpha\') {\r\n            sort = -10000;\r\n		} else if (status_value === 2) {\r\n            sort = -10000;	\r\n        } else if (typeof sky_takes[\'o_\' + post_id] !== \'undefined\') {\r\n            sort = sky_takes[\'o_\' + post_id];\r\n        } else {\r\n            sort = 0;\r\n        }  \r\n		\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n  \r\n    var onTakesFetchedError = function () {\r\n        console.error("skys open bugs filter error. Fetching takes failed.");\r\n    };\r\n	\r\n    var onStatusTakesFetchedError = function () {\r\n        console.error("skys task priority filter error. Fetching status takes failed.");\r\n    };    	\r\n	\r\n    var init = function () {\r\n        var stream_url = BabblingBrook.Filter.getStreamUrl();\r\n        stream_name = BabblingBrook.Library.extractName(stream_url);\r\n        stream_version = BabblingBrook.Library.extractVersion(stream_url);\r\n        stream_domain = BabblingBrook.Library.extractDomain(stream_url);\r\n        stream_username = BabblingBrook.Library.extractUsername(stream_url);  \r\n        BabblingBrook.Filter.setPostsWithContent(true);\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n  \r\n    var main = function (current_post) {\r\n        post = current_post       \r\n        if (calculate_ready === false) {            \r\n            var block_numbers_length = BabblingBrook.Filter.getBlockNumbers().length;          \r\n            for (var i = 0; i < block_numbers_length; i++) {   \r\n                var block_number = BabblingBrook.Filter.getBlockNumbers()[i];    \r\n                var url = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                            stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                            block_number + \'&type=stream\';\r\n				BabblingBrook.Filter.getMiscData(url, onTakesFetched.bind(null, block_numbers_length));\r\n                var url2 = stream_domain + \'/\' + stream_username + \'/stream/\' + \r\n                        stream_name + \'/\' + stream_version + \'/getusertakes?username=sky&block_number=\' + \r\n                        block_number + \'&type=stream&field_id=5\';\r\n				BabblingBrook.Filter.getMiscData(url2, onStatusTakesFetched.bind(null, block_numbers_length));  				\r\n            }\r\n        } else {\r\n            calculateSort();\r\n        }\r\n    };\r\n\r\n    return {\r\n      init : init,\r\n      main : main\r\n    };\r\n}', 3, 10080, 1, 10440),
	(10065, '2014-05-16 11:01:49', 10056, 'Selects specific posts for the beautiful photos tutorial.', '\nfunction(){var init=function(){BabblingBrook.Filter.processNextPost();};var main=function(post){var sort=Math.floor(Math.random()*10000);BabblingBrook.Filter.processNextPost(sort);};return{init:init,main:main};}', 'function () {\r\n    \r\n    var init = function () {\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var sort = Math.floor(Math.random() * 10000);\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10132, 1, 10549),
	(10066, '2014-06-25 10:10:03', 10057, 'Displays posts in a random order', '\nfunction(){var init=function(){BabblingBrook.Filter.processNextPost();};var main=function(post){var sort=Math.floor(Math.random()*10000);BabblingBrook.Filter.processNextPost(sort);};return{init:init,main:main};}', 'function () {\r\n    \r\n    var init = function () {\r\n        BabblingBrook.Filter.processNextPost();\r\n    };\r\n    \r\n    var main = function (post) {\r\n        var sort = Math.floor(Math.random() * 10000);\r\n        BabblingBrook.Filter.processNextPost(sort);\r\n    };\r\n    \r\n    return {\r\n        init : init,\r\n        main : main\r\n    };\r\n}', 2, 10152, 1, 10644);
/*!40000 ALTER TABLE `rhythm_extra` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.rhythm_param
CREATE TABLE IF NOT EXISTS `rhythm_param` (
  `rhythm_param_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'The primary key for this table',
  `rhythm_extra_id` int(10) unsigned NOT NULL COMMENT 'The extra id of the rhythm that this parameter belongs to.',
  `name` varchar(64) COLLATE utf8_unicode_ci NOT NULL COMMENT 'The name of this parameter.',
  `hint` text COLLATE utf8_unicode_ci COMMENT 'The hint text for this parameter.',
  `display_order` int(10) unsigned NOT NULL COMMENT 'The display order of this parameter in this rhythm.',
  PRIMARY KEY (`rhythm_param_id`),
  UNIQUE KEY `rhythm_extra_id` (`rhythm_extra_id`,`name`)
) ENGINE=InnoDB AUTO_INCREMENT=10043 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Details on client paramaters used by rhythms';

-- Dumping data for table cobalt_cascade.rhythm_param: ~11 rows (approximately)
/*!40000 ALTER TABLE `rhythm_param` DISABLE KEYS */;
INSERT INTO `rhythm_param` (`rhythm_param_id`, `rhythm_extra_id`, `name`, `hint`, `display_order`) VALUES
	(1, 24, 'test param 1', 'A hint for the first test param', 1),
	(2, 24, 'test param 2', 'A hint for the second test param', 1),
	(10027, 10035, 'meta filter', 'type a meta tag in here to filter the results to only posts that have that tag', 1),
	(10033, 10035, 'another filter', '', 2),
	(10034, 10035, 'one more', '', 3),
	(10035, 10049, 'meta filter', 'type a meta tag in here to filter the results to only posts that have that tag', 1),
	(10036, 10049, 'another filter', '', 2),
	(10037, 10049, 'one more', '', 3),
	(10038, 10024, 'meta task', 'Select a meta task to limit the results to just that task', 1),
	(10040, 10075, 'ui', '', 1),
	(10042, 10075, 'hjjkhkhfghjfg', 'hkjkhkhkhjkhk', 3);
/*!40000 ALTER TABLE `rhythm_param` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.rhythm_user_data
CREATE TABLE IF NOT EXISTS `rhythm_user_data` (
  `rhythm_user_data_id` int(11) NOT NULL AUTO_INCREMENT,
  `rhythm_extra_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `data` text COLLATE utf8_unicode_ci NOT NULL COMMENT 'A JSON string, representing data a rhythm has stored for a user.',
  PRIMARY KEY (`rhythm_user_data_id`),
  KEY `rhythm_extra_id` (`rhythm_extra_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Stores temporary data for a user who has subscribed to a rhythm. Data is stored in the users data store, not the rhythms data store.';

-- Dumping data for table cobalt_cascade.rhythm_user_data: ~0 rows (approximately)
/*!40000 ALTER TABLE `rhythm_user_data` DISABLE KEYS */;
/*!40000 ALTER TABLE `rhythm_user_data` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.ring
CREATE TABLE IF NOT EXISTS `ring` (
  `ring_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL COMMENT 'The user_id that represents this ring',
  `membership_type` int(11) unsigned NOT NULL COMMENT 'see lookup table',
  `membership_rhythm_id` int(11) unsigned DEFAULT NULL COMMENT 'The Rhythm that admins run to grant access to new members. Connects to rhythm_extra_id',
  `membership_rhythm_version_type` int(11) unsigned DEFAULT NULL COMMENT 'The version type for the membership Rhythm. See lookup table - version_type',
  `membership_super_ring_user_id` int(11) unsigned DEFAULT NULL COMMENT 'links to user.user_id Only used if membership_type is set to super_ring',
  `admin_type` int(11) unsigned NOT NULL COMMENT 'see lookup table',
  `admin_super_ring_user_id` int(11) unsigned DEFAULT NULL COMMENT 'links to user.user_id, not ring.ring_id',
  `ring_rhythm_id` int(11) unsigned DEFAULT NULL COMMENT 'The Rhythm that all members run. connects to rhythm_extra_id',
  `ring_rhythm_version_type` int(11) unsigned DEFAULT NULL COMMENT 'The version type of the Rhythm that all members run. See lookup table - version_type',
  PRIMARY KEY (`ring_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10017 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- Dumping data for table cobalt_cascade.ring: ~19 rows (approximately)
/*!40000 ALTER TABLE `ring` DISABLE KEYS */;
INSERT INTO `ring` (`ring_id`, `user_id`, `membership_type`, `membership_rhythm_id`, `membership_rhythm_version_type`, `membership_super_ring_user_id`, `admin_type`, `admin_super_ring_user_id`, `ring_rhythm_id`, `ring_rhythm_version_type`) VALUES
	(1, 3, 54, NULL, NULL, NULL, 58, 58, NULL, 32),
	(2, 6, 54, NULL, NULL, NULL, 58, 58, NULL, 32),
	(10000, 10019, 202, NULL, NULL, NULL, 58, NULL, NULL, NULL),
	(10001, 10107, 202, NULL, NULL, NULL, 59, NULL, NULL, NULL),
	(10002, 10108, 202, NULL, NULL, NULL, 58, NULL, NULL, NULL),
	(10003, 10109, 54, NULL, NULL, NULL, 58, NULL, NULL, NULL),
	(10004, 10110, 202, NULL, NULL, NULL, 59, NULL, NULL, NULL),
	(10005, 10111, 202, NULL, NULL, NULL, 59, NULL, NULL, NULL),
	(10006, 10112, 54, NULL, NULL, NULL, 58, NULL, NULL, NULL),
	(10007, 10113, 54, NULL, NULL, NULL, 59, NULL, NULL, NULL),
	(10008, 10114, 54, NULL, NULL, NULL, 59, NULL, NULL, NULL),
	(10009, 10115, 55, NULL, NULL, NULL, 59, NULL, NULL, NULL),
	(10010, 10116, 202, NULL, NULL, NULL, 58, NULL, NULL, NULL),
	(10011, 10117, 55, NULL, NULL, NULL, 59, NULL, NULL, NULL),
	(10012, 10118, 202, NULL, NULL, NULL, 58, NULL, NULL, NULL),
	(10013, 10119, 54, NULL, NULL, NULL, 58, NULL, NULL, NULL),
	(10014, 10120, 54, NULL, NULL, NULL, 58, NULL, NULL, NULL),
	(10015, 10121, 54, NULL, NULL, NULL, 58, NULL, NULL, NULL),
	(10016, 10141, 54, NULL, NULL, NULL, 58, NULL, NULL, NULL);
/*!40000 ALTER TABLE `ring` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.ring_rhythm_data
CREATE TABLE IF NOT EXISTS `ring_rhythm_data` (
  `ring_rhythm_data_id` int(11) DEFAULT NULL COMMENT 'Primary key for the table.',
  `ring_id` int(11) DEFAULT NULL COMMENT 'Id of the ring this data belongs to.',
  `user_id` int(11) DEFAULT NULL COMMENT 'Id of the user who is a member of the ring that generated this data.',
  `date_created` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Date the data was created or updated.',
  `type_id` int(11) DEFAULT NULL COMMENT 'The type of rhythm that was running. See lookup table for values.',
  `data` text COLLATE utf8_unicode_ci COMMENT 'The data being stored.'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Data stored by a rings rhythms after its admins and members have run them.';

-- Dumping data for table cobalt_cascade.ring_rhythm_data: ~0 rows (approximately)
/*!40000 ALTER TABLE `ring_rhythm_data` DISABLE KEYS */;
/*!40000 ALTER TABLE `ring_rhythm_data` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.ring_take_name
CREATE TABLE IF NOT EXISTS `ring_take_name` (
  `ring_take_name_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `ring_id` int(11) unsigned NOT NULL,
  `name` varchar(50) COLLATE utf8_unicode_ci NOT NULL COMMENT 'The name of the take',
  `amount` bigint(20) NOT NULL,
  `stream_id` int(11) unsigned DEFAULT NULL COMMENT 'The stream that this take can be used on',
  `stream_version` varchar(50) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'The version of the stream. Recorded separately so that it can include ''latest'' versions @todo this needs merging into the version_type in the lookup table.',
  `field_id` int(11) unsigned NOT NULL DEFAULT '1' COMMENT 'The field_id in the stream that is taken for this ring.',
  PRIMARY KEY (`ring_take_name_id`),
  KEY `ring_id` (`ring_id`,`name`)
) ENGINE=InnoDB AUTO_INCREMENT=10007 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='take names for rings';

-- Dumping data for table cobalt_cascade.ring_take_name: ~9 rows (approximately)
/*!40000 ALTER TABLE `ring_take_name` DISABLE KEYS */;
INSERT INTO `ring_take_name` (`ring_take_name_id`, `ring_id`, `name`, `amount`, `stream_id`, `stream_version`, `field_id`) VALUES
	(1, 1, 'take test', 1, 1, '0/0/0', 1),
	(2, 1, 'take user test', 1, 2, '0/0/0', 1),
	(3, 1, 'take comment test', 1, 3, '0/0/0', 1),
	(10001, 10000, 'spam', 1, 10000, '0/0/0', 1),
	(10002, 10000, 'spam', 1, 10003, '0/0/0', 1),
	(10003, 10012, 'test', 3, 10023, '0/0/0', 1),
	(10004, 10012, 'another test', 34, 10015, '0/0/0', 1),
	(10005, 10012, 'again', -45, NULL, NULL, 1),
	(10006, 10013, 'tutorial spam', 1, NULL, NULL, 1);
/*!40000 ALTER TABLE `ring_take_name` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.ring_user_take
CREATE TABLE IF NOT EXISTS `ring_user_take` (
  `ring_user_take_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL,
  `ring_take_name_id` int(11) unsigned NOT NULL,
  `post_id` int(11) unsigned NOT NULL,
  PRIMARY KEY (`ring_user_take_id`),
  KEY `user_id` (`user_id`,`ring_take_name_id`,`post_id`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='users who have taken in the name of a ring';

-- Dumping data for table cobalt_cascade.ring_user_take: ~1 rows (approximately)
/*!40000 ALTER TABLE `ring_user_take` DISABLE KEYS */;
INSERT INTO `ring_user_take` (`ring_user_take_id`, `user_id`, `ring_take_name_id`, `post_id`) VALUES
	(22, 10169, 10006, 10225);
/*!40000 ALTER TABLE `ring_user_take` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.secret
CREATE TABLE IF NOT EXISTS `secret` (
  `secret_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL COMMENT 'The user who owns this secret',
  `secret` tinytext COLLATE utf8_unicode_ci NOT NULL COMMENT 'A uuid that is ued as a secret code.',
  `date_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Used to decide when a secret is out of date.',
  PRIMARY KEY (`secret_id`),
  KEY `user_id` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Generated user secrets used by other stores to verify that a user request is valid.';

-- Dumping data for table cobalt_cascade.secret: ~0 rows (approximately)
/*!40000 ALTER TABLE `secret` DISABLE KEYS */;
/*!40000 ALTER TABLE `secret` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.signup_code
CREATE TABLE IF NOT EXISTS `signup_code` (
  `signup_code_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(40) COLLATE utf8_unicode_ci NOT NULL COMMENT 'The uuid that is required for a user to sign up.',
  `primary_category` varchar(256) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'A category to identify the source of this code.',
  `secondary_category` varchar(256) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'A second category to identify the source of this code.',
  `used_user_id` int(10) unsigned DEFAULT NULL COMMENT 'The user_id of the user who signed up with this code.',
  `hold_for_domain` varchar(256) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'If the user is logging in for the first time this is their domain name.',
  `hold_for_username` varchar(256) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'If the user is logging in for the first time this is their username.',
  PRIMARY KEY (`signup_code_id`),
  UNIQUE KEY `code` (`code`),
  KEY `primary_category` (`primary_category`(255)),
  KEY `secondary_category` (`secondary_category`(255))
) ENGINE=InnoDB AUTO_INCREMENT=10003 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Signup validation codes that allow a user to signup (If option is turned on in the config.)';

-- Dumping data for table cobalt_cascade.signup_code: ~8 rows (approximately)
/*!40000 ALTER TABLE `signup_code` DISABLE KEYS */;
INSERT INTO `signup_code` (`signup_code_id`, `code`, `primary_category`, `secondary_category`, `used_user_id`, `hold_for_domain`, `hold_for_username`) VALUES
	(1, 'testcode 1', 'This is a test code', 'This is a test code', 1, NULL, NULL),
	(2, 'testcode 2', 'This is a test code', 'This is a test code', 2, NULL, NULL),
	(3, 'testcode 3', 'This is a test code', 'This is a test code', 3, NULL, NULL),
	(4, 'testcode 4', 'This is a test code', 'This is a test code', 4, NULL, NULL),
	(5, 'testcode 5', 'This is a test code', 'This is a test code', 5, NULL, NULL),
	(6, 'testcode 6', 'This is a test code', 'This is a test code', 6, NULL, NULL),
	(7, 'testcode 7', 'This is a test code', 'This is a test code', 7, NULL, NULL),
	(10002, 'skys code', 'test to create skys meta post', '', 10000, NULL, NULL);
/*!40000 ALTER TABLE `signup_code` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.site
CREATE TABLE IF NOT EXISTS `site` (
  `site_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `domain` varchar(256) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`site_id`),
  UNIQUE KEY `domain` (`domain`)
) ENGINE=MyISAM AUTO_INCREMENT=10005 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Link table for website urls';

-- Dumping data for table cobalt_cascade.site: 2 rows
/*!40000 ALTER TABLE `site` DISABLE KEYS */;
INSERT INTO `site` (`site_id`, `domain`) VALUES
	(10000, 'cobaltcascade.localhost'),
	(10004, 'brookbank.localhost');
/*!40000 ALTER TABLE `site` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.site_access
CREATE TABLE IF NOT EXISTS `site_access` (
  `site_access_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL,
  `site_id` int(11) unsigned NOT NULL COMMENT 'The domain that is logged in',
  `login_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `login_expires` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Time at which the login expires',
  `session_id` varchar(256) CHARACTER SET latin1 NOT NULL COMMENT 'Expiry date is not checked if the session_id is stil valid',
  PRIMARY KEY (`site_access_id`),
  KEY `user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10415 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Sites that a user has given permission to login to';

-- Dumping data for table cobalt_cascade.site_access: ~55 rows (approximately)
/*!40000 ALTER TABLE `site_access` DISABLE KEYS */;
INSERT INTO `site_access` (`site_access_id`, `user_id`, `site_id`, `login_time`, `login_expires`, `session_id`) VALUES
	(10046, 10002, 10000, '2013-07-24 10:20:43', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10047, 10003, 10000, '2013-07-24 10:24:51', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10048, 10004, 10000, '2013-07-24 10:28:49', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10049, 10005, 10000, '2013-07-24 10:29:28', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10050, 10006, 10000, '2013-07-24 10:30:02', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10051, 10007, 10000, '2013-07-24 10:30:37', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10052, 10008, 10000, '2013-07-24 10:31:10', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10053, 10009, 10000, '2013-07-24 10:32:51', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10054, 10010, 10000, '2013-07-24 10:37:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10055, 10011, 10000, '2013-07-24 10:38:23', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10056, 10012, 10000, '2013-07-24 10:38:39', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10073, 10028, 10000, '2013-08-05 08:55:09', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10075, 10030, 10000, '2013-08-05 09:01:34', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10076, 10031, 10000, '2013-08-05 09:01:46', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10077, 10032, 10000, '2013-08-05 09:03:38', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10079, 10034, 10000, '2013-08-05 09:06:31', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10081, 10036, 10000, '2013-08-05 09:09:40', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10082, 10037, 10000, '2013-08-05 09:09:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10083, 10038, 10000, '2013-08-05 09:18:21', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10084, 10039, 10000, '2013-08-05 09:23:27', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10085, 10040, 10000, '2013-08-05 09:23:47', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10086, 10041, 10000, '2013-08-05 09:26:01', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10087, 10042, 10000, '2013-08-05 09:27:53', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10088, 10043, 10000, '2013-08-05 09:28:24', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10089, 10044, 10000, '2013-08-05 09:29:16', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10090, 10045, 10000, '2013-08-05 09:29:58', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10091, 10046, 10000, '2013-08-05 09:32:17', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10092, 10047, 10000, '2013-08-05 09:33:25', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10174, 7, 10000, '2013-11-07 13:01:16', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10289, 10106, 10000, '2014-07-16 06:20:39', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10292, 10125, 10000, '2014-08-29 18:36:53', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10293, 10126, 10000, '2014-08-29 18:41:39', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10294, 10127, 10000, '2014-08-29 18:42:25', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10295, 10128, 10000, '2014-08-29 18:43:08', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10296, 10129, 10000, '2014-08-29 18:44:42', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10297, 10130, 10000, '2014-08-29 18:45:16', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10298, 10131, 10000, '2014-08-29 18:50:34', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10299, 10132, 10000, '2014-08-29 18:52:13', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10300, 10133, 10000, '2014-08-29 18:55:52', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10301, 10134, 10000, '2014-08-29 18:56:51', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10302, 10135, 10000, '2014-08-29 18:58:10', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10303, 10136, 10000, '2014-08-29 19:09:47', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10304, 10137, 10000, '2014-08-29 19:13:24', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10307, 10140, 10000, '2014-09-01 08:01:08', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
	(10362, 10141, 10000, '2014-09-04 15:39:50', '0000-00-00 00:00:00', 'fl9tlg741tvfo389qojc2n8pf3'),
	(10363, 10143, 10000, '2014-09-04 15:49:08', '0000-00-00 00:00:00', 'fl9tlg741tvfo389qojc2n8pf3'),
	(10365, 10145, 10000, '2014-09-04 15:55:46', '0000-00-00 00:00:00', 'fl9tlg741tvfo389qojc2n8pf3'),
	(10393, 10157, 10000, '2014-09-09 15:40:29', '0000-00-00 00:00:00', 'oqmk83mc85d4i6r69mri89n2o5'),
	(10406, 10164, 10000, '2014-09-10 14:08:29', '0000-00-00 00:00:00', 'hb7lcmv0fgljve840pri8q8jf2'),
	(10407, 10165, 10000, '2014-09-10 14:36:43', '0000-00-00 00:00:00', 'm1a6mn1dolkbks9tjs05i9dt14'),
	(10408, 10166, 10000, '2014-09-10 15:15:26', '0000-00-00 00:00:00', '02isisd83849cjkpbq9ci15ri4'),
	(10409, 10167, 10000, '2014-09-10 15:24:28', '0000-00-00 00:00:00', 'kihn4d99mdpmcda3r3pr19c272'),
	(10410, 10168, 10000, '2014-09-10 15:31:44', '0000-00-00 00:00:00', 'plgvggqfl007650sfv45pai7u3'),
	(10413, 1, 10000, '2014-09-11 10:38:13', '0000-00-00 00:00:00', 'vm6m40vfh85uo97f4ks6phvtr1'),
	(10414, 10169, 10000, '2014-09-11 11:01:16', '0000-00-00 00:00:00', '50hh435nb939cpbbjr8skf0966');
/*!40000 ALTER TABLE `site_access` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.status
CREATE TABLE IF NOT EXISTS `status` (
  `status_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `value` varchar(128) COLLATE utf8_unicode_ci NOT NULL,
  `description` varchar(256) COLLATE utf8_unicode_ci NOT NULL,
  `display_order` int(11) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`status_id`),
  KEY `value` (`value`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- Dumping data for table cobalt_cascade.status: ~3 rows (approximately)
/*!40000 ALTER TABLE `status` DISABLE KEYS */;
INSERT INTO `status` (`status_id`, `value`, `description`, `display_order`) VALUES
	(1, 'private', 'Private', 1),
	(2, 'public', 'Public', 2),
	(3, 'deprecated', 'Deprecated', 3);
/*!40000 ALTER TABLE `status` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream
CREATE TABLE IF NOT EXISTS `stream` (
  `stream_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(128) COLLATE utf8_unicode_ci NOT NULL,
  `user_id` int(11) unsigned NOT NULL COMMENT 'User who created this stream',
  `kind` int(11) unsigned NOT NULL COMMENT 'See lookup table for options. The kind of stream. See prototype description for details',
  PRIMARY KEY (`stream_id`),
  KEY `cat_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10121 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Describes different posts that can be made';

-- Dumping data for table cobalt_cascade.stream: ~57 rows (approximately)
/*!40000 ALTER TABLE `stream` DISABLE KEYS */;
INSERT INTO `stream` (`stream_id`, `name`, `user_id`, `kind`) VALUES
	(1, 'test stream', 1, 51),
	(2, 'test user stream', 1, 52),
	(3, 'test comments', 1, 51),
	(4, 'test suggested stream', 1, 51),
	(5, 'test stream with sub value Rhythm', 1, 51),
	(6, 'test everything stream', 1, 51),
	(7, 'test oscillating 1', 1, 51),
	(8, 'test oscillating 2', 1, 51),
	(9, 'test suggested stream 2', 1, 51),
	(10, 'test stream 2', 1, 51),
	(11, 'test stream 3', 1, 51),
	(12, 'test stream 4', 1, 51),
	(13, 'test stream 5', 1, 51),
	(14, 'test stream 6', 1, 51),
	(15, 'test user stream 2', 1, 52),
	(16, 'test user stream 3', 1, 52),
	(17, 'test user stream 4', 1, 52),
	(18, 'test user stream 5', 1, 52),
	(19, 'test user stream 6', 1, 52),
	(20, 'test link in title', 1, 51),
	(21, 'test stream 7', 1, 51),
	(22, 'test stream 8', 1, 51),
	(23, 'test stream 9', 1, 51),
	(24, 'test stream 10', 1, 51),
	(25, 'test broken comments', 1, 51),
	(30, 'test restricted comments', 1, 51),
	(31, 'test stream anyone can edit', 1, 51),
	(32, 'test stream for whocantake options', 1, 51),
	(33, 'test stream 11', 1, 51),
	(10000, 'bugs', 10000, 51),
	(10001, 'snippets', 10000, 51),
	(10002, 'meta stream for streams', 10000, 51),
	(10003, 'comments', 10000, 51),
	(10004, 'meta stream for users and rings', 10000, 51),
	(10005, 'private', 10000, 51),
	(10006, 'meta stream for rhythms', 10000, 51),
	(10009, 'news', 10000, 51),
	(10014, 'tasks', 10000, 51),
	(10015, 'feature requests', 10000, 51),
	(10016, 'test creation', 10000, 51),
	(10018, 'babbling brook', 10000, 51),
	(10019, 'cobalt meta', 10000, 51),
	(10023, 'chat', 10000, 51),
	(10024, 'feedback', 10000, 51),
	(10083, 'beautiful', 10000, 51),
	(10084, 'tutorial introductions', 10000, 51),
	(10085, 'amazing places', 10000, 51),
	(10086, 'favourite places', 10000, 51),
	(10087, 'ugly', 10000, 51),
	(10088, 'ace', 10000, 52),
	(10089, 'spammer', 10000, 52),
	(10100, 'invitations', 10000, 51),
	(10101, 'the tutorial made me do it', 10000, 52),
	(10103, 'another test', 10000, 52),
	(10114, 'tttteest', 10000, 51),
	(10115, 'testttty', 10000, 51),
	(10120, 'gf', 10169, 51);
/*!40000 ALTER TABLE `stream` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_block
CREATE TABLE IF NOT EXISTS `stream_block` (
  `stream_block_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `stream_extra_id` int(11) unsigned NOT NULL,
  `start_time` int(11) unsigned NOT NULL,
  `end_time` int(11) unsigned NOT NULL,
  `block_number` int(11) unsigned NOT NULL,
  PRIMARY KEY (`stream_block_id`),
  KEY `stream_extra_id` (`stream_extra_id`),
  KEY `start_time` (`start_time`),
  KEY `end_time` (`end_time`),
  KEY `block_number` (`block_number`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- Dumping data for table cobalt_cascade.stream_block: ~2 rows (approximately)
/*!40000 ALTER TABLE `stream_block` DISABLE KEYS */;
INSERT INTO `stream_block` (`stream_block_id`, `stream_extra_id`, `start_time`, `end_time`, `block_number`) VALUES
	(1, 1, 0, 1320847200, 1),
	(2, 1, 1320847200, 1321012800, 2);
/*!40000 ALTER TABLE `stream_block` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_block_tree
CREATE TABLE IF NOT EXISTS `stream_block_tree` (
  `stream_block_tree_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` int(11) unsigned NOT NULL COMMENT 'The top post id for this tree',
  `start_time` int(11) unsigned NOT NULL,
  `end_time` int(11) unsigned NOT NULL,
  `block_number` int(11) unsigned NOT NULL,
  PRIMARY KEY (`stream_block_tree_id`),
  KEY `stream_extra_id` (`post_id`),
  KEY `start_time` (`start_time`),
  KEY `end_time` (`end_time`),
  KEY `block_number` (`block_number`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- Dumping data for table cobalt_cascade.stream_block_tree: ~2 rows (approximately)
/*!40000 ALTER TABLE `stream_block_tree` DISABLE KEYS */;
INSERT INTO `stream_block_tree` (`stream_block_tree_id`, `post_id`, `start_time`, `end_time`, `block_number`) VALUES
	(1, 1, 0, 1321189200, 1),
	(2, 1, 1321189201, 1321197600, 2);
/*!40000 ALTER TABLE `stream_block_tree` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_child
CREATE TABLE IF NOT EXISTS `stream_child` (
  `stream_child_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `parent_id` int(11) unsigned NOT NULL COMMENT 'parent stream_extra_id',
  `child_id` int(11) unsigned NOT NULL COMMENT 'child stream_extra_id',
  `version_type` int(11) unsigned NOT NULL COMMENT 'see version_type in the lookup table. Defaults to major.minor.patch',
  `sort_order` int(11) unsigned NOT NULL COMMENT 'The order that the child streams appear in. 1 is high.',
  PRIMARY KEY (`stream_child_id`),
  UNIQUE KEY `unique_row` (`parent_id`,`child_id`,`version_type`),
  KEY `parent_id` (`parent_id`,`child_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10067 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Stores relations of child streams to parents';

-- Dumping data for table cobalt_cascade.stream_child: ~64 rows (approximately)
/*!40000 ALTER TABLE `stream_child` DISABLE KEYS */;
INSERT INTO `stream_child` (`stream_child_id`, `parent_id`, `child_id`, `version_type`, `sort_order`) VALUES
	(1, 1, 3, 32, 0),
	(2, 2, 3, 32, 0),
	(3, 3, 3, 32, 0),
	(4, 4, 3, 32, 0),
	(5, 5, 3, 32, 0),
	(6, 6, 6, 32, 0),
	(7, 7, 8, 32, 0),
	(8, 8, 7, 32, 0),
	(9, 9, 3, 32, 0),
	(10, 10, 26, 32, 0),
	(11, 11, 3, 32, 0),
	(12, 12, 3, 32, 0),
	(13, 13, 13, 32, 0),
	(14, 14, 31, 32, 0),
	(15, 15, 3, 32, 0),
	(16, 16, 3, 32, 0),
	(17, 17, 3, 32, 0),
	(18, 18, 3, 32, 0),
	(19, 19, 3, 32, 0),
	(20, 20, 20, 32, 0),
	(21, 21, 3, 32, 0),
	(22, 22, 3, 32, 0),
	(23, 23, 3, 32, 0),
	(24, 24, 3, 32, 0),
	(29, 31, 31, 32, 0),
	(30, 32, 32, 32, 0),
	(31, 33, 33, 32, 0),
	(32, 34, 34, 32, 0),
	(10000, 10001, 10003, 32, 0),
	(10001, 10005, 10005, 32, 0),
	(10002, 10004, 10003, 32, 0),
	(10003, 10003, 10003, 32, 0),
	(10004, 10002, 10003, 32, 0),
	(10005, 10008, 10003, 32, 0),
	(10010, 10012, 10003, 32, 0),
	(10015, 10017, 10003, 32, 0),
	(10016, 10018, 10003, 32, 0),
	(10017, 10009, 10003, 32, 0),
	(10018, 10019, 10003, 32, 0),
	(10022, 10021, 10003, 32, 0),
	(10023, 10022, 10003, 32, 0),
	(10024, 10023, 10003, 33, 0),
	(10030, 10028, 10003, 32, 0),
	(10031, 10029, 10003, 32, 0),
	(10032, 10017, 10017, 32, 0),
	(10037, 10031, 10003, 32, 0),
	(10038, 10028, 10029, 32, 0),
	(10040, 10032, 10003, 32, 0),
	(10041, 10033, 10003, 32, 0),
	(10042, 10034, 10003, 32, 0),
	(10043, 10035, 10003, 32, 0),
	(10044, 10036, 10003, 32, 0),
	(10045, 10037, 10003, 32, 0),
	(10046, 10038, 10003, 32, 0),
	(10047, 10039, 10003, 32, 0),
	(10052, 10077, 10003, 32, 0),
	(10053, 10078, 10003, 32, 0),
	(10054, 10079, 10003, 32, 0),
	(10055, 10080, 10003, 35, 1),
	(10056, 10106, 10003, 32, 1),
	(10057, 10107, 10003, 32, 2),
	(10060, 10108, 10003, 32, 0),
	(10061, 10109, 10003, 32, 0),
	(10066, 10114, 10003, 32, 1);
/*!40000 ALTER TABLE `stream_child` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_default_rhythm
CREATE TABLE IF NOT EXISTS `stream_default_rhythm` (
  `stream_default_rhythm_id` int(10) NOT NULL AUTO_INCREMENT,
  `stream_extra_id` int(10) NOT NULL COMMENT 'The extra id of the stream that has a default rhythm.',
  `rhythm_extra_id` int(10) NOT NULL COMMENT 'The extra of of the rhythm that is a default for this stream.',
  `version_type` int(10) NOT NULL COMMENT 'The type of version that is used for this rhythm. See lookup table for details.',
  `sort_order` int(10) NOT NULL COMMENT 'The order these defaults appear in.  1 is high.',
  PRIMARY KEY (`stream_default_rhythm_id`),
  UNIQUE KEY `stream_extra_id` (`stream_extra_id`,`rhythm_extra_id`,`version_type`),
  UNIQUE KEY `sort_order` (`stream_extra_id`,`sort_order`)
) ENGINE=InnoDB AUTO_INCREMENT=371 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Stores the default rhythm subscriptions for a stream.';

-- Dumping data for table cobalt_cascade.stream_default_rhythm: ~154 rows (approximately)
/*!40000 ALTER TABLE `stream_default_rhythm` DISABLE KEYS */;
INSERT INTO `stream_default_rhythm` (`stream_default_rhythm_id`, `stream_extra_id`, `rhythm_extra_id`, `version_type`, `sort_order`) VALUES
	(154, 1, 1, 32, 1),
	(155, 1, 2, 32, 2),
	(156, 21, 1, 32, 1),
	(157, 21, 2, 32, 2),
	(158, 2, 1, 32, 1),
	(159, 2, 2, 32, 2),
	(160, 3, 1, 32, 1),
	(161, 3, 2, 32, 2),
	(162, 4, 1, 32, 1),
	(163, 4, 2, 32, 2),
	(164, 5, 1, 32, 1),
	(165, 5, 2, 32, 2),
	(166, 6, 1, 32, 1),
	(167, 6, 2, 32, 2),
	(168, 7, 1, 32, 1),
	(169, 7, 2, 32, 2),
	(170, 8, 1, 32, 1),
	(171, 8, 2, 32, 2),
	(172, 9, 1, 32, 1),
	(173, 9, 2, 32, 2),
	(174, 10, 1, 32, 1),
	(175, 10, 2, 32, 2),
	(176, 11, 1, 32, 1),
	(177, 11, 2, 32, 2),
	(178, 12, 1, 32, 1),
	(179, 12, 2, 32, 2),
	(180, 13, 1, 32, 1),
	(181, 13, 2, 32, 2),
	(182, 14, 1, 32, 1),
	(183, 14, 2, 32, 2),
	(184, 15, 1, 32, 1),
	(185, 15, 2, 32, 2),
	(186, 16, 1, 32, 1),
	(187, 16, 2, 32, 2),
	(188, 17, 1, 32, 1),
	(189, 17, 2, 32, 2),
	(190, 18, 1, 32, 1),
	(191, 18, 2, 32, 2),
	(192, 19, 1, 32, 1),
	(193, 19, 2, 32, 2),
	(194, 20, 1, 32, 1),
	(195, 20, 2, 32, 2),
	(196, 22, 1, 32, 1),
	(197, 22, 2, 32, 2),
	(198, 23, 1, 32, 1),
	(199, 23, 2, 32, 2),
	(200, 24, 1, 32, 1),
	(201, 24, 2, 32, 2),
	(202, 25, 1, 32, 1),
	(203, 25, 2, 32, 2),
	(204, 26, 1, 32, 1),
	(205, 26, 2, 32, 2),
	(206, 31, 1, 32, 1),
	(207, 31, 2, 32, 2),
	(208, 32, 1, 32, 1),
	(209, 32, 2, 32, 2),
	(210, 33, 1, 32, 1),
	(211, 33, 2, 32, 2),
	(212, 34, 1, 32, 1),
	(213, 34, 2, 32, 2),
	(214, 10001, 1, 32, 1),
	(215, 10001, 2, 32, 2),
	(216, 10008, 1, 32, 1),
	(217, 10008, 2, 32, 2),
	(218, 10002, 1, 32, 1),
	(219, 10002, 2, 32, 2),
	(220, 10003, 1, 32, 1),
	(221, 10003, 2, 32, 2),
	(222, 10004, 1, 32, 1),
	(223, 10004, 2, 32, 2),
	(224, 10005, 1, 32, 1),
	(225, 10005, 2, 32, 2),
	(226, 10009, 1, 32, 1),
	(227, 10009, 2, 32, 2),
	(228, 10012, 1, 32, 1),
	(229, 10012, 2, 32, 2),
	(230, 10017, 1, 32, 1),
	(231, 10017, 2, 32, 2),
	(232, 10018, 1, 32, 1),
	(233, 10018, 2, 32, 2),
	(234, 10019, 1, 32, 1),
	(235, 10019, 2, 32, 2),
	(236, 10021, 1, 32, 1),
	(237, 10021, 2, 32, 2),
	(238, 10022, 1, 32, 1),
	(239, 10022, 2, 32, 2),
	(240, 10028, 1, 32, 1),
	(241, 10028, 2, 32, 2),
	(242, 10029, 1, 32, 1),
	(243, 10029, 2, 32, 2),
	(244, 10074, 1, 32, 1),
	(246, 10075, 1, 32, 1),
	(247, 10075, 2, 32, 2),
	(248, 10076, 1, 32, 1),
	(249, 10076, 2, 32, 2),
	(257, 10078, 10002, 35, 4),
	(262, 10079, 10002, 33, 5),
	(263, 10079, 10065, 34, 6),
	(265, 10080, 10002, 32, 2),
	(266, 10080, 10000, 32, 3),
	(267, 10081, 10008, 32, 1),
	(268, 10081, 10002, 32, 2),
	(269, 10081, 10000, 32, 3),
	(271, 10082, 10002, 32, 2),
	(272, 10082, 10000, 32, 3),
	(273, 10083, 10008, 32, 1),
	(274, 10083, 10002, 32, 2),
	(275, 10083, 10000, 32, 3),
	(276, 10084, 10008, 32, 1),
	(277, 10084, 10002, 32, 2),
	(278, 10084, 10000, 32, 3),
	(285, 10087, 10008, 32, 1),
	(286, 10087, 10002, 32, 2),
	(287, 10087, 10000, 32, 3),
	(300, 10092, 10008, 32, 1),
	(301, 10092, 10002, 32, 2),
	(302, 10092, 10000, 32, 3),
	(303, 10077, 10066, 35, 5),
	(304, 10077, 10002, 35, 3),
	(305, 10077, 10000, 35, 6),
	(306, 10077, 10017, 35, 4),
	(308, 10093, 10002, 32, 3),
	(309, 10093, 10000, 32, 2),
	(310, 10094, 10008, 32, 1),
	(311, 10094, 10002, 32, 2),
	(312, 10094, 10000, 32, 3),
	(313, 10095, 10008, 32, 1),
	(314, 10095, 10002, 32, 2),
	(315, 10095, 10000, 32, 3),
	(316, 10096, 10008, 32, 1),
	(317, 10096, 10002, 32, 2),
	(318, 10096, 10000, 32, 3),
	(343, 10105, 10008, 32, 1),
	(344, 10105, 10002, 32, 2),
	(345, 10105, 10000, 32, 3),
	(350, 10106, 10002, 32, 1),
	(351, 10106, 10000, 32, 2),
	(352, 10107, 10002, 35, 3),
	(353, 10107, 10000, 32, 2),
	(356, 10108, 10000, 32, 2),
	(357, 10108, 10002, 35, 3),
	(358, 10109, 10000, 32, 2),
	(359, 10109, 10002, 35, 3),
	(360, 10110, 10002, 32, 1),
	(361, 10110, 10000, 32, 2),
	(362, 10111, 10002, 32, 1),
	(363, 10111, 10000, 32, 2),
	(364, 10112, 10002, 32, 1),
	(365, 10112, 10000, 32, 2),
	(366, 10113, 10002, 32, 1),
	(367, 10113, 10000, 32, 2),
	(368, 6, 10036, 35, 3),
	(369, 10114, 10002, 32, 1),
	(370, 10114, 10000, 32, 2);
/*!40000 ALTER TABLE `stream_default_rhythm` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_default_ring
CREATE TABLE IF NOT EXISTS `stream_default_ring` (
  `stream_default_ring_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `stream_extra_id` int(11) unsigned NOT NULL,
  `ring_user_id` int(11) unsigned NOT NULL,
  `sort_order` int(11) unsigned NOT NULL COMMENT 'The order that the default rings appear in. 1 is high.',
  PRIMARY KEY (`stream_default_ring_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10027 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- Dumping data for table cobalt_cascade.stream_default_ring: ~15 rows (approximately)
/*!40000 ALTER TABLE `stream_default_ring` DISABLE KEYS */;
INSERT INTO `stream_default_ring` (`stream_default_ring_id`, `stream_extra_id`, `ring_user_id`, `sort_order`) VALUES
	(10002, 10021, 10019, 0),
	(10003, 10022, 10019, 0),
	(10004, 10077, 10019, 0),
	(10005, 10080, 10019, 1),
	(10007, 10106, 10019, 1),
	(10013, 10107, 10121, 2),
	(10014, 10107, 10120, 3),
	(10015, 10107, 10019, 1),
	(10016, 10108, 10019, 1),
	(10017, 10108, 10121, 2),
	(10018, 10108, 10120, 3),
	(10019, 10109, 10019, 1),
	(10020, 10109, 10121, 2),
	(10021, 10109, 10120, 3),
	(10026, 10114, 10019, 1);
/*!40000 ALTER TABLE `stream_default_ring` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_extra
CREATE TABLE IF NOT EXISTS `stream_extra` (
  `stream_extra_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `stream_id` int(11) unsigned NOT NULL,
  `date_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `description` text COLLATE utf8_unicode_ci,
  `version_id` int(11) unsigned NOT NULL,
  `status_id` int(11) unsigned NOT NULL,
  `group_period` int(11) unsigned DEFAULT '45' COMMENT 'The time range for post results. See lookup table for valid values',
  `post_mode` int(11) NOT NULL DEFAULT '140' COMMENT 'Who can submit posts to this stream. See lookup table for valid values',
  `meta_post_id` int(11) DEFAULT NULL COMMENT 'links to an post where people can vote and comment on this stream.',
  `edit_mode` int(11) NOT NULL DEFAULT '146' COMMENT 'Who can edit this post. See lookup table for details.',
  PRIMARY KEY (`stream_extra_id`),
  KEY `stream_id` (`stream_id`),
  KEY `status_id` (`status_id`),
  KEY `version_id` (`version_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10115 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Stream details that vary by version';

-- Dumping data for table cobalt_cascade.stream_extra: ~59 rows (approximately)
/*!40000 ALTER TABLE `stream_extra` DISABLE KEYS */;
INSERT INTO `stream_extra` (`stream_extra_id`, `stream_id`, `date_created`, `description`, `version_id`, `status_id`, `group_period`, `post_mode`, `meta_post_id`, `edit_mode`) VALUES
	(1, 1, '2011-11-07 13:30:37', 'An stream for making test posts.', 1, 2, 45, 140, 61, 146),
	(2, 2, '2011-11-08 10:00:39', 'A stream to test takes against users', 4, 2, 45, 140, 62, 146),
	(3, 3, '2011-11-09 11:02:20', 'A standard test comment', 5, 2, 45, 139, 63, 146),
	(4, 4, '2011-11-30 15:38:59', 'A stream to suggest when testing suggested stream Rhythms.', 8, 2, 45, 140, 64, 146),
	(5, 5, '2011-12-23 09:24:24', 'A stream that allows for testing of posts with sub values that require an Rhythm check.', 13, 1, 45, 140, 65, 146),
	(6, 6, '2012-01-05 09:29:21', 'A test stream containing all types of field and value', 14, 1, 45, 140, 66, 146),
	(7, 7, '2011-11-07 13:30:37', 'An stream for making oscillating comments', 15, 2, 45, 140, 67, 146),
	(8, 8, '2011-11-07 13:30:37', 'Second stream for making oscillating comments', 16, 2, 45, 140, 68, 146),
	(9, 9, '2011-11-07 13:30:37', 'An stream used by the test suggestion Rhythm.', 21, 2, 45, 140, 69, 146),
	(10, 10, '2011-11-07 13:30:37', 'A 2nd test stream', 22, 2, 45, 140, 70, 146),
	(11, 11, '2011-11-07 13:30:37', 'A 3rd test stream', 23, 2, 45, 140, 71, 146),
	(12, 12, '2011-11-07 13:30:37', 'A 4th test stream', 24, 2, 45, 140, 72, 146),
	(13, 13, '2011-11-07 13:30:37', 'A 5th test stream. Has an additional text field to test that deleted fields show correctly for orphans.', 25, 2, 45, 140, 73, 146),
	(14, 14, '2011-11-07 13:30:37', 'A 6th test stream - with restricted comments', 26, 2, 45, 140, 74, 146),
	(15, 15, '2011-11-08 10:00:39', 'A stream to test takes against users 2', 29, 2, 45, 140, 75, 146),
	(16, 16, '2011-11-08 10:00:39', 'A stream to test takes against users 3', 30, 2, 45, 140, 76, 146),
	(17, 17, '2011-11-08 10:00:39', 'A stream to test takes against users 4', 31, 2, 45, 140, 77, 146),
	(18, 18, '2011-11-08 10:00:39', 'A stream to test takes against users 5', 32, 2, 45, 140, 78, 146),
	(19, 19, '2011-11-08 10:00:39', 'A stream to test takes against users 6', 33, 2, 45, 140, 79, 146),
	(20, 20, '2011-11-07 13:30:37', 'A stream with a link for the main field and also a secondary field to test opening of the post field.', 17, 2, 45, 140, 80, 146),
	(21, 1, '2011-11-07 13:30:37', 'A depricated stream for making test posts.', 35, 3, 45, 140, 86, 146),
	(22, 21, '2011-11-07 13:30:37', 'A 7th test stream', 43, 2, 45, 140, 81, 146),
	(23, 22, '2011-11-07 13:30:37', 'A 8th test stream. Used to test that the correct error is raised if getpostsblock fails', 44, 2, 45, 140, 82, 146),
	(24, 23, '2011-11-07 13:30:37', 'A 9th test stream. Used to test that the correct error is raised if getusertakes fails', 45, 2, 45, 140, 83, 146),
	(25, 24, '2011-11-07 13:30:37', 'A 10th test stream. For testing broken stream json data', 47, 2, 45, 140, 84, 146),
	(26, 25, '2011-11-07 13:30:37', 'Used for testing that broken tree data results in a client error.', 48, 2, 45, 140, 85, 146),
	(31, 30, '2011-11-09 11:02:20', 'A restricted test comment', 53, 2, 45, 140, 63, 146),
	(32, 31, '2011-11-07 13:30:37', 'An stream where anyone can edit the posts.', 54, 2, 45, 139, 124, 147),
	(33, 32, '2011-11-07 13:30:37', 'A stream for testing the who_can_take value field setting.', 55, 2, 45, 140, 126, 146),
	(34, 33, '2011-11-07 13:30:37', 'An 11th test stream. For testing filter storedata', 57, 2, 45, 140, 129, 146),
	(10001, 10000, '2013-06-10 09:46:32', 'A stream to report bugs in Cobalt Cascade.', 10000, 2, NULL, 139, 10000, 146),
	(10002, 10002, '2011-11-07 13:30:37', 'Stream for voting and commenting on streams', 10002, 2, 45, 140, 10001, 146),
	(10003, 10003, '2011-11-07 13:30:37', 'Standard comment stream', 10003, 3, 45, 139, 10002, 146),
	(10004, 10004, '2011-11-07 13:30:37', 'Stream for voting and commenting on users and rings', 10004, 2, 45, 140, 10003, 146),
	(10005, 10005, '2013-02-01 08:52:56', 'A stream used for sending private posts.', 10005, 2, NULL, 139, 10004, 146),
	(10008, 10001, '2013-06-13 13:37:34', 'Enter and vote on your favorite quotes, snippits and what nots, to appear in the message area at the top of every page.', 10001, 2, NULL, 139, 10005, 146),
	(10009, 10006, '2013-06-13 16:48:26', 'A stream for voting and commenting on rhythms.', 10010, 2, NULL, 140, NULL, 146),
	(10012, 10009, '2013-06-14 09:09:04', 'News about Babbling Brook and Cobalt Cascade', 10013, 2, NULL, 140, 10011, 146),
	(10017, 10014, '2013-06-14 11:03:32', 'Work that needs to be done to develop the Babbling Brook protocol and the Cobalt Cascade website.', 10024, 2, NULL, 140, 10020, 146),
	(10018, 10015, '2013-06-18 07:44:20', 'Suggest new features for the Babbling Brook protocol and the Cobalt Cascade website.', 10025, 2, NULL, 139, 10029, 146),
	(10019, 10016, '2013-09-03 13:35:49', 'test', 10042, 2, NULL, 140, 10198, 146),
	(10021, 10018, '2013-10-07 15:31:08', 'A place to discuss the Babbling Brook protocol and network.', 10058, 2, NULL, 139, 10227, 146),
	(10022, 10019, '2013-10-07 15:35:25', 'A place to discuss the cobalt cascade website.', 10059, 2, NULL, 139, 10228, 146),
	(10028, 10023, '2013-10-15 06:51:48', 'Chat to other userss', 10073, 2, NULL, 139, 10267, 146),
	(10029, 10024, '2013-10-15 07:16:47', 'A stream to provide feedback about Cobalt Cascade', 10074, 2, NULL, 139, 10268, 146),
	(10077, 10083, '2014-05-16 10:58:39', 'Pictures of beautiful things', 10131, 2, NULL, 139, 10548, 146),
	(10079, 10085, '2014-05-20 10:30:21', 'Some of us are touched by the simple and mundane, others by the monumental. Whatever tickles your fancy, write a few words about the most memorable pace that you have been.', 10134, 1, NULL, 139, 10563, 146),
	(10080, 10086, '2014-06-20 13:23:09', 'Tell us about the places that inspire you.', 10135, 2, NULL, 139, 10571, 146),
	(10081, 10087, '2014-06-20 13:31:54', 'Pictures of ugly things', 10136, 2, NULL, 140, 10572, 146),
	(10082, 10088, '2014-07-01 06:13:58', 'This person is ace.', 10154, 2, NULL, 139, 10646, 146),
	(10083, 10089, '2014-07-01 06:58:11', 'This user posts inappropriate content.', 10155, 2, NULL, 139, 10647, 146),
	(10093, 10100, '2014-07-08 09:16:55', 'Private messages to to invite users to new rings are submitted here. (This is an automated process. Use the \'send invitation\' option on the ring page to send an invitation.)', 10166, 2, NULL, 140, 10663, 146),
	(10094, 10101, '2014-07-11 09:17:06', 'The example tag used for the tutorial.', 10167, 2, NULL, 139, 10716, 146),
	(10096, 10103, '2014-07-11 09:36:58', 'test', 10169, 2, NULL, 139, 10719, 146),
	(10106, 10114, '2014-09-08 12:05:12', 'ttt', 10202, 1, NULL, 140, 10903, 146),
	(10107, 10115, '2014-09-08 12:05:26', 't', 10203, 1, NULL, 140, 10904, 146),
	(10108, 10115, '2014-09-08 13:07:48', 't', 10204, 1, NULL, 140, 10905, 146),
	(10109, 10115, '2014-09-08 13:10:46', 't', 10205, 1, NULL, 140, 10906, 146),
	(10114, 10120, '2014-09-11 11:07:21', 'ndfghdfgh', 10215, 1, NULL, 140, 10978, 146);
/*!40000 ALTER TABLE `stream_extra` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_field
CREATE TABLE IF NOT EXISTS `stream_field` (
  `stream_field_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `stream_extra_id` int(11) unsigned NOT NULL,
  `field_type` int(11) unsigned NOT NULL COMMENT 'Which data type to use for this field. See lookup table for valid types',
  `label` varchar(256) COLLATE utf8_unicode_ci NOT NULL COMMENT 'The label for the field',
  `max_size` int(11) unsigned DEFAULT '200' COMMENT 'maximum length for text fields',
  `required` tinyint(1) NOT NULL DEFAULT '0',
  `regex` varchar(256) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'A regular expression used to validate the contents of a field',
  `regex_error` varchar(256) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'An error message to display if the regex is not matched',
  `checkbox_default` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0 = unchecked. 1 = checked',
  `taken_records` tinyint(1) NOT NULL COMMENT 'When someone takes up this post, do they by default record this value in their own data store.',
  `display_order` int(11) unsigned NOT NULL,
  `value_min` bigint(20) DEFAULT NULL COMMENT 'Minimum value if this is a value field',
  `value_max` bigint(20) DEFAULT NULL COMMENT 'maximum value if this is a value field',
  `value_type` int(11) unsigned NOT NULL COMMENT 'The type of value if this is a value field. See lookup table',
  `value_options` int(11) unsigned DEFAULT NULL COMMENT 'See lookup table for valid values',
  `select_qty_max` int(11) unsigned NOT NULL DEFAULT '1' COMMENT 'How many items the user can select if this is a select list',
  `select_qty_min` int(11) unsigned DEFAULT '0' COMMENT 'Minimum number of items the user can select if this is a select list',
  `rhythm_check_url` varchar(1024) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'The url of the Rhythm that is used to check posts made are accepted',
  `who_can_take` int(11) unsigned DEFAULT '149' COMMENT 'The url of the Rhythm that is used to check posts made are accepted',
  PRIMARY KEY (`stream_field_id`),
  KEY `stream_id` (`stream_extra_id`),
  KEY `display_order` (`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=10355 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- Dumping data for table cobalt_cascade.stream_field: ~411 rows (approximately)
/*!40000 ALTER TABLE `stream_field` DISABLE KEYS */;
INSERT INTO `stream_field` (`stream_field_id`, `stream_extra_id`, `field_type`, `label`, `max_size`, `required`, `regex`, `regex_error`, `checkbox_default`, `taken_records`, `display_order`, `value_min`, `value_max`, `value_type`, `value_options`, `select_qty_max`, `select_qty_min`, `rhythm_check_url`, `who_can_take`) VALUES
	(1, 1, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(2, 1, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(3, 2, 36, 'Link title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(4, 2, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(5, 3, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(6, 3, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(7, 4, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(8, 4, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(9, 5, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10, 5, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(11, 5, 12, 'value with rhythm check', 200, 0, NULL, NULL, 0, 0, 3, -1000000000, 1000000000, 13, 21, 1, 0, '', 149),
	(12, 6, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(13, 6, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(14, 6, 2, 'a required textbox', 2000, 1, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(15, 6, 36, 'a link field', 200, 0, NULL, 'NULL', 0, 0, 4, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(16, 6, 3, 'a checkbox', 200, 0, NULL, 'NULL', 0, 0, 5, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(17, 6, 4, 'a short list', 200, 0, NULL, 'NULL', 0, 0, 6, NULL, NULL, 0, NULL, 2, 2, NULL, 149),
	(18, 6, 4, 'a long list', 200, 0, NULL, 'NULL', 0, 0, 7, NULL, NULL, 0, NULL, 5, 3, NULL, 149),
	(19, 6, 37, 'an open list', 200, 0, NULL, 'NULL', 0, 0, 8, NULL, NULL, 0, NULL, 4, 2, NULL, 149),
	(20, 6, 12, 'an updown value', 200, 0, NULL, 'NULL', 0, 0, 9, -1000000000, 1000000000, 13, 17, 1, 0, '', 149),
	(21, 6, 12, 'an updown value with constraints', 200, 0, NULL, 'NULL', 0, 0, 10, -3, 4, 13, 18, 1, 0, '', 149),
	(22, 6, 12, 'an updown value with constraints on the post', 200, 0, NULL, 'NULL', 0, 0, 11, -1000000000, 1000000000, 13, 19, 1, 0, '', 149),
	(23, 6, 12, 'a textbox value', 200, 0, NULL, 'NULL', 0, 0, 12, -1000000000, 1000000000, 16, 17, 1, 0, '', 149),
	(24, 6, 12, 'a textbox value with constraints on the post', 200, 0, NULL, 'NULL', 0, 0, 13, -1000000000, 1000000000, 16, 19, 1, 0, '', 149),
	(25, 6, 12, 'a button value', 200, 0, NULL, 'NULL', 0, 0, 14, 0, 1, 46, 17, 1, 0, '', 149),
	(26, 6, 2, 'textbox with regex', 10, 1, '^[0-9]+$', '', 0, 0, 15, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(27, 6, 3, 'checkbox with default on', 200, 0, NULL, 'NULL', 1, 0, 16, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(28, 6, 12, 'a linear scale value', 200, 0, NULL, 'NULL', 0, 0, 17, -1000, 1000, 14, 18, 1, 0, '', 149),
	(29, 6, 12, 'a log scale value', 200, 0, NULL, 'NULL', 0, 0, 18, -1000000000, 1000000000, 15, 18, 1, 0, '', 149),
	(30, 6, 12, 'a linear positive scale', 200, 0, NULL, 'NULL', 0, 0, 19, 0, 1000, 14, 18, 1, 0, '', 149),
	(31, 6, 12, 'a linear negative scale', 200, 0, NULL, 'NULL', 0, 0, 20, -1000, 0, 14, 18, 1, 0, '', 149),
	(32, 6, 12, 'a linear offset positive scale 150-250', 200, 0, NULL, 'NULL', 0, 0, 21, 150, 250, 14, 18, 1, 0, '', 149),
	(34, 6, 12, 'a log scale value 0 - 10000', 200, 0, NULL, 'NULL', 0, 0, 22, 0, 10000, 15, 18, 1, 0, '', 149),
	(35, 6, 12, 'a log scale value -10000 0', 200, 0, NULL, 'NULL', 0, 0, 23, -10000, 0, 15, 18, 1, 0, '', 149),
	(36, 6, 12, 'a log scale offset value 100 - 100000', 200, 0, NULL, 'NULL', 0, 0, 24, 100, 100000, 15, 18, 1, 0, '', 149),
	(37, 6, 12, 'a linear offset negative scale -150- -250', 200, 0, NULL, 'NULL', 0, 0, 25, -250, -150, 14, 18, 1, 0, '', 149),
	(38, 6, 12, 'an uneven linear scale -100 - 250', 200, 0, NULL, 'NULL', 0, 0, 26, -100, 250, 14, 18, 1, 0, '', 149),
	(39, 6, 12, 'a log uneven scale -100 - 10000', 200, 0, NULL, 'NULL', 0, 0, 27, -100, 10000, 15, 18, 1, 0, '', 149),
	(40, 6, 12, 'a log scale offset value -100000 - -100', 200, 0, NULL, 'NULL', 0, 0, 28, -100000, -100, 15, 18, 1, 0, '', 149),
	(41, 6, 12, 'a log scale with constraints on the post', 200, 0, NULL, 'NULL', 0, 0, 29, -100, 100, 15, 19, 1, 0, '', 149),
	(42, 6, 12, 'a linear scale with constraints on the post', 200, 0, NULL, 'NULL', 0, 0, 30, -100, 100, 14, 19, 1, 0, '', 149),
	(43, 6, 12, 'a stars value', 200, 0, NULL, 'NULL', 0, 0, 31, 0, 5, 24, 18, 1, 0, '', 149),
	(44, 6, 12, 'a stars value with constraint on the post', 200, 0, NULL, 'NULL', 0, 0, 32, 0, 5, 24, 19, 1, 0, '', 149),
	(45, 7, 2, 'oscillating1', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(46, 7, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(47, 8, 2, 'oscillating 2', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(48, 8, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(49, 20, 36, 'Link at the top', 200, 1, NULL, 'NULL', 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(50, 20, 2, 'secondary field', 200, 0, NULL, NULL, 0, 0, 3, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(51, 9, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(52, 20, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(53, 10, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(54, 10, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(55, 11, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(56, 11, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(57, 12, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(58, 12, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(59, 13, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(60, 13, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(61, 14, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(62, 14, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(63, 15, 36, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(64, 15, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(65, 16, 36, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(66, 16, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(67, 17, 36, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(68, 17, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(69, 18, 36, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(70, 18, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(71, 19, 36, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(72, 19, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(73, 21, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(74, 21, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(75, 22, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(76, 22, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(77, 23, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(78, 23, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(79, 24, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(80, 24, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(81, 26, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(82, 26, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(98, 13, 2, 'extra text', 200, 0, NULL, NULL, 0, 0, 3, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(99, 31, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(100, 31, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(101, 32, 2, 'text that can be edited by anyone', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(102, 32, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(103, 6, 12, 'a take list', 200, 0, NULL, 'NULL', 0, 0, 33, NULL, NULL, 148, 17, 1, 0, '', 149),
	(104, 33, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(105, 33, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(106, 33, 12, 'Only owner can take', 200, 0, NULL, NULL, 0, 0, 3, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 150),
	(107, 33, 2, 'everyone can see this', 200, 1, NULL, NULL, 0, 0, 4, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(108, 33, 12, 'Ensure anyone can take this one', 200, 0, NULL, NULL, 0, 0, 5, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(109, 34, 2, 'somet title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(110, 34, 12, 'Take something', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(10000, 10005, 2, 'message', 256, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10001, 10005, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 150),
	(10002, 10001, 2, 'Subject', 256, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10003, 10001, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10004, 10001, 2, 'Description', 10000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10005, 10001, 2, 'User Agent data (auto populated)', 10000, 0, NULL, '', 0, 0, 5, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10006, 10001, 2, 'Error logs (auto populated)', 10000, 0, NULL, '', 0, 0, 6, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10007, 10001, 4, 'Type of bug', NULL, 0, NULL, NULL, 0, 0, 4, NULL, NULL, 0, NULL, 6, 1, NULL, 149),
	(10008, 10001, 12, 'Status', NULL, 0, NULL, NULL, 0, 0, 8, NULL, NULL, 148, 17, 1, NULL, NULL, 150),
	(10039, 10008, 2, 'Snippet', 300, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, NULL),
	(10040, 10008, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -10, 10, 13, 18, 1, NULL, NULL, 149),
	(10042, 10008, 2, 'More', 2000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10043, 10004, 36, 'View user or ring profile', 200, 1, NULL, NULL, 0, 0, 3, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10044, 10004, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(10045, 10004, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10046, 10002, 2, 'Description', 10000, 0, NULL, NULL, 0, 0, 5, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10047, 10002, 36, 'View stream details', 200, 1, NULL, NULL, 0, 0, 4, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10048, 10002, 36, 'Posts in this stream', 200, 1, NULL, NULL, 0, 0, 3, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10049, 10003, 2, 'Comment', 10000, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10050, 10003, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(10051, 10002, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(10052, 10002, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10053, 10009, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10054, 10009, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10059, 10012, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10060, 10012, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10061, 10013, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10062, 10013, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10063, 10014, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10064, 10014, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10065, 10015, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10066, 10015, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10067, 10016, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10068, 10016, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10069, 10017, 2, 'Name', 200, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10070, 10017, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10071, 10017, 2, 'Description', 5000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10072, 10017, 12, 'Status', 0, 0, NULL, '', 0, 0, 5, NULL, NULL, 148, 17, 1, NULL, NULL, 150),
	(10073, 10017, 4, 'Category', 0, 0, NULL, '', 0, 0, 4, NULL, NULL, 148, 17, 9, 1, NULL, 149),
	(10075, 10017, 37, 'Meta Task', 0, 0, NULL, '', 0, 0, 6, NULL, NULL, 0, NULL, 20, 0, NULL, 149),
	(10076, 10017, 4, 'Roadmap', 0, 0, NULL, '', 0, 0, 7, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10077, 10018, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10078, 10018, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10079, 10018, 2, 'Description', 5000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10081, 10018, 12, 'New field', NULL, 0, NULL, NULL, 0, 0, 4, NULL, NULL, 148, 17, 1, NULL, NULL, 150),
	(10082, 10001, 2, 'URL (auto populated)', 10000, 0, NULL, '', 0, 0, 7, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10083, 10019, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10084, 10019, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10085, 10019, 3, 'woohoo, tick this!', NULL, 0, NULL, NULL, 1, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10091, 10012, 2, 'Substance', 5000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10092, 10021, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10093, 10021, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10094, 10021, 2, 'Substance', 5000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10095, 10022, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10096, 10022, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10097, 10022, 2, 'Substance', 5000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10098, 10023, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10099, 10023, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10100, 10023, 12, 'New field', NULL, 0, NULL, NULL, 1, 0, 3, NULL, NULL, 13, 17, 1, 0, NULL, 149),
	(10107, 10027, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, -1000000000, 1000000000, 13, 17, 1, 0, NULL, 149),
	(10108, 10027, 2, 'test-title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, 0, NULL, 149),
	(10109, 10028, 2, 'Title', 10000, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10110, 10028, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10112, 10029, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10113, 10029, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10114, 10029, 2, 'Details', 5000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10115, 10017, 2, 'Estimated Time', 10, 0, '^[0-9]+:([0-5][0-9])$', 'Must be in the format h:mm Hours can be as large as desired', 0, 0, 8, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10116, 10017, 2, 'Actual Time Spent', 10, 0, '^[0-9]+:([0-5][0-9])$', 'Must be in the format h:mm Hours can be as large as desired', 0, 0, 9, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10154, 0, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10155, 0, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10156, 0, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10157, 0, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10158, 0, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10159, 0, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10160, 0, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10161, 0, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10237, 0, 36, 'Link to a kitten', 200, 0, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10238, 0, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10243, 10077, 36, 'Link to the image', 500, 0, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10244, 10077, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10245, 10077, 2, 'Details', 1000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10246, 10078, 2, 'Title', 1000, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10247, 10078, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10248, 10079, 2, 'Location', 200, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10249, 10079, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10250, 10079, 2, 'Why?', 2000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10257, 10080, 2, 'Where', 200, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10258, 10080, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10259, 10081, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10260, 10081, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10283, 10080, 2, 'Why?', 10000, 0, NULL, '', 0, 0, 3, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10284, 10082, 36, 'Link title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10285, 10082, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, 0, 1, 13, 17, 1, NULL, NULL, 149),
	(10286, 10083, 36, 'Link title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10287, 10083, 12, 'Main Value', 200, 0, NULL, NULL, 0, 0, 2, 0, 1, 13, 17, 1, NULL, NULL, 149),
	(10306, 10093, 2, 'Message', 1000, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10307, 10093, 12, 'Main Value', NULL, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10308, 10094, 36, 'Link title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10309, 10094, 12, 'Main Value', NULL, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10312, 10096, 36, 'Link title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10313, 10096, 12, 'Main Value', NULL, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10332, 10106, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10333, 10106, 12, 'Main Value', NULL, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10334, 10107, 2, 'Title', 56, 1, NULL, '', 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10335, 10107, 12, 'Main Value', NULL, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10336, 10108, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10337, 10108, 12, 'Main Value', NULL, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10338, 10109, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10339, 10109, 12, 'Main Value', NULL, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149),
	(10341, 10107, 12, 'New field', 0, 0, '+f', 'fsfgsagf', 0, 0, 3, NULL, NULL, 148, 19, 1, 0, NULL, 150),
	(10344, 10107, 2, 'New field', NULL, 0, NULL, NULL, 0, 0, 4, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10353, 10114, 2, 'Title', 200, 1, NULL, NULL, 0, 0, 1, NULL, NULL, 0, NULL, 1, NULL, NULL, 149),
	(10354, 10114, 12, 'Main Value', NULL, 0, NULL, NULL, 0, 0, 2, NULL, NULL, 13, 17, 1, NULL, NULL, 149);
/*!40000 ALTER TABLE `stream_field` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_list
CREATE TABLE IF NOT EXISTS `stream_list` (
  `stream_list_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `stream_field_id` int(11) unsigned NOT NULL,
  `name` varchar(128) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`stream_list_id`),
  KEY `stream_field_id` (`stream_field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10076 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='List items for a stream field';

-- Dumping data for table cobalt_cascade.stream_list: ~80 rows (approximately)
/*!40000 ALTER TABLE `stream_list` DISABLE KEYS */;
INSERT INTO `stream_list` (`stream_list_id`, `stream_field_id`, `name`) VALUES
	(1, 17, 'first short list item'),
	(2, 17, 'second short list item'),
	(3, 18, 'long list item 1'),
	(4, 18, 'long list item 2'),
	(5, 18, 'long list item 3'),
	(6, 18, 'long list item 4'),
	(7, 18, 'long list item 5'),
	(8, 18, 'long list item 6'),
	(9, 18, 'long list item 7'),
	(10, 18, 'long list item 8'),
	(11, 18, 'long list item 9'),
	(12, 18, 'long list item 10'),
	(13, 18, 'long list item 11'),
	(14, 18, 'long list item 12'),
	(15, 18, 'long list item 13'),
	(16, 18, 'long list item 14'),
	(17, 18, 'long list item 15'),
	(18, 18, 'long list item 16'),
	(19, 18, 'long list item 17'),
	(20, 18, 'long list item 18'),
	(21, 18, 'long list item 19'),
	(22, 18, 'long list item 20'),
	(23, 17, 'third short list item'),
	(10000, 10007, 'Unknown'),
	(10001, 10007, 'Client Website'),
	(10002, 10007, 'Protocol'),
	(10003, 10007, 'Console Error'),
	(10004, 10007, 'User Interface'),
	(10005, 10007, 'Documentation'),
	(10022, 10074, 'Less than an hour'),
	(10023, 10074, 'More than an hour'),
	(10024, 10074, 'More than a day'),
	(10025, 10074, 'More than a week'),
	(10026, 10073, 'Servers'),
	(10027, 10073, 'Store domain'),
	(10028, 10073, 'Info domain'),
	(10029, 10073, 'Client domain'),
	(10031, 10073, 'Database'),
	(10032, 10073, 'Javascript'),
	(10033, 10073, 'PHP'),
	(10034, 10073, 'Documentation'),
	(10035, 10073, 'Protocol'),
	(10036, 10076, 'Before Cobalt Cascade alpha'),
	(10037, 10076, 'Before Cobalt Cascade beta'),
	(10038, 10076, 'Before Cobalt Cascade version 1'),
	(10039, 10076, 'Cobalt Cascade version 2+'),
	(10040, 10080, 'Not Appraised'),
	(10041, 10080, 'Will Not Implement'),
	(10042, 10080, 'Task Entered'),
	(10043, 10080, 'On The Back Burner'),
	(10044, 10076, 'Before Babbling Brook alpha'),
	(10045, 10076, 'Before Babbling Brook beta'),
	(10046, 10076, 'Before Babbling Brook live'),
	(10047, 10076, 'Before Secundus alpha'),
	(10048, 10143, 'long list item 20'),
	(10049, 10143, 'long list item 19'),
	(10050, 10143, 'long list item 18'),
	(10051, 10143, 'long list item 17'),
	(10052, 10143, 'long list item 16'),
	(10053, 10143, 'long list item 15'),
	(10054, 10143, 'long list item 14'),
	(10055, 10143, 'long list item 13'),
	(10056, 10143, 'long list item 12'),
	(10057, 10143, 'long list item 11'),
	(10058, 10143, 'long list item 10'),
	(10059, 10143, 'long list item 9'),
	(10060, 10143, 'long list item 8'),
	(10061, 10143, 'long list item 7'),
	(10062, 10143, 'long list item 6'),
	(10063, 10143, 'long list item 5'),
	(10064, 10143, 'long list item 4'),
	(10065, 10143, 'long list item 3'),
	(10066, 10143, 'long list item 2'),
	(10067, 10143, 'long list item 1'),
	(10068, 10144, 'third short list item'),
	(10069, 10144, 'second short list item'),
	(10070, 10144, 'first short list item'),
	(10073, 10341, 'dfgsg'),
	(10074, 10341, 'sdrgt'),
	(10075, 10341, 'sdfg');
/*!40000 ALTER TABLE `stream_list` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_open_list_item
CREATE TABLE IF NOT EXISTS `stream_open_list_item` (
  `stream_open_list_item` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'The primary key for this table',
  `stream_extra_id` int(10) NOT NULL COMMENT 'The extra id of the stream that the open list is in.',
  `field_id` int(10) NOT NULL COMMENT 'The id of the field in the stream that the open list is in.',
  `item` varchar(128) COLLATE utf8_unicode_ci NOT NULL COMMENT 'The item entered into the open list.',
  `count` int(11) NOT NULL DEFAULT '1' COMMENT 'A count of the number of times this item has been used.',
  PRIMARY KEY (`stream_open_list_item`),
  KEY `stream_extra_id` (`stream_extra_id`,`field_id`),
  KEY `item` (`item`)
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Keeps a record of all items entered into an open list in a stream. Used to generate suggestions.';

-- Dumping data for table cobalt_cascade.stream_open_list_item: ~28 rows (approximately)
/*!40000 ALTER TABLE `stream_open_list_item` DISABLE KEYS */;
INSERT INTO `stream_open_list_item` (`stream_open_list_item`, `stream_extra_id`, `field_id`, `item`, `count`) VALUES
	(1, 6, 8, 'test1', 2),
	(2, 6, 8, 'something', 3),
	(3, 6, 8, 'test', 1),
	(4, 6, 8, 'what would this be', 1),
	(5, 6, 8, 'woah', 1),
	(6, 10017, 6, 'test', 3),
	(7, 10017, 6, 'test2', 1),
	(8, 6, 8, 'sdfds', 1),
	(9, 6, 8, 's', 5),
	(10, 6, 8, 'sdfsd', 1),
	(11, 6, 8, '232', 1),
	(12, 6, 8, '<script>alert(\'boo5\');</script>5', 1),
	(13, 6, 8, 'fs', 1),
	(14, 6, 8, '5b', 1),
	(15, 6, 8, 'more', 1),
	(16, 6, 8, 'etset', 3),
	(17, 6, 8, 'et', 3),
	(18, 6, 8, 'rty', 1),
	(19, 6, 8, 'r', 1),
	(20, 6, 8, 'ty', 1),
	(21, 6, 8, 'dfg', 2),
	(22, 6, 8, 't', 2),
	(23, 6, 8, 'y', 1),
	(24, 6, 8, '345', 2),
	(25, 6, 8, '34', 1),
	(26, 6, 8, 'sfg', 1),
	(27, 6, 8, 'fgh', 1),
	(28, 6, 8, 'sfgh', 1);
/*!40000 ALTER TABLE `stream_open_list_item` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_public
CREATE TABLE IF NOT EXISTS `stream_public` (
  `stream_public_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `time_cached` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `stream_extra_id` int(11) unsigned NOT NULL DEFAULT '0',
  `post_id` int(11) unsigned NOT NULL DEFAULT '0',
  `score` bigint(20) NOT NULL COMMENT 'The assigned score for this post, as displayed to the public',
  `rhythm_extra_id` int(11) unsigned DEFAULT NULL COMMENT 'The rhythm that was used to generate these results. Null is for generic results.',
  `top_parent_id` int(11) DEFAULT NULL COMMENT 'If this is a tree sort then this is the top parent id for the tree.',
  PRIMARY KEY (`stream_public_id`),
  UNIQUE KEY `stream_extra_id` (`stream_extra_id`,`post_id`,`rhythm_extra_id`,`top_parent_id`),
  KEY `score` (`score`)
) ENGINE=InnoDB AUTO_INCREMENT=82294 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='An index of top stream results for public and search engine consumption.';

-- Dumping data for table cobalt_cascade.stream_public: ~33 rows (approximately)
/*!40000 ALTER TABLE `stream_public` DISABLE KEYS */;
INSERT INTO `stream_public` (`stream_public_id`, `time_cached`, `stream_extra_id`, `post_id`, `score`, `rhythm_extra_id`, `top_parent_id`) VALUES
	(82165, '2014-09-11 10:02:23', 10001, 10131, 1, 10012, NULL),
	(82166, '2014-09-11 10:02:23', 10001, 10136, 1, 10012, NULL),
	(82167, '2014-09-11 10:02:23', 10001, 10142, 1, 10012, NULL),
	(82168, '2014-09-11 10:02:23', 10001, 10143, 1, 10012, NULL),
	(82187, '2014-09-11 10:07:15', 10001, 10023, 1371455644, 10002, NULL),
	(82188, '2014-09-11 10:07:15', 10001, 10025, 1371455857, 10002, NULL),
	(82189, '2014-09-11 10:07:15', 10001, 10026, 1371539068, 10002, NULL),
	(82190, '2014-09-11 10:07:15', 10001, 10039, 1371546848, 10002, NULL),
	(82191, '2014-09-11 10:07:15', 10001, 10045, 1371547880, 10002, NULL),
	(82192, '2014-09-11 10:07:15', 10001, 10046, 1371547977, 10002, NULL),
	(82193, '2014-09-11 10:07:15', 10001, 10054, 1371564614, 10002, NULL),
	(82194, '2014-09-11 10:07:15', 10001, 10055, 1371564678, 10002, NULL),
	(82195, '2014-09-11 10:07:15', 10001, 10056, 1371564727, 10002, NULL),
	(82196, '2014-09-11 10:07:15', 10001, 10058, 1371566539, 10002, NULL),
	(82197, '2014-09-11 10:07:15', 10001, 10093, 1373355386, 10002, NULL),
	(82198, '2014-09-11 10:07:15', 10001, 10094, 1373383206, 10002, NULL),
	(82199, '2014-09-11 10:07:15', 10001, 10111, 1374657238, 10002, NULL),
	(82200, '2014-09-11 10:07:15', 10001, 10128, 1375197106, 10002, NULL),
	(82201, '2014-09-11 10:07:15', 10001, 10131, 1375346451, 10002, NULL),
	(82202, '2014-09-11 10:07:15', 10001, 10136, 1375347508, 10002, NULL),
	(82203, '2014-09-11 10:07:15', 10001, 10142, 1375371343, 10002, NULL),
	(82204, '2014-09-11 10:07:15', 10001, 10143, 1375438412, 10002, NULL),
	(82218, '2014-09-11 10:19:20', 10001, 10025, 3, 10008, NULL),
	(82219, '2014-09-11 10:19:20', 10001, 10026, 3, 10008, NULL),
	(82220, '2014-09-11 10:19:20', 10001, 10045, 1, 10008, NULL),
	(82221, '2014-09-11 10:19:20', 10001, 10055, 3, 10008, NULL),
	(82222, '2014-09-11 10:19:20', 10001, 10056, 2, 10008, NULL),
	(82223, '2014-09-11 10:19:20', 10001, 10093, 2, 10008, NULL),
	(82224, '2014-09-11 10:19:20', 10001, 10128, 1, 10008, NULL),
	(82225, '2014-09-11 10:19:20', 10001, 10136, 1, 10008, NULL),
	(82226, '2014-09-11 10:19:20', 10001, 10142, 1, 10008, NULL),
	(82291, '2014-09-11 11:01:00', 10012, 10225, 13, 10008, NULL),
	(82292, '2014-09-11 11:01:00', 10012, 10226, 9, 10008, NULL);
/*!40000 ALTER TABLE `stream_public` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_public_rhythm
CREATE TABLE IF NOT EXISTS `stream_public_rhythm` (
  `stream_public_rhythm_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `stream_extra_id` int(11) unsigned NOT NULL COMMENT 'The extra id of the stream that results have been generated for.',
  `rhythm_extra_id` int(11) unsigned DEFAULT NULL COMMENT 'The extra id of the  rhythm that was used to generate results. Null is for generic results.',
  `top_parent_id` int(11) unsigned DEFAULT NULL COMMENT 'The top parent of the rhythm that was used to generate tree results. Null indicates a stream',
  `date_generated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Timestamp for when the results were generated.',
  PRIMARY KEY (`stream_public_rhythm_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12597 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Lists stream rhythms that have public results stored for them.';

-- Dumping data for table cobalt_cascade.stream_public_rhythm: ~135 rows (approximately)
/*!40000 ALTER TABLE `stream_public_rhythm` DISABLE KEYS */;
INSERT INTO `stream_public_rhythm` (`stream_public_rhythm_id`, `stream_extra_id`, `rhythm_extra_id`, `top_parent_id`, `date_generated`) VALUES
	(1257, 10017, 10000, NULL, '2013-10-20 09:23:59'),
	(1783, 10017, 10036, NULL, '2013-10-22 15:56:42'),
	(2333, 10003, 10008, 10331, '2013-10-29 14:41:31'),
	(2335, 10017, 10008, 10082, '2013-10-29 14:49:49'),
	(10537, 10028, 10008, 10436, '2013-11-08 08:58:58'),
	(10538, 10028, 10008, 10436, '2013-11-08 09:00:44'),
	(10543, 10028, 10008, 10436, '2013-11-08 09:01:27'),
	(10848, 10017, 10025, NULL, '2013-11-18 13:39:40'),
	(10968, 10008, 0, NULL, '2013-11-18 17:01:48'),
	(10975, 10017, 10024, NULL, '2013-11-18 17:05:52'),
	(11068, 10008, 10002, NULL, '2014-03-22 14:31:31'),
	(11075, 10017, 0, NULL, '2014-03-22 14:33:12'),
	(11077, 10003, 10002, NULL, '2014-03-22 14:33:58'),
	(11079, 10003, 10008, 10463, '2014-03-22 14:34:04'),
	(11086, 1, 1, 1, '2014-03-22 14:37:03'),
	(11092, 6, NULL, NULL, '2014-04-09 14:14:32'),
	(11227, 10074, 1, NULL, '2014-05-06 12:04:28'),
	(11228, 10074, 2, NULL, '2014-05-06 12:04:28'),
	(11246, 10012, 10000, NULL, '2014-05-16 12:14:38'),
	(11298, 10077, 10065, NULL, '2014-05-19 14:23:33'),
	(11306, 10077, 10008, 10556, '2014-05-19 14:37:28'),
	(11391, 10008, 10017, NULL, '2014-05-20 17:57:20'),
	(11424, 10077, 10008, 10556, '2014-06-25 13:47:03'),
	(11429, 10077, 10008, 10556, '2014-06-25 13:50:04'),
	(11430, 10077, 10008, 10556, '2014-06-25 13:53:27'),
	(11431, 10077, 10008, 10556, '2014-06-25 13:55:38'),
	(11432, 10077, 10008, 10556, '2014-06-25 13:55:53'),
	(11433, 10077, 10008, 10556, '2014-06-25 13:56:19'),
	(11434, 10077, 10008, 10556, '2014-06-25 13:56:43'),
	(11437, 10077, 10008, 10556, '2014-06-25 13:58:29'),
	(11442, 10077, 10008, 10556, '2014-06-25 13:59:37'),
	(11447, 10077, 10008, 10556, '2014-06-25 14:01:17'),
	(11454, 10077, 10008, 10556, '2014-06-25 14:05:50'),
	(11457, 10077, 10008, 10556, '2014-06-25 14:10:19'),
	(11462, 10077, 10008, 10556, '2014-06-25 14:12:44'),
	(11463, 10077, 10008, 10556, '2014-06-25 14:14:43'),
	(11464, 10077, 10008, 10556, '2014-06-25 14:19:49'),
	(11465, 10077, 10008, 10556, '2014-06-25 14:20:23'),
	(11466, 10077, 10008, 10556, '2014-06-25 14:20:48'),
	(11467, 10077, 10008, 10556, '2014-06-25 14:20:55'),
	(11470, 10077, 10008, 10556, '2014-06-25 14:39:27'),
	(11471, 10077, 10008, 10556, '2014-06-25 15:04:55'),
	(11472, 10077, 10008, 10556, '2014-06-25 15:08:22'),
	(11473, 10077, 10008, 10556, '2014-06-25 15:13:40'),
	(11474, 10077, 10008, 10556, '2014-06-25 15:21:48'),
	(11475, 10077, 10008, 10556, '2014-06-25 15:24:33'),
	(11476, 10077, 10008, 10556, '2014-06-25 15:24:46'),
	(11477, 10077, 10008, 10556, '2014-06-25 15:43:12'),
	(11512, 10077, 10008, 10556, '2014-07-03 13:45:18'),
	(11556, 10028, 10002, NULL, '2014-07-10 13:18:56'),
	(11557, 10028, 10000, NULL, '2014-07-10 13:18:57'),
	(11558, 10018, 10002, NULL, '2014-07-10 13:19:01'),
	(11559, 10018, 10000, NULL, '2014-07-10 13:19:01'),
	(11570, 10080, 10000, NULL, '2014-07-10 13:32:50'),
	(11571, 10080, 10002, NULL, '2014-07-10 13:32:50'),
	(11631, 10017, 10014, NULL, '2014-07-11 17:49:19'),
	(11632, 10017, 10002, NULL, '2014-07-11 17:49:20'),
	(11646, 10012, 10008, 10226, '2014-08-06 16:31:14'),
	(11647, 10012, 10008, 10226, '2014-08-06 16:32:23'),
	(11658, 10077, 10000, NULL, '2014-08-07 09:43:04'),
	(11659, 10077, 10002, NULL, '2014-08-07 09:43:05'),
	(11660, 10077, 10008, 10556, '2014-08-07 09:44:08'),
	(11724, 10001, 10009, NULL, '2014-08-13 10:20:13'),
	(11764, 2, 2, NULL, '2014-08-19 10:58:29'),
	(11924, 10022, NULL, NULL, '2014-09-01 08:46:29'),
	(11956, 10077, NULL, NULL, '2014-09-01 10:10:14'),
	(12096, 6, 10008, 10828, '2014-09-02 10:21:22'),
	(12097, 6, 10008, 10828, '2014-09-02 10:21:44'),
	(12100, 1, 10008, 10829, '2014-09-02 10:22:52'),
	(12101, 1, 10008, 10829, '2014-09-02 10:23:47'),
	(12102, 1, 10008, 10829, '2014-09-02 10:24:14'),
	(12103, 1, 10008, 10829, '2014-09-02 10:25:31'),
	(12104, 1, 10008, 10829, '2014-09-02 10:26:25'),
	(12105, 1, 10008, 10829, '2014-09-02 10:26:51'),
	(12106, 1, 10008, 10829, '2014-09-02 10:28:07'),
	(12107, 1, 10008, 10829, '2014-09-02 10:29:48'),
	(12108, 1, 10008, 10829, '2014-09-02 10:31:16'),
	(12109, 1, 10008, 10829, '2014-09-02 10:32:21'),
	(12110, 1, 10008, 10829, '2014-09-02 10:36:12'),
	(12111, 1, 10008, 10829, '2014-09-02 10:39:13'),
	(12112, 1, 10008, 10829, '2014-09-02 10:41:23'),
	(12113, 1, 10008, 10829, '2014-09-02 10:43:14'),
	(12114, 1, 10008, 10829, '2014-09-02 10:43:56'),
	(12115, 1, 10008, 10829, '2014-09-02 10:44:40'),
	(12120, 6, 10008, 10828, '2014-09-02 10:46:02'),
	(12121, 6, 10008, 10828, '2014-09-02 10:47:09'),
	(12122, 6, 10008, 10828, '2014-09-02 10:49:30'),
	(12123, 6, 10008, 10828, '2014-09-02 10:50:31'),
	(12124, 6, 10008, 10828, '2014-09-02 10:51:07'),
	(12125, 6, 10008, 10828, '2014-09-02 10:51:47'),
	(12126, 6, 10008, 10828, '2014-09-02 10:53:15'),
	(12127, 6, 10008, 10828, '2014-09-02 10:55:08'),
	(12128, 6, 10008, 10828, '2014-09-02 10:56:59'),
	(12129, 6, 10008, 10828, '2014-09-02 10:57:29'),
	(12130, 6, 10008, 10828, '2014-09-02 10:57:56'),
	(12131, 6, 10002, 10828, '2014-09-02 10:58:52'),
	(12134, 1, 10008, 1, '2014-09-02 10:59:49'),
	(12135, 1, 10000, 1, '2014-09-02 11:00:10'),
	(12136, 1, 10002, 1, '2014-09-02 11:00:13'),
	(12139, 6, 10000, 10828, '2014-09-02 11:01:17'),
	(12142, 1, 10008, 10829, '2014-09-03 07:19:00'),
	(12147, 1, 10008, 10829, '2014-09-03 07:23:26'),
	(12148, 1, 10008, 10829, '2014-09-03 07:30:04'),
	(12149, 1, 10008, 10829, '2014-09-03 07:32:38'),
	(12150, 1, 10008, 10829, '2014-09-03 07:35:04'),
	(12151, 1, 10008, 10829, '2014-09-03 07:37:10'),
	(12164, 10, 1, NULL, '2014-09-04 07:49:23'),
	(12167, 13, 2, NULL, '2014-09-04 07:49:32'),
	(12322, 2, 1, NULL, '2014-09-05 14:06:52'),
	(12344, 10100, 10008, NULL, '2014-09-08 11:43:23'),
	(12345, 10100, 10002, NULL, '2014-09-08 11:43:24'),
	(12430, 1, 24, NULL, '2014-09-09 10:37:12'),
	(12431, 13, 1, NULL, '2014-09-09 10:40:10'),
	(12432, 24, 1, NULL, '2014-09-09 10:41:28'),
	(12434, 10, 2, NULL, '2014-09-09 10:43:37'),
	(12475, 10018, NULL, NULL, '2014-09-10 15:30:52'),
	(12524, 10012, 2, NULL, '2014-09-11 08:06:37'),
	(12526, 10012, 1, NULL, '2014-09-11 08:06:59'),
	(12536, 10021, 10011, NULL, '2014-09-11 09:35:49'),
	(12538, 10021, 10008, NULL, '2014-09-11 09:35:53'),
	(12543, 10021, 10002, NULL, '2014-09-11 09:38:21'),
	(12560, 10012, 10012, NULL, '2014-09-11 09:54:03'),
	(12561, 10012, 10013, NULL, '2014-09-11 09:54:05'),
	(12564, 10012, 10002, NULL, '2014-09-11 09:54:50'),
	(12566, 10012, 10011, NULL, '2014-09-11 09:55:23'),
	(12569, 10017, 10011, NULL, '2014-09-11 09:56:14'),
	(12570, 10017, 10008, NULL, '2014-09-11 09:56:14'),
	(12576, 10001, 10013, NULL, '2014-09-11 09:57:34'),
	(12589, 10001, 10012, NULL, '2014-09-11 10:02:23'),
	(12590, 10001, 10011, NULL, '2014-09-11 10:06:59'),
	(12592, 10001, 10002, NULL, '2014-09-11 10:07:15'),
	(12593, 10001, 10008, NULL, '2014-09-11 10:19:20'),
	(12594, 1, 1, NULL, '2014-09-11 10:38:24'),
	(12595, 1, 2, NULL, '2014-09-11 10:38:25'),
	(12596, 10012, 10008, NULL, '2014-09-11 11:01:00');
/*!40000 ALTER TABLE `stream_public_rhythm` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.stream_regex
CREATE TABLE IF NOT EXISTS `stream_regex` (
  `stream_regex_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(128) COLLATE utf8_unicode_ci NOT NULL,
  `regex` varchar(256) COLLATE utf8_unicode_ci NOT NULL,
  `error` varchar(256) COLLATE utf8_unicode_ci NOT NULL DEFAULT '' COMMENT 'Error message to display for this regEx',
  `display_order` int(11) unsigned NOT NULL DEFAULT '1000',
  PRIMARY KEY (`stream_regex_id`),
  KEY `display_order` (`display_order`),
  KEY `regex` (`regex`(255))
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Default regular expressions for streams';

-- Dumping data for table cobalt_cascade.stream_regex: ~4 rows (approximately)
/*!40000 ALTER TABLE `stream_regex` DISABLE KEYS */;
INSERT INTO `stream_regex` (`stream_regex_id`, `name`, `regex`, `error`, `display_order`) VALUES
	(1, 'None', '', '', 1),
	(2, 'more...', 'more', '', 1010),
	(3, 'Whole Number', '^[0-9]+$', 'Must be a whole number consisting of the digits 0 to 9.', 5),
	(4, 'Email Address', '^[\\w\\.=-]+@[\\w\\.-]+\\.[\\w]{2,3}$', 'Must be a valid email address.', 10);
/*!40000 ALTER TABLE `stream_regex` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.suggestions_declined
CREATE TABLE IF NOT EXISTS `suggestions_declined` (
  `suggestions_declined_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL COMMENT 'The id of the user who declined the suggestion.',
  `site_id` int(11) unsigned NOT NULL COMMENT 'The id of the client site that the suggestion was declined on.',
  `rhythm_cat_id` int(11) unsigned NOT NULL COMMENT 'The type of suggestion that was declined. This decides which of the following fileds are used.',
  `declined_rhythm_extra_id` int(11) unsigned DEFAULT NULL COMMENT 'The id of the rhythm that was declined.',
  `declined_stream_extra_id` int(11) unsigned DEFAULT NULL COMMENT 'The id of the stream that was declined.',
  `declined_user_id` int(11) unsigned DEFAULT NULL COMMENT 'The id of the user that was declined.',
  `version_type` int(11) unsigned DEFAULT NULL COMMENT 'The type of version that was declined. See lookup table for valid values.',
  `date_declined` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'The time that the suggestion was declined.',
  PRIMARY KEY (`suggestions_declined_id`),
  KEY `user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='A list of suggestions that a user has declined for a client website';

-- Dumping data for table cobalt_cascade.suggestions_declined: ~17 rows (approximately)
/*!40000 ALTER TABLE `suggestions_declined` DISABLE KEYS */;
INSERT INTO `suggestions_declined` (`suggestions_declined_id`, `user_id`, `site_id`, `rhythm_cat_id`, `declined_rhythm_extra_id`, `declined_stream_extra_id`, `declined_user_id`, `version_type`, `date_declined`) VALUES
	(1, 1, 10000, 11, NULL, NULL, 2, NULL, NULL),
	(2, 1, 10000, 11, NULL, NULL, 4, NULL, NULL),
	(3, 1, 10000, 11, NULL, NULL, 5, NULL, NULL),
	(4, 1, 10000, 5, NULL, 4, NULL, 32, NULL),
	(5, 1, 10000, 5, NULL, 4, NULL, 32, NULL),
	(6, 1, 10000, 5, NULL, 4, NULL, 32, NULL),
	(7, 1, 10000, 6, 21, NULL, NULL, 35, NULL),
	(8, 1, 10000, 5, NULL, 4, NULL, 32, NULL),
	(9, 1, 10000, 6, 1, NULL, NULL, 32, NULL),
	(10, 1, 10000, 6, 2, NULL, NULL, 32, NULL),
	(11, 1, 10000, 6, 15, NULL, NULL, 32, NULL),
	(12, 1, 10000, 6, 19, NULL, NULL, 32, NULL),
	(13, 1, 10000, 9, NULL, NULL, 6, NULL, NULL),
	(14, 1, 10000, 5, NULL, 4, NULL, 32, NULL),
	(15, 1, 10000, 5, NULL, 4, NULL, 32, NULL),
	(16, 1, 10000, 5, NULL, 4, NULL, 32, NULL),
	(17, 1, 10000, 5, NULL, 4, NULL, 32, NULL);
/*!40000 ALTER TABLE `suggestions_declined` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.tag
CREATE TABLE IF NOT EXISTS `tag` (
  `tag_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `thing` int(11) unsigned NOT NULL COMMENT 'What are we tagging. See lokkup table for valid values',
  `thing_id` int(11) unsigned NOT NULL COMMENT 'The id of the thing that is being tagged',
  `cat_id` int(11) unsigned NOT NULL,
  PRIMARY KEY (`tag_id`),
  KEY `cat_id` (`cat_id`),
  KEY `stream_extra_id` (`thing`),
  KEY `thing_id` (`thing_id`)
) ENGINE=InnoDB AUTO_INCREMENT=129 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Connects multiple things to multiple categories';

-- Dumping data for table cobalt_cascade.tag: ~44 rows (approximately)
/*!40000 ALTER TABLE `tag` DISABLE KEYS */;
INSERT INTO `tag` (`tag_id`, `thing`, `thing_id`, `cat_id`) VALUES
	(1, 39, 111, 1),
	(3, 39, 111, 3),
	(6, 39, 169, 1),
	(8, 39, 169, 3),
	(11, 39, 186, 1),
	(13, 39, 186, 3),
	(16, 39, 251, 1),
	(18, 39, 251, 3),
	(21, 39, 108, 1),
	(23, 39, 108, 3),
	(26, 39, 125, 1),
	(28, 39, 125, 3),
	(31, 39, 132, 1),
	(33, 39, 132, 3),
	(36, 39, 142, 6),
	(38, 39, 151, 1),
	(40, 39, 151, 3),
	(43, 39, 153, 1),
	(45, 39, 153, 3),
	(61, 39, 162, 18),
	(62, 39, 162, 19),
	(65, 39, 162, 21),
	(67, 39, 162, 23),
	(72, 39, 162, 21),
	(85, 39, 208, 1),
	(87, 39, 208, 3),
	(90, 39, 211, 1),
	(92, 39, 211, 3),
	(95, 39, 216, 1),
	(97, 39, 216, 3),
	(100, 39, 217, 1),
	(102, 39, 217, 3),
	(105, 39, 249, 30),
	(106, 39, 250, 1),
	(108, 39, 250, 3),
	(111, 39, 251, 1),
	(112, 39, 251, 2),
	(113, 39, 260, 1),
	(115, 39, 260, 3),
	(118, 39, 266, 1),
	(120, 39, 266, 3),
	(123, 39, 272, 1),
	(125, 39, 272, 3),
	(128, 39, 6, 17);
/*!40000 ALTER TABLE `tag` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.take
CREATE TABLE IF NOT EXISTS `take` (
  `take_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `date_taken` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `post_id` int(11) unsigned NOT NULL,
  `user_id` int(11) unsigned NOT NULL,
  `value` bigint(20) NOT NULL,
  `field_id` int(11) unsigned NOT NULL COMMENT 'Which field in the stream does this take reffer to. This is the display order, not the stream_field_id',
  `stream_extra_id` int(11) NOT NULL COMMENT 'Prevents having to link to the post table to look up',
  `block_id` int(11) NOT NULL DEFAULT '0' COMMENT 'The block of user takes that this is a part of',
  `stream_block_id` int(11) NOT NULL DEFAULT '0' COMMENT 'The block of stream user takes that this is a part of',
  `tree_block_id` int(11) NOT NULL DEFAULT '0' COMMENT 'The block of tree user takes that this is a part of',
  PRIMARY KEY (`take_id`),
  UNIQUE KEY `user_id` (`user_id`,`post_id`,`field_id`),
  KEY `block_id` (`block_id`),
  KEY `stream_block_id` (`stream_block_id`),
  KEY `tree_block_id` (`tree_block_id`),
  KEY `stream_extra_id` (`stream_extra_id`),
  KEY `date_taken` (`date_taken`)
) ENGINE=InnoDB AUTO_INCREMENT=10392 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Records all posts that have been taken.';

-- Dumping data for table cobalt_cascade.take: ~126 rows (approximately)
/*!40000 ALTER TABLE `take` DISABLE KEYS */;
INSERT INTO `take` (`take_id`, `date_taken`, `post_id`, `user_id`, `value`, `field_id`, `stream_extra_id`, `block_id`, `stream_block_id`, `tree_block_id`) VALUES
	(1, '2011-11-15 12:00:00', 4, 3, 1, 2, 1, 1, 1, 0),
	(2, '2011-11-15 13:00:00', 5, 3, -1, 2, 1, 1, 1, 0),
	(3, '2011-11-15 14:00:00', 6, 3, 1, 2, 1, 2, 2, 0),
	(4, '2011-11-15 15:00:00', 7, 3, 1, 2, 1, 0, 0, 0),
	(5, '2011-11-21 12:00:00', 19, 1, 1, 2, 1, 0, 0, 0),
	(6, '2011-11-21 13:00:00', 20, 1, 1, 2, 1, 0, 0, 0),
	(7, '2011-11-21 14:00:00', 20, 2, 1, 2, 1, 0, 0, 0),
	(8, '2011-11-21 15:00:00', 20, 5, 1, 2, 1, 0, 0, 0),
	(9, '2011-12-05 15:00:00', 50, 1, 1, 2, 2, 0, 0, 0),
	(10, '2011-12-06 15:00:00', 51, 1, -1, 2, 15, 0, 0, 0),
	(11, '2011-12-07 15:00:00', 52, 1, 2, 2, 16, 0, 0, 0),
	(12, '2011-12-08 15:00:00', 53, 1, 1, 2, 17, 0, 0, 0),
	(13, '2011-12-09 15:00:00', 54, 1, 1, 2, 18, 0, 0, 0),
	(14, '2011-12-10 15:00:00', 55, 1, 1, 2, 19, 0, 0, 0),
	(15, '2011-12-08 15:00:00', 53, 5, 3, 2, 17, 0, 0, 0),
	(16, '2011-12-10 15:00:00', 55, 5, 4, 2, 19, 0, 0, 0),
	(17, '2011-12-09 15:00:00', 54, 7, 2, 2, 18, 0, 0, 0),
	(18, '2011-12-09 15:00:00', 57, 1, 1, 2, 16, 0, 0, 0),
	(19, '2011-12-09 15:00:00', 58, 3, -1, 2, 24, 0, 0, 0),
	(10000, '2013-06-18 07:33:38', 10026, 10000, 3, 8, 10001, 0, 0, 0),
	(10001, '2013-06-18 07:57:06', 10031, 10000, 2, 4, 10018, 0, 0, 0),
	(10002, '2013-06-18 08:59:42', 10025, 10000, 3, 8, 10001, 0, 0, 0),
	(10003, '2013-06-18 09:42:24', 10022, 10000, 3, 6, 10017, 0, 0, 0),
	(10004, '2013-06-18 13:14:24', 10048, 10000, 1, 2, 10017, 0, 0, 0),
	(10005, '2013-06-18 13:58:16', 10032, 10000, 8, 2, 10017, 0, 0, 0),
	(10006, '2013-06-18 14:16:42', 10055, 10000, 3, 8, 10001, 0, 0, 0),
	(10007, '2013-06-18 16:54:47', 10049, 10000, 1, 2, 10017, 0, 0, 0),
	(10008, '2013-06-18 16:54:58', 10044, 10000, 4, 2, 10017, 0, 0, 0),
	(10009, '2013-06-18 16:55:31', 10038, 10000, 1, 2, 10017, 0, 0, 0),
	(10010, '2013-06-18 16:55:37', 10037, 10000, 1, 2, 10017, 0, 0, 0),
	(10011, '2013-06-18 16:56:10', 10022, 10000, 4, 2, 10017, 0, 0, 0),
	(10012, '2013-06-18 16:56:13', 10024, 10000, 3, 2, 10017, 0, 0, 0),
	(10013, '2013-06-18 16:56:15', 10028, 10000, 11, 2, 10017, 0, 0, 0),
	(10014, '2013-06-18 16:56:16', 10033, 10000, 15, 2, 10017, 0, 0, 0),
	(10015, '2013-06-19 06:51:39', 10064, 10000, 1, 2, 10017, 0, 0, 0),
	(10016, '2013-06-19 06:53:43', 10064, 10000, 1, 6, 10017, 0, 0, 0),
	(10017, '2013-06-19 09:03:01', 10065, 10000, 1, 6, 10017, 0, 0, 0),
	(10018, '2013-06-19 11:35:40', 10056, 10000, 2, 8, 10001, 0, 0, 0),
	(10019, '2013-06-20 11:24:32', 10045, 10000, 1, 2, 10001, 0, 0, 0),
	(10020, '2013-06-21 14:43:47', 10028, 10000, 3, 6, 10017, 0, 0, 0),
	(10021, '2013-06-21 15:38:07', 10069, 10000, 3, 6, 10017, 0, 0, 0),
	(10022, '2013-06-21 15:44:32', 10069, 10000, 9, 2, 10017, 0, 0, 0),
	(10028, '2013-07-03 06:27:08', 10074, 10000, 1, 2, 10017, 0, 0, 0),
	(10029, '2013-07-03 10:31:32', 10079, 10000, 2, 4, 10018, 0, 0, 0),
	(10030, '2013-07-03 10:50:08', 10024, 10000, 3, 6, 10017, 0, 0, 0),
	(10031, '2013-07-03 10:55:13', 10082, 10000, 9, 2, 10017, 0, 0, 0),
	(10032, '2013-07-03 10:56:36', 10083, 10000, 4, 2, 10017, 0, 0, 0),
	(10033, '2013-07-03 10:59:09', 10084, 10000, 2, 2, 10017, 0, 0, 0),
	(10034, '2013-07-09 07:37:09', 10093, 10000, 2, 2, 10001, 0, 0, 0),
	(10035, '2013-07-09 15:26:41', 10074, 10000, 3, 6, 10017, 0, 0, 0),
	(10036, '2013-07-09 15:27:12', 10042, 10000, 7, 2, 10017, 0, 0, 0),
	(10037, '2013-07-09 15:27:15', 10041, 10000, 6, 2, 10017, 0, 0, 0),
	(10038, '2013-07-11 08:26:58', 10095, 10000, 3, 4, 10018, 0, 0, 0),
	(10039, '2013-07-11 08:45:28', 10101, 10000, 4, 2, 10008, 0, 0, 0),
	(10040, '2013-07-11 08:45:30', 10102, 10000, 3, 2, 10008, 0, 0, 0),
	(10041, '2013-07-11 08:45:33', 10103, 10000, 2, 2, 10008, 0, 0, 0),
	(10042, '2013-07-11 08:45:39', 10100, 10000, 1, 2, 10008, 0, 0, 0),
	(10043, '2013-07-23 08:59:02', 10105, 10000, 6, 2, 10008, 0, 0, 0),
	(10044, '2013-07-23 15:50:27', 10033, 10000, 3, 6, 10017, 0, 0, 0),
	(10045, '2013-07-24 06:56:10', 10032, 10000, 3, 6, 10017, 0, 0, 0),
	(10046, '2013-07-24 07:44:03', 10037, 10000, 3, 6, 10017, 0, 0, 0),
	(10047, '2013-07-24 08:53:01', 10082, 10000, 3, 6, 10017, 0, 0, 0),
	(10053, '2013-08-01 08:39:48', 10130, 10000, 3, 2, 10017, 0, 0, 0),
	(10059, '2013-08-05 10:16:24', 10083, 10000, 3, 6, 10017, 0, 0, 0),
	(10060, '2013-08-05 10:17:06', 10049, 10000, 3, 6, 10017, 0, 0, 0),
	(10061, '2013-08-05 15:11:31', 10042, 10000, 3, 6, 10017, 0, 0, 0),
	(10062, '2013-08-05 15:11:49', 10041, 10000, 2, 6, 10017, 0, 0, 0),
	(10063, '2013-08-05 19:14:04', 10044, 10000, 3, 6, 10017, 0, 0, 0),
	(10064, '2013-10-02 14:01:42', 10038, 10000, 1, 6, 10017, 0, 0, 0),
	(10065, '2013-10-07 09:36:07', 10225, 10000, 13, 2, 10012, 0, 0, 0),
	(10066, '2013-10-07 09:36:16', 10226, 10000, 9, 2, 10012, 0, 0, 0),
	(10068, '2013-10-15 11:37:22', 10269, 10000, 10, 2, 10008, 0, 0, 0),
	(10069, '2013-10-15 11:39:29', 10270, 10000, 9, 2, 10008, 0, 0, 0),
	(10070, '2013-10-15 11:39:44', 10271, 10000, 9, 2, 10008, 0, 0, 0),
	(10071, '2013-10-15 11:39:54', 10272, 10000, 8, 2, 10008, 0, 0, 0),
	(10072, '2013-10-15 11:40:03', 10273, 10000, 8, 2, 10008, 0, 0, 0),
	(10073, '2013-10-15 11:40:15', 10274, 10000, 8, 2, 10008, 0, 0, 0),
	(10074, '2013-10-15 11:40:24', 10275, 10000, 7, 2, 10008, 0, 0, 0),
	(10075, '2013-10-15 11:40:27', 10276, 10000, 8, 2, 10008, 0, 0, 0),
	(10076, '2013-10-15 11:40:38', 10277, 10000, 7, 2, 10008, 0, 0, 0),
	(10077, '2013-10-15 11:40:47', 10278, 10000, 6, 2, 10008, 0, 0, 0),
	(10078, '2013-10-15 11:40:53', 10279, 10000, 5, 2, 10008, 0, 0, 0),
	(10079, '2013-10-15 11:41:06', 10280, 10000, 5, 2, 10008, 0, 0, 0),
	(10080, '2013-10-15 11:41:07', 10281, 10000, 5, 2, 10008, 0, 0, 0),
	(10081, '2013-10-15 11:41:27', 10282, 10000, 7, 2, 10008, 0, 0, 0),
	(10082, '2013-10-15 11:41:37', 10283, 10000, 7, 2, 10008, 0, 0, 0),
	(10083, '2013-10-15 11:41:39', 10284, 10000, 6, 2, 10008, 0, 0, 0),
	(10084, '2013-10-15 11:41:46', 10285, 10000, 4, 2, 10008, 0, 0, 0),
	(10085, '2013-10-15 11:41:58', 10286, 10000, 8, 2, 10008, 0, 0, 0),
	(10086, '2013-10-15 11:42:05', 10287, 10000, 4, 2, 10008, 0, 0, 0),
	(10087, '2013-10-15 11:42:14', 10288, 10000, 6, 2, 10008, 0, 0, 0),
	(10088, '2013-10-15 11:42:17', 10289, 10000, 4, 2, 10008, 0, 0, 0),
	(10089, '2013-10-15 11:42:34', 10290, 10000, 3, 2, 10008, 0, 0, 0),
	(10090, '2013-10-15 11:42:36', 10291, 10000, 2, 2, 10008, 0, 0, 0),
	(10091, '2013-10-15 11:42:37', 10292, 10000, 1, 2, 10008, 0, 0, 0),
	(10092, '2013-10-15 11:42:43', 10293, 10000, 1, 2, 10008, 0, 0, 0),
	(10093, '2013-10-15 11:42:44', 10294, 10000, 1, 2, 10008, 0, 0, 0),
	(10094, '2013-10-15 12:05:49', 10295, 10000, 8, 2, 10008, 0, 0, 0),
	(10095, '2013-10-18 05:24:12', 10130, 10000, 2, 6, 10017, 0, 0, 0),
	(10243, '2014-07-03 13:45:31', 10650, 10000, 1, 2, 10083, 0, 0, 0),
	(10249, '2014-07-10 13:17:54', 10080, 10000, 1, 2, 10018, 0, 0, 0),
	(10250, '2014-07-10 13:19:26', 10128, 10000, 1, 2, 10001, 0, 0, 0),
	(10251, '2014-07-10 13:19:28', 10136, 10000, 1, 2, 10001, 0, 0, 0),
	(10252, '2014-07-10 13:19:28', 10142, 10000, 1, 2, 10001, 0, 0, 0),
	(10253, '2014-07-10 13:20:05', 10554, 10000, 1, 2, 10077, 0, 0, 0),
	(10254, '2014-07-10 13:20:07', 10556, 10000, 1, 2, 10077, 0, 0, 0),
	(10255, '2014-07-10 13:25:21', 10550, 10000, 1, 2, 10077, 0, 0, 0),
	(10282, '2014-07-12 17:29:43', 10225, 10119, 2, 2, 10012, 0, 0, 0),
	(10283, '2014-07-12 17:41:35', 10226, 10119, 1, 2, 10012, 0, 0, 0),
	(10316, '2014-09-10 09:44:35', 10041, 10119, 1, 2, 10017, 0, 0, 0),
	(10343, '2014-09-10 11:53:31', 10143, 10119, 1, 2, 10001, 0, 0, 0),
	(10353, '2014-09-10 13:58:39', 10136, 10119, 1, 2, 10001, 0, 0, 0),
	(10354, '2014-09-10 14:01:32', 10142, 10119, 1, 2, 10001, 0, 0, 0),
	(10364, '2014-09-10 14:46:55', 10131, 10119, 1, 2, 10001, 0, 0, 0),
	(10380, '2014-09-11 11:01:38', 10554, 10169, 2, 2, 10077, 0, 0, 0),
	(10381, '2014-09-11 11:01:39', 10557, 10169, 1, 2, 10077, 0, 0, 0),
	(10382, '2014-09-11 11:01:40', 10555, 10169, 1, 2, 10077, 0, 0, 0),
	(10383, '2014-09-11 11:01:41', 10552, 10169, -1, 2, 10077, 0, 0, 0),
	(10384, '2014-09-11 11:04:04', 10559, 10169, 2, 2, 10003, 0, 0, 0),
	(10385, '2014-09-11 11:04:05', 10560, 10169, 2, 2, 10003, 0, 0, 0),
	(10386, '2014-09-11 11:04:06', 10558, 10169, 1, 2, 10003, 0, 0, 0),
	(10387, '2014-09-11 11:06:13', 10976, 10169, 1, 2, 10094, 0, 0, 0),
	(10388, '2014-09-11 11:11:44', 10556, 10169, 1, 2, 10077, 0, 0, 0),
	(10389, '2014-09-11 11:11:46', 10550, 10169, 1, 2, 10077, 0, 0, 0),
	(10390, '2014-09-11 11:11:47', 10551, 10169, -1, 2, 10077, 0, 0, 0),
	(10391, '2014-09-11 11:12:54', 10974, 10169, 1, 2, 10003, 0, 0, 0);
/*!40000 ALTER TABLE `take` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.take_kindred
CREATE TABLE IF NOT EXISTS `take_kindred` (
  `take_kindred_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `date_processed` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `take_id` int(11) unsigned NOT NULL COMMENT 'The take that has been processed',
  `user_id` int(11) unsigned NOT NULL COMMENT 'The user who owns this rhythm process.',
  `scored_user_id` int(11) unsigned NOT NULL COMMENT 'The user who this score is for',
  `user_rhythm_id` int(11) unsigned NOT NULL COMMENT 'The kindred rhythm that is being used to process takes. May be a partial version - hence the link to user_rhythm_id rather than rhythm_extra_id',
  `score` bigint(20) NOT NULL DEFAULT '0' COMMENT 'The score given by this rhythm',
  PRIMARY KEY (`take_kindred_id`),
  KEY `user_id` (`user_id`),
  KEY `rhythm_id` (`user_rhythm_id`),
  KEY `take_id` (`take_id`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Takes that have been processed by users kindred rhythms';

-- Dumping data for table cobalt_cascade.take_kindred: ~2 rows (approximately)
/*!40000 ALTER TABLE `take_kindred` DISABLE KEYS */;
INSERT INTO `take_kindred` (`take_kindred_id`, `date_processed`, `take_id`, `user_id`, `scored_user_id`, `user_rhythm_id`, `score`) VALUES
	(1, '2011-12-11 09:11:28', 16, 1, 5, 5, 7),
	(2, '2011-12-11 09:11:28', 17, 1, 7, 5, 3);
/*!40000 ALTER TABLE `take_kindred` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.take_value_list
CREATE TABLE IF NOT EXISTS `take_value_list` (
  `take_value_list_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `stream_field_id` int(11) unsigned NOT NULL COMMENT 'The id of the field in the stream that the take list belongs to.',
  `name` varchar(256) COLLATE utf8_unicode_ci NOT NULL COMMENT 'The list item name.',
  `value` int(11) NOT NULL COMMENT 'The value that this item has.',
  PRIMARY KEY (`take_value_list_id`),
  KEY `stream_field_id` (`stream_field_id`),
  KEY `value` (`value`)
) ENGINE=InnoDB AUTO_INCREMENT=10026 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='List items associated with a take field with a value_type of list';

-- Dumping data for table cobalt_cascade.take_value_list: ~27 rows (approximately)
/*!40000 ALTER TABLE `take_value_list` DISABLE KEYS */;
INSERT INTO `take_value_list` (`take_value_list_id`, `stream_field_id`, `name`, `value`) VALUES
	(1, 103, 'first take value', 1),
	(2, 103, 'second take value', 2),
	(3, 103, 'third take value', 3),
	(10000, 10008, 'Unconfirmed', 1),
	(10001, 10008, 'Ready', 2),
	(10002, 10008, 'Fixed', 3),
	(10003, 10008, 'Invalid', 4),
	(10004, 10008, 'Wontfix', 5),
	(10005, 10008, 'Worksforme', 6),
	(10006, 10072, 'Not started', 1),
	(10007, 10072, 'In Progress', 2),
	(10008, 10074, 'Less than an hour', 1),
	(10009, 10074, 'More than an hour', 2),
	(10010, 10074, 'More than a day', 3),
	(10011, 10074, 'More than a week', 4),
	(10012, 10073, 'Protocol', 1),
	(10013, 10073, 'Servers', 2),
	(10014, 10081, 'Not Appraised', 1),
	(10015, 10081, 'On The Back Burner', 2),
	(10016, 10081, 'Task Entered', 3),
	(10017, 10081, 'Will Not Implement', 4),
	(10018, 10072, 'Complete', 3),
	(10019, 10341, 'sfs', 1),
	(10022, 10341, 'sdfgdsgfsd', 4),
	(10023, 10341, 'sdfsdf', 5),
	(10024, 10341, 'sgdsg', 6),
	(10025, 10341, 'sdfs', 7);
/*!40000 ALTER TABLE `take_value_list` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.test_data
CREATE TABLE IF NOT EXISTS `test_data` (
  `test_data_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `table` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `row` text COLLATE utf8_unicode_ci NOT NULL COMMENT 'json data : {column_name : data,...}',
  `display_order` int(11) unsigned NOT NULL DEFAULT '100' COMMENT '1 = first, 0 = turned off. ',
  PRIMARY KEY (`test_data_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1167 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Restore this data for tests to complete successfully.';

-- Dumping data for table cobalt_cascade.test_data: ~1,162 rows (approximately)
/*!40000 ALTER TABLE `test_data` DISABLE KEYS */;
INSERT INTO `test_data` (`test_data_id`, `table`, `row`, `display_order`) VALUES
	(1, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test datesort",\r\n        "string": true\r\n    }\r\n]', 100),
	(2, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test reverse datesort",\r\n        "string": true\r\n    }\r\n]', 100),
	(3, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-08 09:10:40",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "Sort items by date",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"\\/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"\\/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp  + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "116",\r\n        "string": false\r\n    }\r\n]', 100),
	(4, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-08 09:11:28",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "Sort items in reverse order",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var sort = 10000000000 - post.timestamp;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var sort = 10000000000 - post.timestamp;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "117",\r\n        "string": false\r\n    }\r\n]', 100),
	(7, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 6",\r\n        "string": true\r\n    }\r\n]', 100),
	(8, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 7",\r\n        "string": true\r\n    }\r\n]', 100),
	(9, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(10, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test user stream",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "52",\r\n        "string": false\r\n    }\r\n]', 100),
	(11, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test comments",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(12, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(13, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(14, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "An stream for making test posts.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "61",\r\n        "string": false\r\n    }\r\n]', 100),
	(15, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-08 10:00:39",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream to test takes against users",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "62",\r\n        "string": false\r\n    }\r\n]', 100),
	(16, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-09 11:02:20",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A standard test comment",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "post_mode",\r\n        "value" : "139",\r\n        "string": false\r\n    }\r\n]', 100),
	(17, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(18, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(19, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Link title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(20, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(21, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(22, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(23, 'ring', '[\r\n    {\r\n        "name": "ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "membership_type",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "membership_rhythm_id",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "membership_rhythm_version_type",\r\n        "value": "NULL",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "membership_super_ring_user_id",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "admin_type",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "admin_super_ring_user_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_rhythm_id",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_rhythm_version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(24, 'ring_take_name', '[\r\n    {\r\n        "name": "ring_take_name_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "take test",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "amount",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_version",\r\n        "value": "0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(27, 'user', '[\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "username",\r\n        "value": "test",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "6f0afcac4db28b4868c6801b23edc15617830f6908b73c486238b98afee6b9ef",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "salt",\r\n        "value": "4eb7dbb25e6740.57910008",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "email",\r\n        "value": "test@saltstore.co.uk",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "role",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "is_ring",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "test_user",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "meta_post_id",\r\n        "value": "98",\r\n        "string": false\r\n    }\r\n]', 100),
	(28, 'user', '[\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "username",\r\n        "value": "test2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "916ab04a3baa89042824bfc51ec2934dc4a35cb300a9e0e1cabc53ff15a338b5",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "salt",\r\n        "value": "4eb7dcd689a8b9.55862835",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "email",\r\n        "value": "test@saltstore.co.uk",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "role",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "is_ring",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "test_user",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "meta_post_id",\r\n        "value": "97",\r\n        "string": false\r\n    }\r\n]', 100),
	(29, 'user', '[\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "username",\r\n        "value": "test ring",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "d7d6732041f167d49a5f3ec472b72a197e525d9f5616bb3d109524446140cdca",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "salt",\r\n        "value": "4eb8fd41747e15.46954254",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "email",\r\n        "value": "test@saltstore.co.uk",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "role",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "is_ring",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "test_user",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "meta_post_id",\r\n        "value": "93",\r\n        "string": false\r\n    }\r\n]', 100),
	(30, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(31, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(32, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(33, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(34, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(35, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(36, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(37, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(38, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(39, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(40, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(41, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(42, 'user_profile', '[\r\n    {\r\n        "name": "user_profile_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "real_name",\r\n        "value": "Someone Somewhere",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "about",\r\n        "value": "Would rather not say.",\r\n        "string": true\r\n    }\r\n]', 100),
	(43, 'user_profile', '[\r\n    {\r\n        "name": "user_profile_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "real_name",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "about",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(44, 'user_profile', '[\r\n    {\r\n        "name": "user_profile_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "real_name",\r\n        "value": "Test users 3 real name",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "about",\r\n        "value": "All about test user 3",\r\n        "string": true\r\n    }\r\n]', 100),
	(45, 'user_ring', '[\r\n    {\r\n        "name": "user_ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "6G2HTk]nrzx3pMtKzcQx",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "admin",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "member",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ban",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(46, 'user_ring', '[\r\n    {\r\n        "name": "user_ring_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "ring-password",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "admin",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "member",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ban",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(48, 'user_ring_password', '[\r\n    {\r\n        "name": "user_ring_password_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "6G2HTk]nrzx3pMtKzcQx",\r\n        "string": true\r\n    }\r\n]', 100),
	(49, 'user_ring_password', '[\r\n    {\r\n        "name": "user_ring_password_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "ring-password",\r\n        "string": true\r\n    }\r\n]', 100),
	(50, 'user_stream_subscription_ring', '[\r\n    {\r\n        "name": "user_stream_subscription_ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(51, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(52, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(53, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(54, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(55, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(58, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-09 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(59, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-09 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 1",\r\n        "string": true\r\n    }\r\n]', 100),
	(61, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-09 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(62, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-09 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(63, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(64, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(65, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(66, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_taken",\r\n        "value": "2011-11-15 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": 4,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": 3,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": 1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": 2,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": 1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": 1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(67, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_taken",\r\n        "value": "2011-11-15 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": 5,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": 3,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": -1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": 2,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": 1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": 1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": 1,\r\n        "string": false\r\n    }\r\n]', 100),
	(68, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_taken",\r\n        "value": "2011-11-15 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": 6,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": 3,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": 1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": 2,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": 1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": 2,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": 2,\r\n        "string": false\r\n    }\r\n]', 100),
	(69, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_taken",\r\n        "value": "2011-11-15 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": 7,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": 3,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": 1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": 2,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": 1,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": 0,\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": 0,\r\n        "string": false\r\n    }\r\n]', 100),
	(70, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-09 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 2",\r\n        "string": true\r\n    }\r\n]', 100),
	(71, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-09 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 3 - breaks for testing when full data is requested",\r\n        "string": true\r\n    }\r\n]', 100),
	(72, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 4",\r\n        "string": true\r\n    }\r\n]', 100),
	(73, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 5",\r\n        "string": true\r\n    }\r\n]', 100),
	(74, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 8",\r\n        "string": true\r\n    }\r\n]', 100),
	(75, 'stream_block', '[\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "start_time",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "end_time",\r\n        "value": "1320847200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_number",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(76, 'stream_block', '[\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "start_time",\r\n        "value": "1320847200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "end_time",\r\n        "value": "1321012800",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_number",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(77, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(78, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(79, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(80, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(81, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 16:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(82, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:10:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(83, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:20:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(84, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:30:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(85, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 9 - comment 1",\r\n        "string": true\r\n    }\r\n]', 100),
	(86, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 10 - comment 2",\r\n        "string": true\r\n    }\r\n]', 100),
	(87, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 11 - comment 3",\r\n        "string": true\r\n    }\r\n]', 100),
	(88, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 12 - comment 4",\r\n        "string": true\r\n    }\r\n]', 100),
	(89, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 16:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 13 - comment 5",\r\n        "string": true\r\n    }\r\n]', 100),
	(90, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:10:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 14 - comment 6",\r\n        "string": true\r\n    }\r\n]', 100),
	(91, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:20:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 15 - comment 7",\r\n        "string": true\r\n    }\r\n]', 100),
	(92, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:30:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 16 - comment 8",\r\n        "string": true\r\n    }\r\n]', 100),
	(93, 'stream_block_tree', '[\r\n    {\r\n        "name": "stream_block_tree_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "start_time",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "end_time",\r\n        "value": "1321189200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_number",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(94, 'stream_block_tree', '[\r\n    {\r\n        "name": "stream_block_tree_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "start_time",\r\n        "value": "1321189201",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "end_time",\r\n        "value": "1321197600",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_number",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(95, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(96, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-20 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(97, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-20 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 19",\r\n        "string": true\r\n    }\r\n]', 100),
	(99, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(104, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(105, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-20 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(106, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-20 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 20",\r\n        "string": true\r\n    }\r\n]', 100),
	(107, 'user', '[\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "username",\r\n        "value": "test3",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "6f0afcac4db28b4868c6801b23edc15617830f6908b73c486238b98afee6b9ef",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "salt",\r\n        "value": "4eb7dbb25e6740.57910008",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "email",\r\n        "value": "test@saltstore.co.uk",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "role",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "is_ring",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "test_user",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "meta_post_id",\r\n        "value": "96",\r\n        "string": false\r\n    }\r\n]', 100),
	(108, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(109, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(110, 'user_profile', '[\r\n    {\r\n        "name": "user_profile_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "real_name",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "about",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(112, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-11-21 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(113, 'user', '[\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "username",\r\n        "value": "test4",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "6f0afcac4db28b4868c6801b23edc15617830f6908b73c486238b98afee6b9ef",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "salt",\r\n        "value": "4eb7dbb25e6740.57910008",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "email",\r\n        "value": "test@saltstore.co.uk",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "role",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "is_ring",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "test_user",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "meta_post_id",\r\n        "value": "95",\r\n        "string": false\r\n    }\r\n]', 100),
	(114, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(115, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(116, 'user_profile', '[\r\n    {\r\n        "name": "user_profile_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "real_name",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "about",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(117, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-11-21 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(118, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-11-21 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(122, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(123, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream suggestion with data source",\r\n        "string": true\r\n    }\r\n]', 100),
	(124, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test kindred rhythm1",\r\n        "string": true\r\n    }\r\n]', 100),
	(125, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test kindred rhythm2",\r\n        "string": true\r\n    }\r\n]', 100),
	(126, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test ring",\r\n        "string": true\r\n    }\r\n]', 100),
	(128, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-30 15:15:23",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A test stream suggestion Rhythm",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n       var suggestions = [\\r\\n            {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test suggested stream\\",\\r\\n                \\"version\\":\\"latest\\/latest\\/latest\\"                \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n       var suggestions = [\\r\\n            {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test suggested stream\\",\\r\\n                \\"version\\":\\"latest\\/latest\\/latest\\"                \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "118",\r\n        "string": false\r\n    }\r\n]', 100),
	(129, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-01 07:53:55",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A test suggestion Rhythm that fetches data from a a remote url to test this functionality.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var suggestion_data;\\r\\n    \\r\\n    var onDataFetched = function (data) {\\r\\n        suggestion_data = data;\\r\\n        BabblingBrook.Filter.processSuggestions();\\r\\n    };\\r\\n    \\r\\n    var init = function () {\\r\\n        var url = \\"cobaltcascade.localhost\\/tests\\/SuggestionTestData\\";\\r\\n        BabblingBrook.Filter.getMiscData(url, onDataFetched);     \\r\\n    };\\r\\n    \\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\" : suggestion_data.domain\\r\\n                \\"username\\" : suggestion_data.username,\\r\\n                \\"name\\" : suggestion_data.name,\\r\\n                \\"version\\" : suggestion_data.version   \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var suggestion_data;\\r\\n    \\r\\n    var onDataFetched = function (data) {\\r\\n        suggestion_data = data;\\r\\n        BabblingBrook.Filter.processSuggestions();\\r\\n    };\\r\\n    \\r\\n    var init = function () {\\r\\n        var url = \\"cobaltcascade.localhost\\/tests\\/SuggestionTestData\\";\\r\\n        BabblingBrook.Filter.getMiscData(url, onDataFetched);     \\r\\n    };\\r\\n    \\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\" : suggestion_data.domain\\r\\n                \\"username\\" : suggestion_data.username,\\r\\n                \\"name\\" : suggestion_data.name,\\r\\n                \\"version\\" : suggestion_data.version   \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "119",\r\n        "string": false\r\n    }\r\n]', 100),
	(130, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-12 10:54:11",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "The first test kindred rhythm",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var main = function (take) {\\r\\n        var scores = [\\r\\n            {\\r\\n                full_username : take.post_domain + \\"\\/\\" + take.post_username, \\r\\n                score : 5  \\r\\n            }\\r\\n        ]\\r\\n        BabblingBrook.Kindred.processNextTake(scores);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var main = function (take) {\\r\\n        var scores = [\\r\\n            {\\r\\n                full_username : take.post_domain + \\"\\/\\" + take.post_username, \\r\\n                score : 5  \\r\\n            }\\r\\n        ]\\r\\n        BabblingBrook.Kindred.processNextTake(scores);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "107",\r\n        "string": false\r\n    }\r\n]', 100),
	(131, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-12 10:54:50",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A second test kindred Rhythm",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var take;\\r\\n    \\r\\n    var onTakesFetched = function (users_takes) {\\r\\n        var scores = [];\\r\\n        var kindred = \\r\\n        $.each(post_takes, function(i, post_take){\\r\\n            var score = 0;\\r\\n            if((post_take.value > 0 && take.value > 0) || ((post_take.value < 1 && take.value < 1))) {\\r\\n                score = 1;\\r\\n            } else if(post_take.value != 0 && take.value != 0) {\\r\\n                score = -1;\\r\\n            }\\r\\n            var score = {\\r\\n                full_username : post_take.domain + \\"\\/\\" + post_take.username, \\r\\n                score : score \\r\\n            };  \\r\\n            scores.push(score);            \\r\\n        });\\r\\n        BabblingBrook.Kindred.processNextTake(scores);\\r\\n    };\\r\\n    \\r\\n    var main = function (current_take) {\\r\\n        take = current_take;\\r\\n        var url = take.stream_domain + \\"\\/post\\/\\" + take.stream_domain + \\"\\/\\" + take.local_id + \\"\\/takes\\";\\r\\n        BabblingBrook.Kindred.getMiscData(url, onTakesFetched);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var take;\\r\\n    \\r\\n    var onTakesFetched = function (users_takes) {\\r\\n        var scores = [];\\r\\n        var kindred = \\r\\n        $.each(post_takes, function(i, post_take){\\r\\n            var score = 0;\\r\\n            if((post_take.value > 0 && take.value > 0) || ((post_take.value < 1 && take.value < 1))) {\\r\\n                score = 1;\\r\\n            } else if(post_take.value != 0 && take.value != 0) {\\r\\n                score = -1;\\r\\n            }\\r\\n            var score = {\\r\\n                full_username : post_take.domain + \\"\\/\\" + post_take.username, \\r\\n                score : score \\r\\n            };  \\r\\n            scores.push(score);            \\r\\n        });\\r\\n        BabblingBrook.Kindred.processNextTake(scores);\\r\\n    };\\r\\n    \\r\\n    var main = function (current_take) {\\r\\n        take = current_take;\\r\\n        var url = take.stream_domain + \\"\\/post\\/\\" + take.stream_domain + \\"\\/\\" + take.local_id + \\"\\/takes\\";\\r\\n        BabblingBrook.Kindred.getMiscData(url, onTakesFetched);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "108",\r\n        "string": false\r\n    }\r\n]', 100),
	(132, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-14 14:10:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A test ring url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function(){\\r\\n    alert(\\"test ring rhythm\\");\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function(){\\r\\n    alert(\\"test ring rhythm\\");\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "109",\r\n        "string": false\r\n    }\r\n]', 100),
	(133, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test suggested stream",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(134, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream with sub value Rhythm",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(135, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test everything stream",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(139, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(140, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(141, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(147, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(149, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-30 15:38:59",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream to suggest when testing suggested stream Rhythms.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "64",\r\n        "string": false\r\n    }\r\n]', 100),
	(150, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-23 09:24:24",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream that allows for testing of posts with sub values that require an Rhythm check.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "65",\r\n        "string": false\r\n    }\r\n]', 100),
	(151, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2012-01-05 09:29:21",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A test stream containing all types of field and value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "66",\r\n        "string": false\r\n    }\r\n]', 100),
	(152, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(153, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(154, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(155, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(156, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "value with rhythm check",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(157, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(158, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(159, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a required textbox",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "2000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(160, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a link field",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(161, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a checkbox",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(162, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a short list",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(163, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a long list",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(164, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "37",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "an open list",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(165, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "an updown value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(166, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "an updown value with constraints",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(167, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "an updown value with constraints on the post",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(168, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a textbox value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(169, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a textbox value with constraints on the post",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(170, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a button value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "46",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(172, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "first short list item",\r\n        "string": true\r\n    }\r\n]', 100),
	(173, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "second short list item",\r\n        "string": true\r\n    }\r\n]', 100),
	(174, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 1",\r\n        "string": true\r\n    }\r\n]', 100),
	(175, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 2",\r\n        "string": true\r\n    }\r\n]', 100),
	(176, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 3",\r\n        "string": true\r\n    }\r\n]', 100),
	(177, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 4",\r\n        "string": true\r\n    }\r\n]', 100),
	(178, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 5",\r\n        "string": true\r\n    }\r\n]', 100),
	(179, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 6",\r\n        "string": true\r\n    }\r\n]', 100),
	(180, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 7",\r\n        "string": true\r\n    }\r\n]', 100),
	(181, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 8",\r\n        "string": true\r\n    }\r\n]', 100),
	(182, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 9",\r\n        "string": true\r\n    }\r\n]', 100),
	(183, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 10",\r\n        "string": true\r\n    }\r\n]', 100),
	(184, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 11",\r\n        "string": true\r\n    }\r\n]', 100),
	(185, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 12",\r\n        "string": true\r\n    }\r\n]', 100),
	(186, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 13",\r\n        "string": true\r\n    }\r\n]', 100),
	(187, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 14",\r\n        "string": true\r\n    }\r\n]', 100),
	(188, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 15",\r\n        "string": true\r\n    }\r\n]', 100),
	(189, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 16",\r\n        "string": true\r\n    }\r\n]', 100),
	(190, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 17",\r\n        "string": true\r\n    }\r\n]', 100),
	(191, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 18",\r\n        "string": true\r\n    }\r\n]', 100),
	(192, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 19",\r\n        "string": true\r\n    }\r\n]', 100),
	(193, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "long list item 20",\r\n        "string": true\r\n    }\r\n]', 100),
	(196, 'stream_extra', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_extra FROM stream_extra INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 48),
	(209, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(210, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(216, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/test+stream+suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(217, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_filter_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(218, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_user_rate",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(219, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_moderation_ring_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/test+moderation+suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(220, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+suggestion+filter/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(221, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_filter_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(222, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_user_rate",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(223, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_moderation_ring_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/test+moderation+suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(224, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+suggestion+filter/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(225, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_filter_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(226, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_user_rate",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(227, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_moderation_ring_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(228, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/test+stream+suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(229, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_filter_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(230, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_user_rate",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(231, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_moderation_ring_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(232, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/test+stream+suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]\r\n', 100),
	(233, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_filter_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(234, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_user_rate",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(235, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_moderation_ring_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(247, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(248, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(249, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(271, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(272, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(273, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(274, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(275, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(276, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(277, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(278, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(300, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-20 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(301, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-20 14:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 21",\r\n        "string": true\r\n    }\r\n]', 100),
	(303, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(304, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 22",\r\n        "string": true\r\n    }\r\n]', 100),
	(306, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:04:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(307, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:04:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 24",\r\n        "string": true\r\n    }\r\n]', 100),
	(308, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:05:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(309, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:05:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 25",\r\n        "string": true\r\n    }\r\n]', 100),
	(310, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:06:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(311, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:06:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 26",\r\n        "string": true\r\n    }\r\n]', 100),
	(312, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:07:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(313, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:07:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 27",\r\n        "string": true\r\n    }\r\n]', 100),
	(314, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:08:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(315, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:08:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 28",\r\n        "string": true\r\n    }\r\n]', 100),
	(316, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:09:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(317, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:09:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 29",\r\n        "string": true\r\n    }\r\n]', 100),
	(318, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:10:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 30",\r\n        "string": true\r\n    }\r\n]', 100),
	(319, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:10:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(320, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:11:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(321, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:11:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 31",\r\n        "string": true\r\n    }\r\n]', 100),
	(322, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:12:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(323, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:12:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 32",\r\n        "string": true\r\n    }\r\n]', 100),
	(324, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:13:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(325, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:13:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 33",\r\n        "string": true\r\n    }\r\n]', 100),
	(326, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:14:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(327, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:15:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(328, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:16:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(329, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "37",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "37",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:17:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(330, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:14:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 34",\r\n        "string": true\r\n    }\r\n]', 100),
	(331, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:15:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 35",\r\n        "string": true\r\n    }\r\n]', 100),
	(332, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:16:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 36",\r\n        "string": true\r\n    }\r\n]', 100),
	(333, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "37",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:17:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "37",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 37",\r\n        "string": true\r\n    }\r\n]', 100),
	(334, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "textbox with regex",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "^[0-9]+$",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(335, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a log scale value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(336, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "checkbox with default on",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(337, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a linear scale value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(338, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a linear positive scale",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(339, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a linear negative scale",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(340, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a linear offset positive scale 150-250",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "150",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "250",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(342, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a log scale value 0 - 10000",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(343, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a log scale value -10000 0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(344, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a log scale offset value 100 - 100000",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "100000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(345, 'stream_list', '[\r\n    {\r\n        "name": "stream_list_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "third short list item",\r\n        "string": true\r\n    }\r\n]', 100),
	(346, 'ring_take_name', '[\r\n    {\r\n        "name": "ring_take_name_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "take user test",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "amount",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_version",\r\n        "value": "0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(347, 'ring_take_name', '[\r\n    {\r\n        "name": "ring_take_name_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "take comment test",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "amount",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_version",\r\n        "value": "0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(348, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "38",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "38",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 14:01:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(349, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "39",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "39",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 11:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(350, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "40",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "40",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 17:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(351, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "41",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "41",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:05:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(352, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "42",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "42",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:15:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(353, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "43",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "43",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:25:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(354, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "44",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "44",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:26:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(355, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:35:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(356, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "46",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "46",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:40:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(357, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "38",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 14:01:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "38",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 38 - comment 9",\r\n        "string": true\r\n    }\r\n]', 100),
	(358, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "39",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 11:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "39",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 38 - comment 10",\r\n        "string": true\r\n    }\r\n]', 100),
	(359, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "40",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 17:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "40",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 40 - comment 11",\r\n        "string": true\r\n    }\r\n]', 100),
	(360, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "41",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:05:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "41",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 41 - comment 12",\r\n        "string": true\r\n    }\r\n]', 100),
	(361, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "42",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:15:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "42",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 42 - comment 13",\r\n        "string": true\r\n    }\r\n]', 100),
	(362, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "43",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:25:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "43",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 43 - comment 14",\r\n        "string": true\r\n    }\r\n]', 100),
	(363, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "44",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:26:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "44",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 44 - comment 15",\r\n        "string": true\r\n    }\r\n]', 100),
	(364, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:35:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 45 - comment 16",\r\n        "string": true\r\n    }\r\n]', 100),
	(365, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "46",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:40:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "46",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 46 - comment 17",\r\n        "string": true\r\n    }\r\n]', 100),
	(366, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "47",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "47",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:50:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(367, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "48",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "48",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:51:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "47",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(368, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "49",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "49",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "48",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(369, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "47",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:50:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "47",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 47 - comment 18",\r\n        "string": true\r\n    }\r\n]', 100),
	(370, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "48",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:51:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "48",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 48 - comment 19",\r\n        "string": true\r\n    }\r\n]', 100),
	(371, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "49",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "49",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post 49 - comment 20",\r\n        "string": true\r\n    }\r\n]', 100),
	(372, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "37",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a linear offset negative scale -150- -250",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-250",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "-150",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(373, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "38",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "an uneven linear scale -100 - 250",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "250",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(374, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "39",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a log uneven scale -100 - 10000",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(375, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "40",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a log scale offset value -100000 - -100",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-100000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "-100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(376, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "41",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a log scale with constraints on the post",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(377, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "43",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a stars value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(378, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "44",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a stars value with constraint on the post",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(379, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "42",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a linear scale with constraints on the post",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(380, 'stream', '\r\n[\r\n    {\r\n        "sql": "DELETE stream FROM stream INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(381, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test oscillating 1",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(382, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test oscillating 2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(383, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "An stream for making oscillating comments",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "67",\r\n        "string": false\r\n    }\r\n]', 100),
	(384, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "Second stream for making oscillating comments",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "68",\r\n        "string": false\r\n    }\r\n]', 100),
	(385, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(386, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(387, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "oscillating1",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(388, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "47",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "oscillating 2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(389, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "46",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(390, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "48",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(391, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    }\r\n]', 100),
	(392, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    }\r\n]', 100),
	(393, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(394, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(395, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(396, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(397, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(398, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(399, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    }\r\n]', 100),
	(400, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(401, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(402, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test link in title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(403, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream with a link for the main field and also a secondary field to test opening of the post field.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "80",\r\n        "string": false\r\n    }\r\n]', 100),
	(404, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(405, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "49",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Link at the top",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(406, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "secondary field",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(407, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "6",\r\n        "string": false\r\n    }\r\n]', 100),
	(408, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(409, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(410, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(411, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "7",\r\n        "string": false\r\n    }\r\n]', 100),
	(412, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "8",\r\n        "string": false\r\n    }\r\n]', 100),
	(413, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "9",\r\n        "string": false\r\n    }\r\n]', 100),
	(414, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(415, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(416, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "10",\r\n        "string": false\r\n    }\r\n]', 100),
	(417, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "11",\r\n        "string": false\r\n    }\r\n]', 100),
	(418, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "12",\r\n        "string": false\r\n    }\r\n]', 100),
	(419, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "13",\r\n        "string": false\r\n    }\r\n]', 100),
	(420, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(421, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(422, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(423, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream filter suggestion rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(424, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-14 14:10:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a stream filter suggestion rhythm",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test filter suggestion\\",\\r\\n                \\"version\\":\\"0\\/0\\/0\\"                \\r\\n            }, {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test a second filter suggestion\\",\\r\\n                \\"version\\":\\"0\\/0\\/0\\"  \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test filter suggestion\\",\\r\\n                \\"version\\":\\"0\\/0\\/0\\"                \\r\\n            }, {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test a second filter suggestion\\",\\r\\n                \\"version\\":\\"0\\/0\\/0\\"  \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "110",\r\n        "string": false\r\n    }\r\n]', 100),
	(426, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(427, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test filter suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(428, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test a second filter suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(429, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 09:10:40",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a test filter suggestion. This is used in other test suggestion rhythms, but does nothing itself.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "/**\\r\\n * Fetches the stream subscriptions of the users nearest kindred and then selects the most \\r\\n * popular filters that this user is not subscribed to already and has not already declined.\\r\\n *\\r\\n * Filters get more points for being higher up the kindred list and \\r\\n * more points for being close to the start of the top of the filter subscription list.\\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n	var client_domain;\\r\\n	var suggestion_type;\\r\\n	var kindred;\\r\\n	var user_subscriptions;\\r\\n	var declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n	\\r\\n	/**\\r\\n	 * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n	 */\\r\\n	var max_kindred_to_process = 30;\\r\\n	var kindred_subscriptions = [];\\r\\n    \\r\\n	/**\\r\\n	 * Scores for each stream indexed by domain/username/name.\\r\\n	 */\\r\\n	var filter_scores = {};\\r\\n	var final_scores;\\r\\n	\\r\\n	var suggestions = [];\\r\\n	\\r\\n	var max_kindred_points = 100;\\r\\n	var kindred_points_divider = 0.8;\\r\\n		var max_subscription_points = 100;\\r\\n	var subscription_points_divider = 0.8;\\r\\n    /**\\r\\n     * A bonus score given if the filter is the first in the stream. \\r\\n     */\\r\\n    var bonus_score_to_first = 50;\\r\\n	\\r\\n	var max_results_to_return = 25;\\r\\n	\\r\\n	var init_done = false;\\r\\n	\\r\\n	/**\\r\\n	 * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n	 */\\r\\n	var isInitDone = function () {\\r\\n		if (Object.keys(kindred_subscriptions).length === max_kindred_to_process) {       \\r\\n			if (typeof user_subscriptions !== \\"undefined\\" && typeof declined_suggestions !== \\"undefined\\") {	              \\r\\n				if (init_done === false) {	                  \\r\\n					init_done = true;\\r\\n					BabblingBrook.Suggestion.processSuggestions();\\r\\n					return true;\\r\\n				}\\r\\n			}\\r\\n		}\\r\\n		return false;\\r\\n	};\\r\\n	\\r\\n	var onUserSubscriptionsFetched = function (data) {\\r\\n		user_subscriptions = data.subscriptions;\\r\\n		isInitDone();\\r\\n	};\\r\\n	\\r\\n	var onUserDeclinedSuggestionsFetched = function (data) {	\\r\\n		declined_suggestions = data.suggestions_declined;\\r\\n		isInitDone();\\r\\n	};	\\r\\n	\\r\\n	var onKindredSubscriptionsFetched = function (index, data) {       \\r\\n		kindred_subscriptions[index] = data.subscriptions;\\r\\n		isInitDone();\\r\\n	};	\\r\\n\\r\\n	/**\\r\\n	 * If a kindreds subscription data does not respond then just\\r\\n	 * use an empty array, so that the rhythm can proceed without it.\\r\\n	 * \\r\\n	 * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n	 *\\r\\n	 * return {void}\\r\\n	 */\\r\\n	var onKindredSubscriptionsFetchedError = function (index) {\\r\\n		kindred_subscriptions[index] = [];\\r\\n		isInitDone();\\r\\n	};	\\r\\n	\\r\\n	var onUserSubscriptionsFetchedError = function () {\\r\\n		throw \\"Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm\\";\\r\\n	};	\\r\\n	\\r\\n	var onUserDeclinedSuggestionsFetchedError = function () {\\r\\n		throw \\"Error whilst fetchning this users declined suggestions in suggestion rhtyhm\\";\\r\\n	};	\\r\\n	\\r\\n    var init = function () {        \\r\\n		params = BabblingBrook.Suggestion.getParamaters();\\r\\n        \\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n		client_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n		suggestion_type = BabblingBrook.Suggestion.getSuggestionType();\\r\\n		\\r\\n        var url = user.domain + \\"/\\" + user.username + \\r\\n            \\"/clientdata/getstreamfiltersubscriptions/?client_domain=\\" + client_domain;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n			url, \\r\\n			onUserSubscriptionsFetched,\\r\\n			onUserSubscriptionsFetchedError\\r\\n		);\\r\\n	\\r\\n        url = user.domain + \\"/\\" + user.username + \\r\\n            \\"/clientdata/getdeclinedsuggestions/?client_domain=\\" + client_domain + \\r\\n			\\"&type=\\" + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n			url, \\r\\n			onUserDeclinedSuggestionsFetched,\\r\\n			onUserDeclinedSuggestionsFetchedError\\r\\n		); 		\\r\\n		\\r\\n		kindred = BabblingBrook.Suggestion.getKindred();		\\r\\n		var kindred_length = Object.keys(kindred).length;\\r\\n		if (kindred_length < max_kindred_to_process) {\\r\\n			max_kindred_to_process = kindred_length;\\r\\n		}\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n			var kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n			var kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n			var url = kindred_domain + \\"/\\" + kindred_username + \\r\\n				\\"/clientdata/getstreamfiltersubscriptions/?client_domain=\\" + client_domain;\\r\\n			BabblingBrook.Suggestion.getMiscData(\\r\\n				url, \\r\\n				onKindredSubscriptionsFetched.bind(null, i),\\r\\n				onKindredSubscriptionsFetchedError.bind(null, i)\\r\\n			);\\r\\n			i++; \\r\\n		}\\r\\n		isInitDone();\\r\\n    };\\r\\n	\\r\\n	var createScoreFilter = function (filter) {\\r\\n		var filter_name = filter.domain + \\"/\\" + filter.username + \\"/\\" + filter.name;     \\r\\n		if (typeof filter_scores[filter_name] === \\"undefined\\") {\\r\\n			filter_scores[filter_name] = filter;\\r\\n			filter_scores[filter_name].score = 0;\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var isInDomain = function (domain) {    \\r\\n		if (typeof params.domain !== \\"string\\") {\\r\\n			return true;\\r\\n		} else if (params.domain === domain){\\r\\n			return true;\\r\\n		} else {\\r\\n			return false;\\r\\n		}\\r\\n	};\\r\\n	\\r\\nvar isInUsername = function (username) {\\r\\n		if (typeof params.username !== \\"string\\") {\\r\\n			return true;\\r\\n		} else if (params.username === username){\\r\\n			return true;\\r\\n		} else {\\r\\n			return false;\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var isInName = function (name) {\\r\\n		if (typeof params.name !== \\"string\\") {\\r\\n			return true;\\r\\n		} else if (params.name === name){\\r\\n			return true;\\r\\n		} else {\\r\\n			return false;\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var isSubValid = function (sub) {         \\r\\n		if (isInDomain(sub.domain) === true \\r\\n			&& isInUsername(sub.username) === true \\r\\n			&& isInName(sub.name) === true\\r\\n		) {\\r\\n			return true;\\r\\n		}\\r\\n		return false;\\r\\n	};\\r\\n	\\r\\n	var calculateScores = function () {\\r\\n		for (var i = 0; i < max_kindred_to_process; i++) {              \\r\\n			for (var j in kindred_subscriptions[i]) {                \\r\\n				var sub = kindred_subscriptions[i][j];   \\r\\n				if (isSubValid(sub) === true) {              \\r\\n 					var filters = sub.filters;\\r\\n					jQuery.each(filters, function (k, filter) {\\r\\n						createScoreFilter(filters[k]);\\r\\n						var kindred_divider = kindred_points_divider * (i + 1);\\r\\n						var kindred_score = max_kindred_points / kindred_divider;\\r\\n						var position_divider = subscription_points_divider * (k + 1);\\r\\n						var position_score = max_subscription_points / subscription_points_divider;\\r\\n						if (k === 0) {\\r\\n							position_score += bonus_score_to_first;\\r\\n						}\\r\\n						var filter_name = filters[k].domain + \\"/\\" + filters[k].username + \\"/\\" + filters[k].name;\\r\\n						filter_scores[filter_name].score += Math.round(position_score + kindred_score);  \\r\\n					});\\r\\n				}\\r\\n			}\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var sortScores = function () {\\r\\nconsole.debug(filter_scores);	\\r\\n		var final_scores = [];\\r\\n		for (var i in filter_scores) {\\r\\n			if (filter_scores[i].score > 0) {\\r\\n				final_scores.push(filter_scores[i]);\\r\\n			}\\r\\n		}\\r\\n		final_scores.sort(function (a, b) {\\r\\n			return b.score - a.score;\\r\\n		});\\r\\n		for (var j=0; j<final_scores.length; j++) {\\r\\n			suggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username,\\r\\n                \\"name\\" : final_scores[j].name,\\r\\n                \\"version\\" : final_scores[j].version \\r\\n			});\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var removeSubscribedStreamFilters = function () {     \\r\\n		// Don\\"t do this for the test one.\\r\\n		\\r\\n	};	\\r\\n	\\r\\n	var removeDeclinedSuggestions = function () {            \\r\\n		//r (var i = 0; i < declined_suggestions.length; i++) {  \\r\\n      			//if (isSubValid(declined_suggestions[i]) === true) {    \\r\\n                  				//var filters = declined_suggestions[i].filters;\\r\\n                var filters = declined_suggestions;         \\r\\n				for (var k = 0; k < filters.length; k++) {\\r\\n                    \\r\\n					for (var j in filter_scores) {\\r\\n						var filter = filters[k];\\r\\n						var suggestion = filter_scores[j];\\r\\n						if (filter.domain === suggestion.domain\\r\\n							&& filter.username === suggestion.username\\r\\n							&& filter.name === suggestion.name\\r\\n						) {\\r\\n							suggestion.score = 0;\\r\\n						}\\r\\n					}\\r\\n				}\\r\\n			//}\\r\\n		//\\r\\n	};		\\r\\n	\\r\\n    var main = function () {\\r\\n		calculateScores();\\r\\nconsole.debug(suggestions);		\\r\\n		removeSubscribedStreamFilters();\\r\\n		removeDeclinedSuggestions();\\r\\n		sortScores();\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}\\r\\n",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "/**\\r\\n * Fetches the stream subscriptions of the users nearest kindred and then selects the most \\r\\n * popular filters that this user is not subscribed to already and has not already declined.\\r\\n *\\r\\n * Filters get more points for being higher up the kindred list and \\r\\n * more points for being close to the start of the top of the filter subscription list.\\r\\n */\\r\\nfunction () {\\r\\n    var user;\\r\\n	var client_domain;\\r\\n	var suggestion_type;\\r\\n	var kindred;\\r\\n	var user_subscriptions;\\r\\n	var declined_suggestions;\\r\\n    \\r\\n    /**\\r\\n     * If there is a stream paramater then only fetch suggestions for that stream,\\r\\n     * the stream location is stored in the suggestion paramaters\\r\\n     */\\r\\n    var params;\\r\\n	\\r\\n	/**\\r\\n	 * @type {integer} The maximum number of kindred subscriptions to fetch.\\r\\n	 */\\r\\n	var max_kindred_to_process = 30;\\r\\n	var kindred_subscriptions = [];\\r\\n    \\r\\n	/**\\r\\n	 * Scores for each stream indexed by domain/username/name.\\r\\n	 */\\r\\n	var filter_scores = {};\\r\\n	var final_scores;\\r\\n	\\r\\n	var suggestions = [];\\r\\n	\\r\\n	var max_kindred_points = 100;\\r\\n	var kindred_points_divider = 0.8;\\r\\n		var max_subscription_points = 100;\\r\\n	var subscription_points_divider = 0.8;\\r\\n    /**\\r\\n     * A bonus score given if the filter is the first in the stream. \\r\\n     */\\r\\n    var bonus_score_to_first = 50;\\r\\n	\\r\\n	var max_results_to_return = 25;\\r\\n	\\r\\n	var init_done = false;\\r\\n	\\r\\n	/**\\r\\n	 * Checks to see if all requested data has returned before starting the suggestion generation.\\r\\n	 */\\r\\n	var isInitDone = function () {\\r\\n		if (Object.keys(kindred_subscriptions).length === max_kindred_to_process) {       \\r\\n			if (typeof user_subscriptions !== \\"undefined\\" && typeof declined_suggestions !== \\"undefined\\") {	              \\r\\n				if (init_done === false) {	                  \\r\\n					init_done = true;\\r\\n					BabblingBrook.Suggestion.processSuggestions();\\r\\n					return true;\\r\\n				}\\r\\n			}\\r\\n		}\\r\\n		return false;\\r\\n	};\\r\\n	\\r\\n	var onUserSubscriptionsFetched = function (data) {\\r\\n		user_subscriptions = data.subscriptions;\\r\\n		isInitDone();\\r\\n	};\\r\\n	\\r\\n	var onUserDeclinedSuggestionsFetched = function (data) {	\\r\\n		declined_suggestions = data.suggestions_declined;\\r\\n		isInitDone();\\r\\n	};	\\r\\n	\\r\\n	var onKindredSubscriptionsFetched = function (index, data) {       \\r\\n		kindred_subscriptions[index] = data.subscriptions;\\r\\n		isInitDone();\\r\\n	};	\\r\\n\\r\\n	/**\\r\\n	 * If a kindreds subscription data does not respond then just\\r\\n	 * use an empty array, so that the rhythm can proceed without it.\\r\\n	 * \\r\\n	 * @param index The id of this kindred in the kindred_subscriptions array.\\r\\n	 *\\r\\n	 * return {void}\\r\\n	 */\\r\\n	var onKindredSubscriptionsFetchedError = function (index) {\\r\\n		kindred_subscriptions[index] = [];\\r\\n		isInitDone();\\r\\n	};	\\r\\n	\\r\\n	var onUserSubscriptionsFetchedError = function () {\\r\\n		throw \\"Error whilst fetchning this users kindred subscriptions in suggestion rhtyhm\\";\\r\\n	};	\\r\\n	\\r\\n	var onUserDeclinedSuggestionsFetchedError = function () {\\r\\n		throw \\"Error whilst fetchning this users declined suggestions in suggestion rhtyhm\\";\\r\\n	};	\\r\\n	\\r\\n    var init = function () {        \\r\\n		params = BabblingBrook.Suggestion.getParamaters();\\r\\n        \\r\\n        user = BabblingBrook.Suggestion.getUser();\\r\\n		client_domain = BabblingBrook.Suggestion.getClientDomain();\\r\\n		suggestion_type = BabblingBrook.Suggestion.getSuggestionType();\\r\\n		\\r\\n        var url = user.domain + \\"/\\" + user.username + \\r\\n            \\"/clientdata/getstreamfiltersubscriptions/?client_domain=\\" + client_domain;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n			url, \\r\\n			onUserSubscriptionsFetched,\\r\\n			onUserSubscriptionsFetchedError\\r\\n		);\\r\\n	\\r\\n        url = user.domain + \\"/\\" + user.username + \\r\\n            \\"/clientdata/getdeclinedsuggestions/?client_domain=\\" + client_domain + \\r\\n			\\"&type=\\" + suggestion_type;\\r\\n        BabblingBrook.Suggestion.getMiscData(\\r\\n			url, \\r\\n			onUserDeclinedSuggestionsFetched,\\r\\n			onUserDeclinedSuggestionsFetchedError\\r\\n		); 		\\r\\n		\\r\\n		kindred = BabblingBrook.Suggestion.getKindred();		\\r\\n		var kindred_length = Object.keys(kindred).length;\\r\\n		if (kindred_length < max_kindred_to_process) {\\r\\n			max_kindred_to_process = kindred_length;\\r\\n		}\\r\\n        var i = 0;\\r\\n        for (var full_username in kindred) {\\r\\n            if (i === max_kindred_to_process) {\\r\\n                break;    \\r\\n            }   \\r\\n			var kindred_domain = BabblingBrook.Library.extractDomain(full_username);\\r\\n			var kindred_username = BabblingBrook.Library.extractUsername(full_username);\\r\\n			var url = kindred_domain + \\"/\\" + kindred_username + \\r\\n				\\"/clientdata/getstreamfiltersubscriptions/?client_domain=\\" + client_domain;\\r\\n			BabblingBrook.Suggestion.getMiscData(\\r\\n				url, \\r\\n				onKindredSubscriptionsFetched.bind(null, i),\\r\\n				onKindredSubscriptionsFetchedError.bind(null, i)\\r\\n			);\\r\\n			i++; \\r\\n		}\\r\\n		isInitDone();\\r\\n    };\\r\\n	\\r\\n	var createScoreFilter = function (filter) {\\r\\n		var filter_name = filter.domain + \\"/\\" + filter.username + \\"/\\" + filter.name;     \\r\\n		if (typeof filter_scores[filter_name] === \\"undefined\\") {\\r\\n			filter_scores[filter_name] = filter;\\r\\n			filter_scores[filter_name].score = 0;\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var isInDomain = function (domain) {    \\r\\n		if (typeof params.domain !== \\"string\\") {\\r\\n			return true;\\r\\n		} else if (params.domain === domain){\\r\\n			return true;\\r\\n		} else {\\r\\n			return false;\\r\\n		}\\r\\n	};\\r\\n	\\r\\nvar isInUsername = function (username) {\\r\\n		if (typeof params.username !== \\"string\\") {\\r\\n			return true;\\r\\n		} else if (params.username === username){\\r\\n			return true;\\r\\n		} else {\\r\\n			return false;\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var isInName = function (name) {\\r\\n		if (typeof params.name !== \\"string\\") {\\r\\n			return true;\\r\\n		} else if (params.name === name){\\r\\n			return true;\\r\\n		} else {\\r\\n			return false;\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var isSubValid = function (sub) {         \\r\\n		if (isInDomain(sub.domain) === true \\r\\n			&& isInUsername(sub.username) === true \\r\\n			&& isInName(sub.name) === true\\r\\n		) {\\r\\n			return true;\\r\\n		}\\r\\n		return false;\\r\\n	};\\r\\n	\\r\\n	var calculateScores = function () {\\r\\n		for (var i = 0; i < max_kindred_to_process; i++) {              \\r\\n			for (var j in kindred_subscriptions[i]) {                \\r\\n				var sub = kindred_subscriptions[i][j];   \\r\\n				if (isSubValid(sub) === true) {              \\r\\n 					var filters = sub.filters;\\r\\n					jQuery.each(filters, function (k, filter) {\\r\\n						createScoreFilter(filters[k]);\\r\\n						var kindred_divider = kindred_points_divider * (i + 1);\\r\\n						var kindred_score = max_kindred_points / kindred_divider;\\r\\n						var position_divider = subscription_points_divider * (k + 1);\\r\\n						var position_score = max_subscription_points / subscription_points_divider;\\r\\n						if (k === 0) {\\r\\n							position_score += bonus_score_to_first;\\r\\n						}\\r\\n						var filter_name = filters[k].domain + \\"/\\" + filters[k].username + \\"/\\" + filters[k].name;\\r\\n						filter_scores[filter_name].score += Math.round(position_score + kindred_score);  \\r\\n					});\\r\\n				}\\r\\n			}\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var sortScores = function () {\\r\\nconsole.debug(filter_scores);	\\r\\n		var final_scores = [];\\r\\n		for (var i in filter_scores) {\\r\\n			if (filter_scores[i].score > 0) {\\r\\n				final_scores.push(filter_scores[i]);\\r\\n			}\\r\\n		}\\r\\n		final_scores.sort(function (a, b) {\\r\\n			return b.score - a.score;\\r\\n		});\\r\\n		for (var j=0; j<final_scores.length; j++) {\\r\\n			suggestions.push({\\r\\n                \\"domain\\" : final_scores[j].domain,                \\r\\n                \\"username\\" : final_scores[j].username,\\r\\n                \\"name\\" : final_scores[j].name,\\r\\n                \\"version\\" : final_scores[j].version \\r\\n			});\\r\\n		}\\r\\n	};\\r\\n	\\r\\n	var removeSubscribedStreamFilters = function () {     \\r\\n		// Don\\"t do this for the test one.\\r\\n		\\r\\n	};	\\r\\n	\\r\\n	var removeDeclinedSuggestions = function () {            \\r\\n		//r (var i = 0; i < declined_suggestions.length; i++) {  \\r\\n      			//if (isSubValid(declined_suggestions[i]) === true) {    \\r\\n                  				//var filters = declined_suggestions[i].filters;\\r\\n                var filters = declined_suggestions;         \\r\\n				for (var k = 0; k < filters.length; k++) {\\r\\n                    \\r\\n					for (var j in filter_scores) {\\r\\n						var filter = filters[k];\\r\\n						var suggestion = filter_scores[j];\\r\\n						if (filter.domain === suggestion.domain\\r\\n							&& filter.username === suggestion.username\\r\\n							&& filter.name === suggestion.name\\r\\n						) {\\r\\n							suggestion.score = 0;\\r\\n						}\\r\\n					}\\r\\n				}\\r\\n			//}\\r\\n		//\\r\\n	};		\\r\\n	\\r\\n    var main = function () {\\r\\n		calculateScores();\\r\\nconsole.debug(suggestions);		\\r\\n		removeSubscribedStreamFilters();\\r\\n		removeDeclinedSuggestions();\\r\\n		sortScores();\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}\\r\\n",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "111",\r\n        "string": false\r\n    }\r\n]', 100),
	(430, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 09:10:41",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a second test filter suggestion. This is used in other test suggestion rhythms, but does nothing itself.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "\\/\\/.\\r\\nfunction () {\\r\\n    var main = function () {\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated();\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "\\/\\/ .\\r\\nfunction () {\\r\\n    var main = function () {\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated();\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "112",\r\n        "string": false\r\n    }\r\n]', 100),
	(431, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(432, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(433, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream suggestion rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(434, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-14 14:10:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a stream suggestion rhythm",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test suggested stream\\",\\r\\n                \\"version\\":\\"latest\\/latest\\/latest\\"                \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated();\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test suggested stream\\",\\r\\n                \\"version\\":\\"latest\\/latest\\/latest\\"                \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated();\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "113",\r\n        "string": false\r\n    }\r\n]', 100),
	(435, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(436, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test suggested stream 2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(437, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(438, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "An stream used by the test suggestion Rhythm.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "69",\r\n        "string": false\r\n    }\r\n]', 100),
	(439, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(440, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "51",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(441, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(443, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(444, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(445, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+suggestion+filter/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(446, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_filter_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(447, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_user_rate",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(448, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_moderation_ring_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(449, 'user_profile', '[\r\n    {\r\n        "name": "user_profile_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "real_name",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "about",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(450, 'ring', '[\r\n    {\r\n        "name": "ring_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "membership_type",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "membership_rhythm_id",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "membership_rhythm_version_type",\r\n        "value": "NULL",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "membership_super_ring_user_id",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "admin_type",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "admin_super_ring_user_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_rhythm_id",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_rhythm_version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(451, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test moderation suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(452, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 09:10:40",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a test moderation suggestion",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n        var suggestions = [\\r\\n            {\\r\\n                \\"username\\":\\"test suggested ring\\",\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\"\\r\\n            }, {\\r\\n                \\"username\\":\\"test ring\\",\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\"\\r\\n            }\\r\\n        ]\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n        var suggestions = [\\r\\n            {\\r\\n                \\"username\\":\\"test suggested ring\\",\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\"\\r\\n            }, {\\r\\n                \\"username\\":\\"test ring\\",\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\"\\r\\n            }\\r\\n        ]\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "114",\r\n        "string": false\r\n    }\r\n]', 100),
	(453, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(454, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(455, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 3",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(456, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 4",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(457, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 5",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(458, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 6",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(459, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(460, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(461, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(462, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(463, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(464, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A 2nd test stream",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "70",\r\n        "string": false\r\n    }\r\n]', 100),
	(465, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A 3rd test stream",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "71",\r\n        "string": false\r\n    }\r\n]', 100),
	(466, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A 4th test stream",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "72",\r\n        "string": false\r\n    }\r\n]', 100),
	(467, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A 5th test stream. Has an additional text field to test that deleted fields show correctly for orphans.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "73",\r\n        "string": false\r\n    }\r\n]', 100),
	(468, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A 6th test stream - with restricted comments",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "74",\r\n        "string": false\r\n    }\r\n]', 100),
	(469, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(470, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(471, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(472, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(473, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(474, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(475, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(476, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(477, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(478, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "56",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(479, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(480, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(481, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "59",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(482, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "60",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(483, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "61",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(484, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "62",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(485, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(486, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(487, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-05 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(488, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(489, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test3/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "cobaltcascade.localhost/test3",\r\n        "string": true\r\n    }\r\n]', 100),
	(490, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test user stream 2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "52",\r\n        "string": false\r\n    }\r\n]', 100),
	(491, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test user stream 3",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "52",\r\n        "string": false\r\n    }\r\n]', 100),
	(492, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test user stream 4",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "52",\r\n        "string": false\r\n    }\r\n]', 100),
	(493, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test user stream 5",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "52",\r\n        "string": false\r\n    }\r\n]', 100),
	(494, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test user stream 6",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "52",\r\n        "string": false\r\n    }\r\n]', 100),
	(495, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(496, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(497, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(498, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(499, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(500, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-08 10:00:39",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream to test takes against users 2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "75",\r\n        "string": false\r\n    }\r\n]', 100),
	(501, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(502, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(503, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(504, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(505, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(506, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-08 10:00:39",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream to test takes against users 3",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "76",\r\n        "string": false\r\n    }\r\n]', 100),
	(507, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-08 10:00:39",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream to test takes against users 4",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "77",\r\n        "string": false\r\n    }\r\n]', 100),
	(508, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-08 10:00:39",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream to test takes against users 5",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "78",\r\n        "string": false\r\n    }\r\n]', 100),
	(509, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-08 10:00:39",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream to test takes against users 6",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "79",\r\n        "string": false\r\n    }\r\n]', 100),
	(510, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(511, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "64",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(512, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "65",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(513, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "66",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(514, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "67",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(515, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "68",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(516, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "69",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(517, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "70",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(518, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "71",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(519, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "72",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(521, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "51",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "51",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(522, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(523, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(524, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(525, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(526, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "51",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "51",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test3/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "cobaltcascade.localhost/test3",\r\n        "string": true\r\n    }\r\n]', 100),
	(527, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test3/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "cobaltcascade.localhost/test3",\r\n        "string": true\r\n    }\r\n]', 100),
	(528, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test3/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "cobaltcascade.localhost/test3",\r\n        "string": true\r\n    }\r\n]', 100),
	(529, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test3/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "cobaltcascade.localhost/test3",\r\n        "string": true\r\n    }\r\n]', 100),
	(530, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-06 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "51",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "-1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(531, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-07 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(532, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-08 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(533, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-09 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(534, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-10 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(535, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "51",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(536, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(537, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(538, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(539, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(540, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test3/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "cobaltcascade.localhost/test3",\r\n        "string": true\r\n    }\r\n]', 100),
	(542, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-08 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(543, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "5",\r\n        "string": false\r\n    }\r\n]', 100),
	(545, 'take_kindred', '[\r\n    {\r\n        "name": "take_kindred_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_processed",\r\n        "value": "2011-12-11 09:11:28",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "scored_user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "score",\r\n        "value": "7",\r\n        "string": false\r\n    }\r\n]', 100),
	(546, 'take_kindred', '[\r\n    {\r\n        "name": "take_kindred_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_processed",\r\n        "value": "2011-12-11 09:11:28",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "scored_user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "score",\r\n        "value": "3",\r\n        "string": false\r\n    }\r\n]', 100),
	(547, 'user', '[\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "username",\r\n        "value": "test suggested ring",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "d7d6732041f167d49a5f3ec472b72a197e525d9f5616bb3d109524446140cdca",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "salt",\r\n        "value": "4eb8fd41747e15.46954254",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "email",\r\n        "value": "test@saltstore.co.uk",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "role",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "is_ring",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "test_user",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "meta_post_id",\r\n        "value": "92",\r\n        "string": false\r\n    }\r\n]', 100),
	(548, 'user', '[\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "username",\r\n        "value": "test5",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "password",\r\n        "value": "6f0afcac4db28b4868c6801b23edc15617830f6908b73c486238b98afee6b9ef",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "salt",\r\n        "value": "4eb7dbb25e6740.57910008",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "email",\r\n        "value": "test@saltstore.co.uk",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "role",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "is_ring",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "test_user",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "meta_post_id",\r\n        "value": "94",\r\n        "string": false\r\n    }\r\n]', 100),
	(549, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(552, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(553, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(554, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/test+stream+suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]\r\n', 100),
	(555, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_filter_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(556, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_user_rate",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(557, 'user_config', '[\r\n    {\r\n        "name": "user_config_id",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "stream_rhythm_moderation_ring_suggestion_url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(558, 'user_profile', '[\r\n    {\r\n        "name": "user_profile_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "real_name",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "about",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(560, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-10 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(561, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-09 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(562, 'rhythm', '\r\n[\r\n    {\r\n        "sql": "DELETE rhythm FROM rhythm INNER JOIN user ON rhythm.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(563, 'post', '\r\n[\r\n    {\r\n        "sql": "DELETE post FROM post INNER JOIN  stream_extra ON post.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(564, 'ring', '\r\n[\r\n    {\r\n        "sql": "DELETE ring FROM ring  INNER JOIN user ON ring.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(565, 'ring_user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE ring_user_take FROM ring_user_take  INNER JOIN user ON ring_user_take.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(566, 'take', '\r\n[\r\n    {\r\n        "sql": "DELETE take FROM take INNER JOIN user ON take.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(575, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "7",\r\n        "string": false\r\n    }\r\n]', 100),
	(576, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "56",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "56",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:50:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(577, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "56",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:50:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "56",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test comment on a userstream post",\r\n        "string": true\r\n    }\r\n]', 100),
	(578, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-09 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(579, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(580, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "56",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test user post take for user 5 by user 1",\r\n        "string": true\r\n    }\r\n]', 100),
	(582, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(583, 'post_user', '[\r\n    {\r\n        "name": "post_user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    }\r\n]', 100),
	(584, 'post_user', '[\r\n    {\r\n        "name": "post_user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "51",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    }\r\n]', 100),
	(585, 'post_user', '[\r\n    {\r\n        "name": "post_user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "52",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    }\r\n]', 100),
	(586, 'post_user', '[\r\n    {\r\n        "name": "post_user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    }\r\n]', 100),
	(587, 'post_user', '[\r\n    {\r\n        "name": "post_user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    }\r\n]', 100),
	(588, 'post_user', '[\r\n    {\r\n        "name": "post_user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    }\r\n]', 100),
	(589, 'post_user', '[\r\n    {\r\n        "name": "post_user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    }\r\n]', 100),
	(590, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test suggest user",\r\n        "string": true\r\n    }\r\n]', 100),
	(591, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 09:10:40",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a user suggestion Rhythm",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\" : \\"cobaltcascade.localhost\\",\\r\\n                \\"username\\" : \\"test\\"\\r\\n            },\\r\\n            {\\r\\n                \\"domain\\" : \\"cobaltcascade.localhost\\",\\r\\n                \\"username\\" : \\"test2\\"\\r\\n            }            \\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\" : \\"cobaltcascade.localhost\\",\\r\\n                \\"username\\" : \\"test\\"\\r\\n            },\\r\\n            {\\r\\n                \\"domain\\" : \\"cobaltcascade.localhost\\",\\r\\n                \\"username\\" : \\"test2\\"\\r\\n            }            \\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "115",\r\n        "string": false\r\n    }\r\n]', 100),
	(592, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(595, 'user_take', '[\r\n    {\r\n        "name": "user_take_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "take_user_id",\r\n        "value": "5",\r\n        "string": false\r\n    }\r\n]', 100),
	(596, 'user_stream_count', '[\r\n    {\r\n        "name": "user_stream_count_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "total",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(597, 'user_stream_count', '[\r\n    {\r\n        "name": "user_stream_count_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "total",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(598, 'user_stream_count', '[\r\n    {\r\n        "name": "user_stream_count_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "total",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(599, 'user_stream_count', '[\r\n    {\r\n        "name": "user_stream_count_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "total",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(600, 'user_stream_count', '[\r\n    {\r\n        "name": "user_stream_count_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "total",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(601, 'user_stream_count', '[\r\n    {\r\n        "name": "user_stream_count_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "total",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(602, 'user_stream_count', '[\r\n    {\r\n        "name": "user_stream_count_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "total",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(603, 'user_stream_count', '[\r\n    {\r\n        "name": "user_stream_count_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "total",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(606, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A depricated stream for making test posts.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "86",\r\n        "string": false\r\n    }\r\n]', 100),
	(607, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(608, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(609, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "73",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(610, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "74",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(611, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 09:10:50",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a user suggestion Rhythm a second depricated version",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\" : \\"cobaltcascade.localhost\\",\\r\\n                \\"username\\" : \\"test2\\"\\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var main = function () {\\r\\n        suggestions = [\\r\\n            {\\r\\n                \\"domain\\" : \\"cobaltcascade.localhost\\",\\r\\n                \\"username\\" : \\"test2\\"\\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "105",\r\n        "string": false\r\n    }\r\n]', 100),
	(612, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "36",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(613, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test missing sort",\r\n        "string": true\r\n    }\r\n]', 100),
	(614, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-07 09:10:50",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a sort filter that is missing. - the json action in the control returns empty data so that it fails the data test on the client side and an error is passed to the user.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "38",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "106",\r\n        "string": false\r\n    }\r\n]', 100),
	(615, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "38",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "14",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(616, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "28",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "9",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(618, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 09:10:50",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a filter Rhythm that errors with a syntax error when evaled.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.t=%443tdgs43:Df@dsg446\\u00C3\\u201A\\u00C2\\u00A3estvar = \\"init called\\";\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra=0;\\r\\n        var user= post.domain+\\"\\/\\" + post.username;\\r\\n        if(typeof BabblingBrook.FilterKindred[user]!=\\"undefined\\") {\\r\\n            extra=10000000;\\r\\n        }\\r\\n        var score = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(score);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n       "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.t=%443tdgs43:Df@dsg446\\u00C3\\u201A\\u00C2\\u00A3estvar = \\"init called\\";\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra=0;\\r\\n        var user= post.domain+\\"\\/\\" + post.username;\\r\\n        if(typeof BabblingBrook.FilterKindred[user]!=\\"undefined\\") {\\r\\n            extra=10000000;\\r\\n        }\\r\\n        var score = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(score);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "39",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "101",\r\n        "string": false\r\n    }\r\n]', 100),
	(619, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test broken filter",\r\n        "string": true\r\n    }\r\n]', 100),
	(620, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "39",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(621, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(622, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 09:10:50",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a filter Rhythm that errors with a runtime error in the init function.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        someFunctionThatDoesNotExist();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra=0;\\r\\n        var user= post.domain+\\"\\/\\"+ post.username;\\r\\n        if(typeof BabblingBrook.FilterKindred[user]!=\\"undefined\\") {\\r\\n            extra=10000000;\\r\\n        }\\r\\n        var score = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(score);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        someFunctionThatDoesNotExist();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra=0;\\r\\n        var user= post.domain+\\"\\/\\"+ post.username;\\r\\n        if(typeof BabblingBrook.FilterKindred[user]!=\\"undefined\\") {\\r\\n            extra=10000000;\\r\\n        }\\r\\n        var score = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(score);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "40",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "102",\r\n        "string": false\r\n    }\r\n]', 100),
	(623, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "40",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(624, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "11",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(625, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(626, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "41",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(627, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 09:10:50",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a filter Rhythm that errors with a runtime error in the main function.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        \\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra=0;\\r\\n        var user= post.domain+ \\"\\/\\" + post.username;\\r\\n        if(typeof BabblingBrook.FilterKindred[user]!=\\"undefined\\") {\\r\\n            extra=10000000;\\r\\n        }\\r\\n        var score = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(score);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        \\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra=0;\\r\\n        var user= post.domain+ \\"\\/\\" + post.username;\\r\\n        if(typeof BabblingBrook.FilterKindred[user]!=\\"undefined\\") {\\r\\n            extra=10000000;\\r\\n        }\\r\\n        var score = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(score);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "41",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "103",\r\n        "string": false\r\n    }\r\n]', 100),
	(628, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 09:10:50",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "a filter Rhythm that errors with a custom error that is called by the Rhythm.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        error_callback(\\"Test rhythm is generating an error.\\", \\"filter_rhythm_custom\\");\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        someFunctionThatDoesNotExist();var extra = 0;\\r\\n        var user = post.domain + \\"\\/\\" + post.username;\\r\\n        if(typeof BabblingBrook.FilterKindred[user] != \\"undefined\\") {\\r\\n            extra = 10000000;\\r\\n        }\\r\\n        var score = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(score);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        error_callback(\\"Test rhythm is generating an error.\\", \\"filter_rhythm_custom\\");\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        someFunctionThatDoesNotExist();var extra = 0;\\r\\n        var user = post.domain + \\"\\/\\" + post.username;\\r\\n        if(typeof BabblingBrook.FilterKindred[user] != \\"undefined\\") {\\r\\n            extra = 10000000;\\r\\n        }\\r\\n        var score = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(score);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "42",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "104",\r\n        "string": false\r\n    }\r\n]', 100),
	(629, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "42",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "3",\r\n        "string": false\r\n    }\r\n]', 100),
	(630, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 7",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(631, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A 7th test stream",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "43",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "81",\r\n        "string": false\r\n    }\r\n]', 100),
	(632, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(633, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "75",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(634, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "76",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(635, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "14",\r\n        "string": false\r\n    }\r\n]', 100),
	(636, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(637, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "15",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": true\r\n    }\r\n]', 100),
	(638, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "43",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(639, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 8",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(640, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 9",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(641, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A 8th test stream. Used to test that the correct error is raised if getpostsblock fails",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "44",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "82",\r\n        "string": false\r\n    }\r\n]', 100),
	(642, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A 9th test stream. Used to test that the correct error is raised if getusertakes fails",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "83",\r\n        "string": false\r\n    }\r\n]', 100),
	(643, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(644, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(645, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "77",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(646, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "78",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(647, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "80",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(648, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "79",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(649, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "44",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(650, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(651, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "15",\r\n        "string": false\r\n    }\r\n]', 100),
	(652, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "16",\r\n        "string": false\r\n    }\r\n]', 100),
	(653, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(654, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "27",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(655, 'user_stream_subscription_ring', '[\r\n    {\r\n        "name": "user_stream_subscription_ring_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "ring_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(656, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(657, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test4/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "cobaltcascade.localhost/test4",\r\n        "string": true\r\n    }\r\n]', 100),
	(658, 'take', '[\r\n    {\r\n        "name": "take_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n	{\r\n        "name": "date_taken",\r\n        "value": "2011-12-09 15:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value",\r\n        "value": "-1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "tree_block_id",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(659, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 10",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(660, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A 10th test stream. For testing broken stream json data",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "47",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "84",\r\n        "string": false\r\n    }\r\n]', 100),
	(661, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "47",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(662, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "17",\r\n        "string": false\r\n    }\r\n]', 100),
	(663, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(664, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test broken comments",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(665, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "Used for testing that broken tree data results in a client error.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "48",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "85",\r\n        "string": false\r\n    }\r\n]', 100),
	(666, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "48",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "25",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(667, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "81",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(668, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "82",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(670, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "59",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "59",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(671, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "59",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test post to test broken tree comment json",\r\n        "string": true\r\n    }\r\n]', 100),
	(672, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "60",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "60",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "59",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "59",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(673, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "59",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "60",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "test comment to test a broken comment tree - should not display",\r\n        "string": true\r\n    }\r\n]', 100),
	(674, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-14 14:10:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A test ring url",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function(){\\r\\n    alert(\\"test ring rhythm\\");\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function(){\\r\\n    alert(\\"test ring rhythm\\");\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "109",\r\n        "string": false\r\n    }\r\n]', 100),
	(675, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-14 14:10:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A test ring url - version 2. Used to test that versions are correctly populated in version select lists",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function(){\\r\\n    alert(\\"test ring rhythm\\");\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function(){\\r\\n    alert(\\"test ring rhythm\\");\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "8",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "100",\r\n        "string": false\r\n    }\r\n]', 100),
	(676, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "50",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(677, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(678, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(679, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(680, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "20",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(681, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(682, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(683, 'user', '\r\n[\r\n    {\r\n        "sql": "UPDATE user SET test_user = 1 WHERE username like \'test%\'"\r\n    }\r\n]\r\n\r\n', 10),
	(684, 'rhythm_extra', '\r\n[\r\n    {\r\n        "sql": "DELETE rhythm_extra FROM rhythm_extra INNER JOIN rhythm ON rhythm_extra.rhythm_id = rhythm.rhythm_id INNER JOIN user ON rhythm.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 48),
	(685, 'version', '\r\n[\r\n    {\r\n        "sql": "DELETE version FROM version INNER JOIN rhythm_extra ON version.version_id = rhythm_extra.version_id INNER JOIN rhythm ON rhythm_extra.rhythm_id = rhythm.rhythm_id INNER JOIN user ON rhythm.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(686, 'invitation', '\r\n[\r\n    {\r\n        "sql": "DELETE invitation FROM invitation INNER JOIN user ON invitation.from_user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(687, 'invitation', '\r\n[\r\n    {\r\n        "sql": "DELETE invitation FROM invitation INNER JOIN user ON invitation.to_user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(688, 'invitation', '\r\n[\r\n    {\r\n        "sql": "DELETE invitation FROM invitation INNER JOIN ring ON ring.ring_id = invitation.ring_id INNER JOIN user ON ring.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(689, 'post', '\r\n[\r\n    {\r\n        "sql": "DELETE post FROM post INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(691, 'post', '\r\n[\r\n    {\r\n        "sql": "DELETE post FROM post INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN  stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 45),
	(692, 'post_content', '\r\n[\r\n    {\r\n        "sql": "DELETE post_content FROM post_content INNER JOIN post ON post_content.post_id = post.post_id INNER JOIN stream_extra ON post.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(693, 'post', '\r\n[\r\n    {\r\n        "sql": "DELETE post FROM post INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 44),
	(694, 'post', '\r\n[\r\n    {\r\n        "sql": "DELETE post FROM post INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 45),
	(695, 'post', '\r\n[\r\n    {\r\n        "sql": "DELETE post FROM post INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN  stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 44),
	(696, 'post_content', '\r\n[\r\n    {\r\n        "sql": "DELETE post_content FROM post_content INNER JOIN post ON post_content.post_id = post.post_id INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(697, 'post_content', '\r\n[\r\n    {\r\n        "sql": "DELETE post_content FROM post_content INNER JOIN post ON post_content.post_id = post.post_id INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(698, 'post_content', '\r\n[\r\n    {\r\n        "sql": "DELETE post_content FROM post_content INNER JOIN post ON post_content.post_id = post.post_id INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(699, 'post_content', '\r\n[\r\n    {\r\n        "sql": "DELETE post_content FROM post_content INNER JOIN post ON post_content.post_id = post.post_id  INNER JOIN post AS post2 ON post.top_parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(700, 'post_content', '\r\n[\r\n    {\r\n        "sql": "DELETE post_content FROM post_content INNER JOIN post ON post_content.post_id = post.post_id  INNER JOIN post AS post2 ON post.parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(701, 'post_popular', '\r\n[\r\n    {\r\n        "sql": "DELETE post_popular FROM post_popular INNER JOIN post ON post_popular.post_id = post.post_id INNER JOIN stream_extra ON post.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(702, 'post_popular', '\r\n[\r\n    {\r\n        "sql": "DELETE post_popular FROM post_popular INNER JOIN post ON post_popular.post_id = post.post_id INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(703, 'post_popular', '\r\n[\r\n    {\r\n        "sql": "DELETE post_popular FROM post_popular INNER JOIN post ON post_popular.post_id = post.post_id INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(704, 'post_popular', '\r\n[\r\n    {\r\n        "sql": "DELETE post_popular FROM post_popular INNER JOIN post ON post_popular.post_id = post.post_id INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(705, 'post_popular', '\r\n[\r\n    {\r\n        "sql": "DELETE post_popular FROM post_popular INNER JOIN post ON post_popular.post_id = post.post_id  INNER JOIN post AS post2 ON post.top_parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(706, 'post_popular', '\r\n[\r\n    {\r\n        "sql": "DELETE post_popular FROM post_popular INNER JOIN post ON post_popular.post_id = post.post_id  INNER JOIN post AS post2 ON post.parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(713, 'stream_block', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_block FROM stream_block INNER JOIN stream_extra ON stream_extra.stream_extra_id = stream_block.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(714, 'stream_block_tree', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_block_tree FROM stream_block_tree INNER JOIN post ON stream_block_tree.post_id = post.post_id INNER JOIN stream_extra ON post.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(715, 'stream_block_tree', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_block_tree FROM stream_block_tree INNER JOIN post ON stream_block_tree.post_id = post.post_id INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(716, 'stream_block_tree', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_block_tree FROM stream_block_tree INNER JOIN post ON stream_block_tree.post_id = post.post_id INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(717, 'stream_block_tree', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_block_tree FROM stream_block_tree INNER JOIN post ON stream_block_tree.post_id = post.post_id INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(718, 'stream_block_tree', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_block_tree FROM stream_block_tree INNER JOIN post ON stream_block_tree.post_id = post.post_id INNER JOIN post AS post2 ON post.top_parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(719, 'stream_block_tree', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_block_tree FROM stream_block_tree INNER JOIN post ON stream_block_tree.post_id = post.post_id INNER JOIN post AS post2 ON post.parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(720, 'stream_child', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_child FROM stream_child INNER JOIN stream_extra ON stream_child.parent_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(721, 'stream_child', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_child FROM stream_child INNER JOIN stream_extra ON stream_child.child_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(722, 'stream_default_ring', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_default_ring FROM stream_default_ring INNER JOIN stream_extra ON stream_default_ring.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(723, 'stream_field', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_field FROM stream_field INNER JOIN stream_extra ON stream_field.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(724, 'stream_list', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_list FROM stream_list INNER JOIN stream_field ON stream_list.stream_field_id = stream_field.stream_field_id INNER JOIN stream_extra ON stream_field.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(725, 'stream_public', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_public FROM stream_public INNER JOIN stream_extra ON stream_public.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(726, 'stream_public', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_public FROM stream_public INNER JOIN post ON stream_public.post_id = post.post_id INNER JOIN stream_extra ON post.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(727, 'stream_public', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_public FROM stream_public INNER JOIN post ON stream_public.post_id = post.post_id INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(728, 'stream_public', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_public FROM stream_public INNER JOIN post ON stream_public.post_id = post.post_id INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(729, 'stream_public', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_public FROM stream_public INNER JOIN post ON stream_public.post_id = post.post_id INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(730, 'stream_public', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_public FROM stream_public INNER JOIN post ON stream_public.post_id = post.post_id INNER JOIN post AS post2 ON post.top_parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(731, 'stream_public', '\r\n[\r\n    {\r\n        "sql": "DELETE stream_public FROM stream_public INNER JOIN post ON stream_public.post_id = post.post_id INNER JOIN post AS post2 ON post.parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(732, 'ring_take_name', '\r\n[\r\n    {\r\n        "sql": "DELETE ring_take_name  FROM ring_take_name  INNER JOIN ring ON ring.ring_id = ring_take_name.ring_id INNER JOIN user ON ring.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 48),
	(733, 'ring_user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE ring_user_take FROM ring_user_take INNER JOIN ring_take_name ON ring_user_take.ring_take_name_id = ring_take_name.ring_take_name_id INNER JOIN ring ON ring_take_name.ring_id = ring.ring_id  INNER JOIN user ON ring.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(735, 'take', '\r\n[\r\n    {\r\n        "sql": "DELETE take FROM take INNER JOIN stream_extra ON take.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(736, 'take', '\r\n[\r\n    {\r\n        "sql": "DELETE take FROM take INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(737, 'take', '\r\n[\r\n    {\r\n        "sql": "DELETE take FROM take INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.top_parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(738, 'take', '\r\n[\r\n    {\r\n        "sql": "DELETE take FROM take INNER JOIN post ON take.post_id = post.post_id  INNER JOIN stream_extra ON post.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(739, 'take', '\r\n[\r\n    {\r\n        "sql": "DELETE take FROM take INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(740, 'take', '\r\n[\r\n    {\r\n        "sql": "DELETE take FROM take INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(741, 'take', '\r\n[\r\n    {\r\n        "sql": "DELETE take FROM take INNER JOIN post ON take.post_id = post.post_id  INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(742, 'take_kindred', '\r\n[\r\n    {\r\n        "sql": "DELETE take_kindred FROM take_kindred INNER JOIN take ON take_kindred.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(743, 'take_kindred', '\r\n[\r\n    {\r\n        "sql": "DELETE take_kindred FROM take_kindred INNER JOIN take ON take_kindred.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(744, 'take_kindred', '\r\n[\r\n    {\r\n        "sql": "DELETE take_kindred FROM take_kindred INNER JOIN take ON take_kindred.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.top_parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(745, 'take_kindred', '\r\n[\r\n    {\r\n        "sql": "DELETE take_kindred FROM take_kindred INNER JOIN take ON take_kindred.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(746, 'take_kindred', '\r\n[\r\n    {\r\n        "sql": "DELETE take_kindred FROM take_kindred INNER JOIN take ON take_kindred.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(747, 'take_kindred', '\r\n[\r\n    {\r\n        "sql": "DELETE take_kindred FROM take_kindred INNER JOIN take ON take_kindred.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN stream_extra ON post.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(748, 'take_kindred', '\r\n[\r\n    {\r\n        "sql": "DELETE take_kindred FROM take_kindred INNER JOIN user ON take_kindred.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(750, 'user', '\r\n[\r\n    {\r\n        "sql": "DELETE FROM user WHERE test_user = 1"\r\n    }\r\n]\r\n\r\n', 50),
	(751, 'user_rhythm', '\r\n[\r\n    {\r\n        "sql": "DELETE user_rhythm FROM user_rhythm INNER JOIN user ON user_rhythm.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(752, 'user_config', '\r\n[\r\n    {\r\n        "sql": "DELETE user_config FROM user_config INNER JOIN user ON user_config.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(753, 'user_feature_usage', '\r\n[\r\n    {\r\n        "sql": "DELETE user_feature_usage FROM user_feature_usage INNER JOIN user ON user_feature_usage.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(754, 'user_stream_subscription', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_subscription FROM user_stream_subscription INNER JOIN user ON user_stream_subscription.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(755, 'user_stream_subscription', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_subscription FROM user_stream_subscription INNER JOIN stream_extra ON user_stream_subscription.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream_extra.stream_id = stream.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(756, 'user_stream_subscription_filter', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_subscription_filter FROM user_stream_subscription_filter INNER JOIN user_stream_subscription ON user_stream_subscription_filter.user_stream_subscription_id = user_stream_subscription.user_stream_subscription_id INNER JOIN user ON user_stream_subscription.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(757, 'user_stream_subscription_filter', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_subscription_filter FROM user_stream_subscription_filter INNER JOIN user_stream_subscription ON user_stream_subscription_filter.user_stream_subscription_id = user_stream_subscription.user_stream_subscription_id INNER JOIN stream_extra ON user_stream_subscription.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream_extra.stream_id = stream.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(758, 'user_stream_subscription_filter', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_subscription_filter FROM user_stream_subscription_filter INNER JOIN rhythm_extra ON rhythm_extra.rhythm_extra_id = user_stream_subscription_filter.rhythm_extra_id INNER JOIN rhythm ON rhythm_extra.rhythm_id = rhythm.rhythm_id INNER JOIN user ON rhythm.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(759, 'user_stream_count', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_count FROM user_stream_count INNER JOIN stream_extra ON user_stream_count.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream_extra.stream_id = stream.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(760, 'user_stream_count', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_count FROM user_stream_count INNER JOIN user ON user_stream_count.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(761, 'user_profile', '\r\n[\r\n    {\r\n        "sql": "DELETE user_profile FROM user_profile INNER JOIN user ON user_profile.user_id= user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 49),
	(762, 'user_ring', '\r\n[\r\n    {\r\n        "sql": "DELETE user_ring FROM user_ring INNER JOIN user ON user_ring.user_id= user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(763, 'user_ring', '\r\n[\r\n    {\r\n        "sql": "DELETE user_ring FROM user_ring INNER JOIN ring ON ring.ring_id = user_ring.ring_id INNER JOIN user ON ring.user_id= user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(764, 'user_ring_password', '\r\n[\r\n    {\r\n        "sql": "DELETE user_ring_password FROM user_ring_password INNER JOIN user ON user_ring_password.user_id= user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(765, 'user_ring_password', '\r\n[\r\n    {\r\n        "sql": "DELETE user_ring_password FROM user_ring_password INNER JOIN user ON user_ring_password.ring_user_id= user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(766, 'user_stream_subscription_ring', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_subscription_ring FROM user_stream_subscription_ring INNER JOIN user_stream_subscription ON user_stream_subscription_ring.user_stream_subscription_id = user_stream_subscription.user_stream_subscription_id INNER JOIN user ON user_stream_subscription.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(767, 'user_stream_subscription_ring', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_subscription_ring FROM user_stream_subscription_ring INNER JOIN user_stream_subscription ON user_stream_subscription_ring.user_stream_subscription_id = user_stream_subscription.user_stream_subscription_id INNER JOIN stream_extra ON user_stream_subscription.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream_extra.stream_id = stream.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(768, 'user_stream_subscription_ring', '\r\n[\r\n    {\r\n        "sql": "DELETE user_stream_subscription_ring FROM user_stream_subscription_ring INNER JOIN ring ON user_stream_subscription_ring.ring_id = ring.ring_id INNER JOIN user ON ring.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(770, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN user ON user_take.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(771, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN stream_extra ON user_take.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream_extra.stream_id = stream.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(772, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN take ON user_take.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(773, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN take ON user_take.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(774, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN take ON user_take.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.top_parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(775, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN take ON user_take.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(776, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN take ON user_take.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN post AS  post2 ON post.parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(777, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN take ON user_take.take_id = take.take_id INNER JOIN post ON take.post_id = post.post_id  INNER JOIN stream_extra ON post.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(779, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN user ON user_take.take_user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(780, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN post ON user_take.post_id = post.post_id INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(781, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN post ON user_take.post_id = post.post_id INNER JOIN stream_extra ON post.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(782, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN post ON user_take.post_id = post.post_id INNER JOIN post AS post2 ON post.parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(783, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN post ON user_take.post_id = post.post_id INNER JOIN post AS post2 ON post.top_parent = post2.post_id INNER JOIN stream_extra ON post2.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(784, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN post ON user_take.post_id = post.post_id INNER JOIN post AS post2 ON post.top_parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(785, 'user_take', '\r\n[\r\n    {\r\n        "sql": "DELETE user_take FROM user_take INNER JOIN post ON user_take.post_id = post.post_id INNER JOIN post AS post2 ON post.parent = post2.post_id  INNER JOIN user ON post2.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(786, 'version', '\r\n[\r\n    {\r\n        "sql": "DELETE version FROM version INNER JOIN stream_extra ON version.version_id = stream_extra.version_id INNER JOIN stream ON stream_extra.stream_id = stream.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(787, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "61",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "61",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(788, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "62",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "62",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(789, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(790, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "64",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "64",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(791, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "65",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "65",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(792, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "66",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "66",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(793, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "67",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "67",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(794, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "68",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "68",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(795, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "69",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "69",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(796, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "70",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "70",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(797, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "71",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "71",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(798, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "72",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "72",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(799, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "73",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "73",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(800, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "74",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "74",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(801, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "75",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "75",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(802, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "76",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "76",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(803, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "77",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "77",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(804, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "78",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "78",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(805, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "79",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "79",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(806, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "80",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "80",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(807, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "81",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "81",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(808, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "82",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "82",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(809, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "83",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "83",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(810, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "84",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "84",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(811, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "85",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "85",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(812, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "86",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "86",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(813, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "61",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "61",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(814, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "62",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "62",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test user stream stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(815, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test comments stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(816, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "64",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "64",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test suggested stream stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(817, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "65",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "65",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream with sub value Rhythm stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(818, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "66",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "66",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test everything stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(819, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "69",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "69",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test suggested stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(820, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "70",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "70",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream 2 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(821, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "71",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "71",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream 3 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(822, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "72",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "72",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test 4 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(823, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "73",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "73",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test 5 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(824, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "74",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "74",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test 6 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(825, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "75",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "75",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test user stream 2 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(826, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "76",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "76",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test user stream 3 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(827, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "77",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "77",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test user stream 4 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(828, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "78",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "78",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test user stream 5 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(829, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "67",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "67",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test oscillating 1 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(830, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "68",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "68",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test oscillating 2 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(831, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "79",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "79",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test user stream 6 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(832, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "80",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "80",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test link in title stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(833, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "81",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "81",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream 7 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(834, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "82",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "82",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream 8 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(835, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "83",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "83",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream 9 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(836, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "84",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "84",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream 10 stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(837, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "85",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "85",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test broken comments stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(838, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "86",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "86",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(839, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "87",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "61",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(840, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "88",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "62",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20use%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test user stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(841, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "89",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20comments/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test comments/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(842, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "90",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "64",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20suggested%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test suggested stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(843, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "91",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "65",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%20with%20sub%20value%20rhythm/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream with sub value rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(844, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "92",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "66",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20everything%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test everything stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(845, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "93",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "67",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20oscillating%201/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test oscillating 1/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(846, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "94",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "68",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20oscillating%202/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test oscillating 2/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(847, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "95",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "69",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20suggested%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test suggested stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(848, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "96",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "70",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%202/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream 2/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(849, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "97",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "71",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%203/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream 3/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(850, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "98",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "72",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%204/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream 4/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(851, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "99",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "73",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%205/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream 5/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(852, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "74",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%206/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream 6/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(853, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "101",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "75",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%202/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test user stream 2/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(854, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "102",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "76",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%203/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test user stream 3/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(855, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "77",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%204/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test user stream 4/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(856, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "104",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "78",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%205/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test user stream 5/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(857, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "105",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "79",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20user%20stream%206/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test user stream 6/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(858, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "106",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "80",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20link%20in%20title/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test link in title/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(859, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "107",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "81",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%207/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream 7/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(860, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "108",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "82",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%208/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream 8/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(861, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "109",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "83",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%209/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream 9/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(862, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "110",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "84",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%2010/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream 10/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(863, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "111",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "85",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20 broken%20comments/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test broken comments/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(864, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "112",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "86",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream/0/0/1",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test stream/0/0/1",\r\n        "string": true\r\n    }\r\n]', 100),
	(865, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "113",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "61",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(866, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "114",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "62",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20user%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test user stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(867, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "115",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20comments/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test comments/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(868, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "116",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "64",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20suggested%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test suggested stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(869, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "117",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "65",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%20with%20sub%20value%20rhythm/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream with sub value rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(870, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "118",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "66",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20everything%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test everything stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(871, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "119",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "67",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20oscillating%201/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test oscillating 1/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(872, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "120",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "68",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20oscillating%202/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test oscillating 2/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(873, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "122",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "70",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%202/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream 2/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(874, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "123",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "71",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%203/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream 3/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(875, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "124",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "72",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%204/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream 4/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(876, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "126",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "74",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%206/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream 6/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(877, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "129",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "77",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20user%20stream%204/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test user stream 4/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(878, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "130",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "78",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20use%20stream%205/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test user stream 5/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(879, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "121",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "69",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20suggested%20stream/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test suggested stream/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(880, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "125",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "73",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%205/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream 5/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(881, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "127",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "75",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20user%20stream%202/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test user stream 2/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(882, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "128",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "76",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20user%20stream%203/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test user stream 3/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(883, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "131",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "79",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20user%20stream%206/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test user stream 6/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(884, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "132",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "80",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20link%20in%20title/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test link in title/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(885, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "133",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "81",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%207/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream 7/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(886, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "134",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "82",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%208/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream 8/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(887, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "135",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "83",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%209/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream 9/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(888, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "136",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "84",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%2010/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream 10/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(889, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "137",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "85",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20broken%20comments/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test broken comments/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(890, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "138",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "86",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream/0/0/1",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test stream/0/0/1",\r\n        "string": true\r\n    }\r\n]', 100),
	(891, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "139",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "61",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "An stream for making test posts.",\r\n        "string": true\r\n    }\r\n]', 100),
	(892, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "140",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "62",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A stream to test takes against users",\r\n        "string": true\r\n    }\r\n]', 100),
	(893, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "141",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A standard comment",\r\n        "string": true\r\n    }\r\n]', 100),
	(894, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "143",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "65",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A stream that allows for testing of posts with sub values that require an Rhythm check.",\r\n        "string": true\r\n    }\r\n]', 100),
	(895, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "144",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "66",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A test stream containing all types of field and value",\r\n        "string": true\r\n    }\r\n]', 100),
	(896, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "145",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "67",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "An stream for making oscillating comments",\r\n        "string": true\r\n    }\r\n]', 100),
	(897, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "146",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "68",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Second stream for making oscillating comments",\r\n        "string": true\r\n    }\r\n]', 100),
	(898, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "147",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "69",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "An stream used by the test suggestion Rhythm.",\r\n        "string": true\r\n    }\r\n]', 100),
	(899, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "148",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "70",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A 2nd test stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(900, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "149",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "71",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A 3rd test stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(901, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "150",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "72",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A 4th test stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(902, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "151",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "73",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A 5th test stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(903, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "152",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "74",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A 6th test stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(904, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "153",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "75",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A stream to test takes against users 2",\r\n        "string": true\r\n    }\r\n]', 100),
	(905, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "154",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "76",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A stream to test takes against users 3",\r\n        "string": true\r\n    }\r\n]', 100),
	(906, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "155",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "77",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A stream to test takes against users 4",\r\n        "string": true\r\n    }\r\n]', 100),
	(907, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "156",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "78",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A stream to test takes against users 5",\r\n        "string": true\r\n    }\r\n]', 100),
	(908, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "157",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "79",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A stream to test takes against users 6",\r\n        "string": true\r\n    }\r\n]', 100),
	(909, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "158",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "80",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A stream with a link for the main field and also a secondary field to test opening of the post field.",\r\n        "string": true\r\n    }\r\n]', 100),
	(910, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "159",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "81",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A 7th test stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(911, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "160",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "82",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A 8th test stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(912, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "161",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "83",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A 9th test stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(913, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "162",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "84",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A 10th test stream. For testing broken stream json data",\r\n        "string": true\r\n    }\r\n]', 100),
	(914, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "163",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "85",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Used for testing that broken tree data results in a client error.",\r\n        "string": true\r\n    }\r\n]', 100),
	(915, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "164",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "86",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A depricated stream for making test posts.",\r\n        "string": true\r\n    }\r\n]', 100),
	(916, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "142",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "64",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "A stream to suggest when testing suggested stream Rhythms.",\r\n        "string": true\r\n    }\r\n]', 100),
	(917, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "92",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "92",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(918, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "277",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "92",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about ring test suggested ring@cobaltcascade.localhost",\r\n        "string": true\r\n    }\r\n]', 100),
	(919, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "278",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "92",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test%20suggested%20ring/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test suggested ring/profile",\r\n        "string": true\r\n    }\r\n]', 100),
	(920, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "93",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "93",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10004",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(921, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "279",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "93",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about ring test ring@cobaltcascade.localhost",\r\n        "string": true\r\n    }\r\n]', 100),
	(922, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "280",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "93",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test%20ring/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test ring/profile",\r\n        "string": true\r\n    }\r\n]', 100),
	(923, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "94",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "94",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10004",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(924, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "281",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "94",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about user test5@cobaltcascade.localhost",\r\n        "string": true\r\n    }\r\n]', 100),
	(925, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "282",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "94",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test5/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test5/profile",\r\n        "string": true\r\n    }\r\n]', 100),
	(926, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "95",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "95",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10004",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(927, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "283",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "95",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about user test4@cobaltcascade.localhost",\r\n        "string": true\r\n    }\r\n]', 100),
	(928, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "284",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "95",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test4/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test4/profile",\r\n        "string": true\r\n    }\r\n]', 100),
	(929, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "96",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "96",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10004",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(930, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "285",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "96",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about user test3@cobaltcascade.localhost",\r\n        "string": true\r\n    }\r\n]', 100),
	(931, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "286",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "96",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test3/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test3/profile",\r\n        "string": true\r\n    }\r\n]', 100),
	(932, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "97",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "97",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10004",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(933, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "287",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "97",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about user test2@cobaltcascade.localhost",\r\n        "string": true\r\n    }\r\n]', 100),
	(934, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "288",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "97",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test2/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test2/profile",\r\n        "string": true\r\n    }\r\n]', 100),
	(935, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "98",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "98",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10004",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(936, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "289",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "98",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about user test@cobaltcascade.localhost",\r\n        "string": true\r\n    }\r\n]', 100),
	(937, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "290",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "98",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/profile",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/profile",\r\n        "string": true\r\n    }\r\n]', 100),
	(941, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(942, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "293",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test ring",\r\n        "string": true\r\n    }\r\n]', 100),
	(943, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "294",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20ring/0/0/1",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test ring/0/0/1",\r\n        "string": true\r\n    }\r\n]', 100),
	(944, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "295",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "A test ring url - version 2. Used to test that versions are correctly populated in version select lists",\r\n        "string": true\r\n    }\r\n]', 100),
	(945, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "101",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "101",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(946, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "296",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "101",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test broken filter",\r\n        "string": true\r\n    }\r\n]', 100),
	(947, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "297",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "101",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20broken%20filter/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test broken filter/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(948, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "298",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "101",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a filter Rhythm that errors with a syntax error when evaled.",\r\n        "string": true\r\n    }\r\n]', 100),
	(949, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "102",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "102",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(950, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "299",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "102",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test broken filter",\r\n        "string": true\r\n    }\r\n]', 100),
	(951, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "300",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "102",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20broken%20filter/0/0/1",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test broken filter/0/0/1",\r\n        "string": true\r\n    }\r\n]', 100),
	(952, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "301",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "102",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a filter Rhythm that errors with a runtime error in the init function.",\r\n        "string": true\r\n    }\r\n]', 100),
	(953, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(954, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "302",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test broken filter",\r\n        "string": true\r\n    }\r\n]', 100),
	(955, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "303",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20broken%20filter/0/0/2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test broken filter/0/0/2",\r\n        "string": true\r\n    }\r\n]', 100),
	(956, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "304",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a filter Rhythm that errors with a runtime error in the main function.",\r\n        "string": true\r\n    }\r\n]', 100),
	(957, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "104",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "104",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(958, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "305",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "104",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test broken filter",\r\n        "string": true\r\n    }\r\n]', 100),
	(959, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "306",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "104",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20broken%20filter/0/0/3",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test broken filter/0/0/3",\r\n        "string": true\r\n    }\r\n]', 100),
	(960, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "307",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "104",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a filter Rhythm that errors with a custom error that is called by the Rhythm.",\r\n        "string": true\r\n    }\r\n]', 100),
	(961, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "105",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "105",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(962, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "308",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "105",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test suggest user",\r\n        "string": true\r\n    }\r\n]', 100),
	(963, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "309",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "105",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20suggest%20user/0/0/1",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test suggest user/0/0/1",\r\n        "string": true\r\n    }\r\n]', 100),
	(964, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "310",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "105",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a user suggestion Rhythm a second depricated version",\r\n        "string": true\r\n    }\r\n]', 100),
	(965, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "106",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "106",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(966, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "311",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "106",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test missing sort",\r\n        "string": true\r\n    }\r\n]', 100),
	(967, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "312",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "106",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20missing%20sort/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test missing sort/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(968, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "313",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "106",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a sort filter that is missing. - the json action in the control returns empty data so that it fails the data test on the client side and an error is passed to the user.",\r\n        "string": true\r\n    }\r\n]', 100),
	(969, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "107",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "107",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(970, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "314",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "107",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test kindred rhythm1",\r\n        "string": true\r\n    }\r\n]', 100),
	(971, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "315",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "107",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20kindred%20rhythm1/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test kindred rhythm1/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(972, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "316",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "107",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "The first test kindred rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(973, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "108",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "108",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(974, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "317",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "108",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test kindred rhythm2",\r\n        "string": true\r\n    }\r\n]', 100),
	(975, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "318",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "108",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20kindred%20rhythm2/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test kindred rhythm2/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(976, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "319",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "108",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "A second test kindred Rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(977, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "109",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "109",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(978, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "320",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "109",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test ring",\r\n        "string": true\r\n    }\r\n]', 100),
	(979, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "321",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "109",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20ring/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test ring/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(980, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "322",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "109",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "A test ring url",\r\n        "string": true\r\n    }\r\n]', 100),
	(981, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "110",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "110",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(982, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "323",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "110",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test stream filter suggestion rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(983, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "324",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "110",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20stream%20filter%20suggestion%20rhythm/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test stream filter suggestion rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(984, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "325",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "110",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a stream filter suggestion rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(985, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "111",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "111",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(986, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "326",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "111",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test filter suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(987, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "327",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "111",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20filter%20suggestion/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test filter suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(988, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "328",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "111",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a test filter suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(989, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "112",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "112",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(990, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "329",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "112",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test a second filter suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(991, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "330",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "112",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20a%20second%20filter%20suggestion/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test a second filter suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(992, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "331",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "112",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a second test filter suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(993, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "113",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "113",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(994, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "332",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "113",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test stream suggestion rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(995, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "333",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "113",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20stream%20suggestion%20rhythm/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test stream suggestion rhythm/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(996, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "334",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "113",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a stream suggestion rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(997, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "114",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "114",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(998, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "335",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "114",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test moderation suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(999, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "336",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "114",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20moderation%20suggestion/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test moderation suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1000, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "337",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "114",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a test moderation suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(1001, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "115",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "115",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1002, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "338",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "115",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test suggest user",\r\n        "string": true\r\n    }\r\n]', 100),
	(1003, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "339",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "115",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20suggest%20user/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test suggest user/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1004, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "340",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "115",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "a user suggestion Rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(1005, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "116",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "116",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1006, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "341",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "116",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test datesort",\r\n        "string": true\r\n    }\r\n]', 100),
	(1007, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "342",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "116",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20datesort/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test datesort/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1008, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "343",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "116",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Sort items by date",\r\n        "string": true\r\n    }\r\n]', 100),
	(1009, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "117",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "117",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1010, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "344",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "117",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test reverse datesort",\r\n        "string": true\r\n    }\r\n]', 100),
	(1011, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "345",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "117",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20reverse%20datesort/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test reverse datesort/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1012, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "346",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "117",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Sort items in reverse order",\r\n        "string": true\r\n    }\r\n]', 100),
	(1013, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "118",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "118",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1014, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "347",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "118",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test stream suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(1015, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "348",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "118",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20stream%20suggestion/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test stream suggestion/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1016, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "349",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "118",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "A test stream suggestion Rhythm",\r\n        "string": true\r\n    }\r\n]', 100),
	(1017, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "119",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "119",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1018, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "350",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "119",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test stream suggestion with data source",\r\n        "string": true\r\n    }\r\n]', 100),
	(1019, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "351",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "119",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20stream%20suggestion%20with%20data%20source/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test stream suggestion with data source/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1020, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "352",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "119",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "A test suggestion Rhythm that fetches data from a a remote url to test this functionality.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1046, 'post_user', '\r\n[\r\n    {\r\n        "sql": "DELETE post_user FROM post_user INNER JOIN user ON post_user.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 45),
	(1047, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "98",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "extra text",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(1048, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "120",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "120",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1049, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "121",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "121",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "120",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "120",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1050, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "122",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "122",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "121",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "120",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1051, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "123",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "123",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-10 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "122",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "120",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1052, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "353",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "120",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "A test top parent for checking deleted orphans.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1053, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "354",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "120",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Extra content for a test top parent for checking deleted orphans.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1054, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "355",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "121",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "A test first child for checking deleted orphans.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1055, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "356",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "122",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "A test second child for checking deleted orphans.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1056, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "357",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "123",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "A test third child for checking deleted orphans.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1057, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "358",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "121",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Extra content for a test first child for checking deleted orphans.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1058, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "359",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "122",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Extra content for a test second child for checking deleted orphans.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1059, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "360",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "123",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Extra content for a test thrid child for checking deleted orphans.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1060, 'post_private_recipient', '\r\n[\r\n    {\r\n        "sql": "DELETE post_private_recipient FROM post_private_recipient INNER JOIN user ON post_private_recipient.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 43),
	(1061, 'post_private_recipient', '\r\n[\r\n    {\r\n        "sql": "DELETE post_private_recipient FROM post_private_recipient INNER JOIN post ON  post_private_recipient.post_id = post.post_id INNER JOIN user ON post.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(1062, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-09 11:02:20",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A restricted test comment",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "63",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "post_mode",\r\n        "value" : "140",\r\n        "string": false\r\n    }\r\n]', 100),
	(1063, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1064, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test restricted comments",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(1065, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(1066, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "99",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(1067, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "100",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(1069, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream anyone can edit",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(1070, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(1071, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "An stream where anyone can edit the posts.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "54",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "post_mode",\r\n        "value": "139",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "124",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "edit_mode",\r\n        "value" : "147",\r\n        "string": false\r\n    }\r\n]', 100),
	(1073, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "124",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "124",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "26",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-21 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1074, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "361",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "124",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream where anyone can edit an post stream",\r\n        "string": true\r\n    }\r\n]', 100),
	(1075, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "125",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "125",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1076, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "362",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "125",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "this can be edited by anyone",\r\n        "string": true\r\n    }\r\n]', 100),
	(1077, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "101",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "text that can be edited by anyone",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(1078, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "102",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(1080, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "53",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1081, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "a take list",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "148",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(1082, 'take_value_list', '[\r\n    {\r\n        "name": "take_value_list_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "first take value",\r\n        "string": true\r\n    }\r\n,\r\n    {\r\n        "name": "value",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1083, 'take_value_list', '[\r\n    {\r\n        "name": "take_value_list_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "second take value",\r\n        "string": true\r\n    }\r\n,\r\n    {\r\n        "name": "value",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(1084, 'take_value_list', '[\r\n    {\r\n        "name": "take_value_list_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "103",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "third take value",\r\n        "string": true\r\n    }\r\n,\r\n    {\r\n        "name": "value",\r\n        "value": "3",\r\n        "string": false\r\n    }\r\n]', 100),
	(1086, 'take_value_list', '\r\n[\r\n    {\r\n        "sql": "DELETE take_value_list FROM take_value_list INNER JOIN stream_field ON take_value_list.stream_field_id = stream_field.stream_field_id  INNER JOIN stream_extra ON stream_field.stream_extra_id = stream_extra.stream_extra_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 40),
	(1087, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream for whocantake options",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(1088, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A stream for testing the who_can_take value field setting.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "126",\r\n        "string": false\r\n    }\r\n]', 100),
	(1089, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "55",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1090, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "104",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "test-title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(1091, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "105",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Main Value",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(1092, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "106",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Only owner can take",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "150",\r\n        "string": false\r\n    }\r\n]', 100),
	(1093, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(1094, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "126",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "126",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1095, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "363",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "126",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for the test stream for testing who_can_take settings",\r\n        "string": true\r\n    }\r\n]', 100),
	(1096, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "127",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "127",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1097, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "364",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "127",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "the second value can only be taken by the main test account",\r\n        "string": true\r\n    }\r\n]', 100),
	(1098, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "365",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "127",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Ensure this textfield appears in the correct place.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1099, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "108",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Ensure anyone can take this one",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(1100, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "107",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "everyone can see this",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(1101, 'waiting_post_time', '\r\n[\r\n    {\r\n        "sql": "DELETE waiting_post_time FROM waiting_post_time INNER JOIN user ON waiting_post_time.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47),
	(1102, 'post', '\r\n[\r\n    {\r\n        "sql": "DELETE post FROM post INNER JOIN  stream_extra ON post.post_id = stream_extra.meta_post_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(1103, 'post_content', '\r\n[\r\n    {\r\n        "sql": "DELETE post_content FROM post_content INNER JOIN post ON post_content.post_id = post.post_id INNER JOIN  stream_extra ON post.post_id = stream_extra.meta_post_id INNER JOIN stream ON stream.stream_id = stream_extra.stream_id INNER JOIN user ON stream.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 41),
	(1104, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test filter that stores data",\r\n        "string": true\r\n    }\r\n]', 100),
	(1105, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-14 14:10:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A filter rhythm that stores data for the rhythm between sessions",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "\\/**\\r\\n * After test data is reset this will try to fetch the test data and find nothing, setting data_found to false.\\r\\n * It will then store some data, setting data_stored to true.\\r\\n * It will then sort the posts to represent this.\\r\\n * \\r\\n * When the page is reloaded, data_found will be set to true and the data will be sorted in a different way. \\r\\n * \\r\\n *\\/\\r\\nfunction () {\\r\\n    var data_found;\\r\\n    \\r\\n    var data_stored;\\r\\n    \\r\\n    var onStoreDataError = function () {\\r\\n        console.error(\\"Store rhythem data error. This should not be called in the test.\\");\\r\\n    };\\r\\n    \\r\\n    var onDataStored = function () {\\r\\n        data_stored = true;\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };    \\r\\n    \\r\\n    var storeData = function () {\\r\\n        var test_data = {\\r\\n            some_data : \\"something\\"\\r\\n        };      \\r\\n        BabblingBrook.Filter.storeData (test_data, onDataStored, onStoreDataError);\\r\\n    };\\r\\n    \\r\\n    var onGetDataError = function () {\\r\\n        data_found = false;\\r\\n        storeData();\\r\\n    };\\r\\n    \\r\\n    var onDataFetched = function () {\\r\\n        data_found = true;\\r\\n        storeData();\\r\\n    };  \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.getData (onDataFetched, onGetDataError);\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {    \\r\\n        var sort = 0;\\r\\n        if (data_found === false) {\\r\\n            if (post.post_id == 130) {\\r\\n                sort = 2;\\r\\n            }\\r\\n            if (post.post_id == 131) {\\r\\n                sort = 3;\\r\\n            }\\r\\n            if (post.post_id == 132) {\\r\\n                sort = 1;\\r\\n            }          \\r\\n        }\\r\\n        if (data_found === true) {\\r\\n            if (post.post_id == 130) {\\r\\n                sort = 2;\\r\\n            }\\r\\n            if (post.post_id == 131) {\\r\\n                sort = 1;\\r\\n            }\\r\\n            if (post.post_id == 132) {\\r\\n                sort = 3;\\r\\n            }    \\r\\n        }      \\r\\n        if (data_stored === false) {\\r\\n            if (post.post_id == 130) {\\r\\n                sort = 3;\\r\\n            }\\r\\n            if (post.post_id == 131) {\\r\\n                sort = 2;\\r\\n            }\\r\\n            if (post.post_id == 132) {\\r\\n                sort = 1;\\r\\n            }    \\r\\n        }            \\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "\\/**\\r\\n * After test data is reset this will try to fetch the test data and find nothing, setting data_found to false.\\r\\n * It will then store some data, setting data_stored to true.\\r\\n * It will then sort the posts to represent this.\\r\\n * \\r\\n * When the page is reloaded, data_found will be set to true and the data will be sorted in a different way. \\r\\n * \\r\\n *\\/\\r\\nfunction () {\\r\\n    var data_found;\\r\\n    \\r\\n    var data_stored;\\r\\n    \\r\\n    var onStoreDataError = function () {\\r\\n        console.error(\\"Store rhythem data error. This should not be called in the test.\\");\\r\\n    };\\r\\n    \\r\\n    var onDataStored = function () {\\r\\n        data_stored = true;\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };    \\r\\n    \\r\\n    var storeData = function () {\\r\\n        var test_data = {\\r\\n            some_data : \\"something\\"\\r\\n        };      \\r\\n        BabblingBrook.Filter.storeData (test_data, onDataStored, onStoreDataError);\\r\\n    };\\r\\n    \\r\\n    var onGetDataError = function () {\\r\\n        data_found = false;\\r\\n        storeData();\\r\\n    };\\r\\n    \\r\\n    var onDataFetched = function () {\\r\\n        data_found = true;\\r\\n        storeData();\\r\\n    };  \\r\\n    var init = function () {\\r\\n        BabblingBrook.Filter.getData (onDataFetched, onGetDataError);\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {    \\r\\n        var sort = 0;\\r\\n        if (data_found === false) {\\r\\n            if (post.post_id == 130) {\\r\\n                sort = 2;\\r\\n            }\\r\\n            if (post.post_id == 131) {\\r\\n                sort = 3;\\r\\n            }\\r\\n            if (post.post_id == 132) {\\r\\n                sort = 1;\\r\\n            }          \\r\\n        }\\r\\n        if (data_found === true) {\\r\\n            if (post.post_id == 130) {\\r\\n                sort = 2;\\r\\n            }\\r\\n            if (post.post_id == 131) {\\r\\n                sort = 1;\\r\\n            }\\r\\n            if (post.post_id == 132) {\\r\\n                sort = 3;\\r\\n            }    \\r\\n        }      \\r\\n        if (data_stored === false) {\\r\\n            if (post.post_id == 130) {\\r\\n                sort = 3;\\r\\n            }\\r\\n            if (post.post_id == 131) {\\r\\n                sort = 2;\\r\\n            }\\r\\n            if (post.post_id == 132) {\\r\\n                sort = 1;\\r\\n            }    \\r\\n        }            \\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "56",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "128",\r\n        "string": false\r\n    }\r\n]', 100),
	(1106, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "56",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "16",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1107, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "128",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "128",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1108, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "378",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "128",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm to test storing data",\r\n        "string": true\r\n    }\r\n]', 100),
	(1109, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "366",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "128",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20filter%20that%20stores%20data/0/0/0",\r\n        "string": true\r\n    },	\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20filter%20that%20stores%20data/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1110, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "367",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "128",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "a filter Rhythm for checking that storing data works",\r\n        "string": true\r\n    }\r\n]', 100),
	(1111, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "21",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": true\r\n    }\r\n]', 100),
	(1112, 'stream', '[\r\n    {\r\n        "name": "stream_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test stream 11",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "kind",\r\n        "value": "51",\r\n        "string": false\r\n    }\r\n]', 100),
	(1113, 'stream_extra', '[\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-07 13:30:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "An 11th test stream. For testing filter storedata",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "group_period",\r\n        "value": "45",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "129",\r\n        "string": false\r\n    }\r\n]', 100),
	(1114, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "57",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "33",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "29",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1115, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "129",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "129",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10002",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1116, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "368",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "129",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Stream to test storing data",\r\n        "string": true\r\n    }\r\n]', 100),
	(1117, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "369",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "129",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "5",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Meta conversation for checking that storing data works",\r\n        "string": true\r\n    }\r\n]', 100),
	(1118, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "365",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "127",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "Ensure this textfield appears in the correct place.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1119, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "370",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "129",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%2010/0/0/0",\r\n        "string": true\r\n    },	\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/posts/test%20stream%2010/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1120, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "371",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "129",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%2010/0/0/0",\r\n        "string": true\r\n    },	\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/stream/view/test%20stream%2010/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1121, 'user_stream_subscription', '[\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "35",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "18",\r\n        "string": false\r\n    }\r\n]', 100),
	(1122, 'stream_child', '[\r\n    {\r\n        "name": "stream_child_id",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "parent_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "child_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    }\r\n]', 100),
	(1123, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "110",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "12",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "Take something",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "-1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "1000000000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "13",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "who_can_take",\r\n        "value": "149",\r\n        "string": false\r\n    }\r\n]', 100),
	(1124, 'stream_field', '[\r\n    {\r\n        "name": "stream_field_id",\r\n        "value": "109",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "field_type",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "label",\r\n        "value": "somet title",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "max_size",\r\n        "value": "200",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "required",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "regex_error",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "checkbox_default",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "taken_records",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_min",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_max",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_type",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "value_options",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_max",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "select_qty_min",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_check_url",\r\n        "value": "NULL",\r\n        "string": false\r\n    }\r\n]', 100),
	(1125, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "130",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "130",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1126, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "131",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "131",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1127, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "132",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "132",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "34",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1128, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "372",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 12:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "130",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "store filter test 1 - Always in the middle",\r\n        "string": true\r\n    }\r\n]', 100),
	(1129, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "373",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 11:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "131",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "store filter test 2 - At top for first pass. At bottom for second",\r\n        "string": true\r\n    }\r\n]', 100),
	(1130, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "374",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "132",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },	\r\n    {\r\n        "name": "text",\r\n        "value": "store filter test 3 - At bottom for first pass. At top for second",\r\n        "string": true\r\n    }\r\n]', 100),
	(1131, 'rhythm_user_data', '\r\n[\r\n    {\r\n        "sql": "DELETE rhythm_user_data FROM rhythm_user_data INNER JOIN user ON rhythm_user_data.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 48),
	(1132, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test posts by date",\r\n        "string": true\r\n    }\r\n]', 100),
	(1133, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "22",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-12-14 14:10:37",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "test filter that only fetches a block of posts by its date and filters it down to the middle two.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "\\/**\\r\\n * Filters out all the posts except for the posts within the date range\\r\\n *\\/\\r\\nfunction () {\\r\\n    \\r\\n    var init = function () {\\r\\n\\t\\tBabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var timestamp = parseInt(post.timestamp);  \\r\\n        var sort = 0;\\r\\n        if (timestamp < 1320843600 || timestamp >  1320847200) {        \\r\\n       \\t\\tsort = -10000;\\r\\n        } else {           \\r\\n          \\tsort = timestamp;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "\\/**\\r\\n * Filters out all the posts except for the posts within the date range\\r\\n *\\/\\r\\nfunction () {\\r\\n    \\r\\n    var init = function () {\\r\\n\\t\\tBabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var timestamp = parseInt(post.timestamp);  \\r\\n        var sort = 0;\\r\\n        if (timestamp < 1320843600 || timestamp >  1320847200) {        \\r\\n       \\t\\tsort = -10000;\\r\\n        } else {           \\r\\n          \\tsort = timestamp;\\r\\n        }\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "133",\r\n        "string": false\r\n    }\r\n]', 100),
	(1134, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "58",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "17",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1135, 'post', '[\r\n    {\r\n        "name": "post_id",\r\n        "value": "133",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_id",\r\n        "value": "10000",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "site_post_id",\r\n        "value": "133",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "stream_extra_id",\r\n        "value": "10009",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-11 13:00:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "top_parent",\r\n        "value": "NULL",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "block_tree",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1136, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "375",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "133",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "Discussion about Rhythm test posts by date",\r\n        "string": true\r\n    }\r\n]', 100),
	(1137, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "376",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "133",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "link",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20post%20by%20date/0/0/0",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "link_title",\r\n        "value": "http://cobaltcascade.localhost/test/rhythm/view/test%20post%20by%20date/0/0/0",\r\n        "string": true\r\n    }\r\n]', 100),
	(1138, 'post_content', '[\r\n    {\r\n        "name": "post_content_id",\r\n        "value": "377",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-13 15:52:00",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "post_id",\r\n        "value": "133",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "revision",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "text",\r\n        "value": "test filter that only fetches a block of posts by its date and filters it down to the middle two.",\r\n        "string": true\r\n    }\r\n]', 100),
	(1139, 'user_rhythm', '\r\n[\r\n    {\r\n        "sql": "DELETE user_rhythm FROM user_rhythm  INNER JOIN user ON  user_rhythm.user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 42),
	(1141, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1142, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1143, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1144, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1145, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1146, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1147, 'user_rhythm', '[\r\n    {\r\n        "name": "user_rhythm_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1148, 'signup_code', '[\r\n    {\r\n        "name": "signup_code_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "testcode 1",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "primary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },   \r\n   {\r\n        "name": "secondary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "used_user_id",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1149, 'signup_code', '\r\n[\r\n    {\r\n        "sql": "DELETE signup_code FROM signup_code INNER JOIN user ON signup_code.used_user_id = user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 46),
	(1150, 'signup_code', '[\r\n    {\r\n        "name": "signup_code_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "testcode 2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "primary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },   \r\n   {\r\n        "name": "secondary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "used_user_id",\r\n        "value": "2",\r\n        "string": false\r\n    }\r\n]', 100),
	(1151, 'signup_code', '[\r\n    {\r\n        "name": "signup_code_id",\r\n        "value": "3",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "testcode 3",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "primary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },   \r\n   {\r\n        "name": "secondary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "used_user_id",\r\n        "value": "3",\r\n        "string": false\r\n    }\r\n]', 100),
	(1152, 'signup_code', '[\r\n    {\r\n        "name": "signup_code_id",\r\n        "value": "4",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "testcode 4",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "primary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },   \r\n   {\r\n        "name": "secondary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "used_user_id",\r\n        "value": "4",\r\n        "string": false\r\n    }\r\n]', 100),
	(1153, 'signup_code', '[\r\n    {\r\n        "name": "signup_code_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "testcode 5",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "primary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },   \r\n   {\r\n        "name": "secondary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "used_user_id",\r\n        "value": "5",\r\n        "string": false\r\n    }\r\n]', 100),
	(1154, 'signup_code', '[\r\n    {\r\n        "name": "signup_code_id",\r\n        "value": "6",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "testcode 6",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "primary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },   \r\n   {\r\n        "name": "secondary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "used_user_id",\r\n        "value": "6",\r\n        "string": false\r\n    }\r\n]', 100),
	(1155, 'signup_code', '[\r\n    {\r\n        "name": "signup_code_id",\r\n        "value": "7",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "code",\r\n        "value": "testcode 7",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "primary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },   \r\n   {\r\n        "name": "secondary_category",\r\n        "value": "This is a test code",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "used_user_id",\r\n        "value": "7",\r\n        "string": false\r\n    }\r\n]', 100),
	(1156, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test user tag suggestion",\r\n        "string": true\r\n    }\r\n]', 100),
	(1157, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "23",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-30 15:15:23",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A test rhythm for suggesting user tags",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n       var suggestions = [\\r\\n            {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test user stream\\",\\r\\n                \\"version\\":\\"0\\/0\\/0\\"                \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    var main = function () {\\r\\n       var suggestions = [\\r\\n            {\\r\\n                \\"domain\\":\\"cobaltcascade.localhost\\",                \\r\\n                \\"username\\":\\"test\\",\\r\\n                \\"name\\":\\"test user stream\\",\\r\\n                \\"version\\":\\"0\\/0\\/0\\"                \\r\\n            }\\r\\n        ];\\r\\n        BabblingBrook.Suggestion.suggestionsGenerated(suggestions);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "59",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "5",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "118",\r\n        "string": false\r\n    }\r\n]', 100),
	(1159, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "59",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "18",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1160, 'rhythm', '[\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test rhythm with params",\r\n        "string": true\r\n    }\r\n]', 100),
	(1161, 'rhythm_extra', '[\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "date_created",\r\n        "value": "2011-11-30 15:15:23",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "rhythm_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "description",\r\n        "value": "A test rhythm that console logs params that are passed to it.",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "mini",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        var params = BabblingBrook.Filter.getClientParams();\\r\\n        console.debug(params);\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"\\/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "full",\r\n        "value": "function () {\\r\\n    \\r\\n    var init = function () {\\r\\n        var params = BabblingBrook.Filter.getClientParams();\\r\\n        console.debug(params);\\r\\n        BabblingBrook.Filter.testvar = \\"init called\\";\\r\\n        BabblingBrook.Filter.processNextPost();\\r\\n    };\\r\\n    \\r\\n    var main = function (post) {\\r\\n        var extra = 0;\\r\\n        var user = post.domain + \\"\\/\\" + post.username;\\r\\n        extra = 0\\r\\n        var sort = post.timestamp + extra;\\r\\n        BabblingBrook.Filter.processNextPost(sort);\\r\\n    };\\r\\n    \\r\\n    return {\\r\\n        init : init,\\r\\n        main : main\\r\\n    };\\r\\n}",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "status_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_id",\r\n        "value": "60",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_cat_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name" : "meta_post_id",\r\n        "value" : "118",\r\n        "string": false\r\n    }\r\n]', 100),
	(1162, 'version', '[\r\n    {\r\n        "name": "version_id",\r\n        "value": "60",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "family_id",\r\n        "value": "19",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "type",\r\n        "value": "30",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "major",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "minor",\r\n        "value": "0",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "patch",\r\n        "value": "0",\r\n        "string": false\r\n    }\r\n]', 100),
	(1163, 'rhythm_param', '[\r\n    {\r\n        "name": "rhythm_param_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test param 1",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "hint",\r\n        "value": "A hint for the first test param",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    }	\r\n]', 100),
	(1164, 'rhythm_param', '[\r\n    {\r\n        "name": "rhythm_param_id",\r\n        "value": "2",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "name",\r\n        "value": "test param 2",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "hint",\r\n        "value": "A hint for the second test param",\r\n        "string": true\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "1",\r\n        "string": false\r\n    }\r\n]', 100),
	(1165, 'user_stream_subscription_filter', '[\r\n    {\r\n        "name": "user_stream_subscription_filter_id",\r\n        "value": "31",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "user_stream_subscription_id",\r\n        "value": "1",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "rhythm_extra_id",\r\n        "value": "24",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "version_type",\r\n        "value": "32",\r\n        "string": false\r\n    },\r\n    {\r\n        "name": "display_order",\r\n        "value": "3",\r\n        "string": true\r\n    }\r\n]', 100),
	(1166, 'user_level', '\r\n[\r\n    {\r\n        "sql": "DELETE user_level FROM user_level INNER JOIN user ON user_level.user_id= user.user_id WHERE user.test_user = 1"\r\n    }\r\n]\r\n\r\n', 47);
/*!40000 ALTER TABLE `test_data` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user
CREATE TABLE IF NOT EXISTS `user` (
  `user_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(128) COLLATE utf8_unicode_ci NOT NULL,
  `site_id` int(11) unsigned NOT NULL COMMENT 'Users without the local site id are stored for lookup purposes',
  `password` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,
  `salt` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,
  `email` varchar(128) COLLATE utf8_unicode_ci DEFAULT NULL,
  `role` int(11) NOT NULL DEFAULT '22' COMMENT 'See lookup table for valid values',
  `is_ring` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'Is this user really a ring',
  `test_user` tinyint(2) NOT NULL DEFAULT '0' COMMENT 'If set to ''1'' then this is a test user. All test user data is regularly deleted and reset.',
  `meta_post_id` int(11) DEFAULT NULL COMMENT 'The meta post id for this user/ring. Used for disscussion about this user.',
  `reset_secret` varchar(64) COLLATE utf8_unicode_ci DEFAULT NULL COMMENT 'When a user requests a password reset, this secret is sent in the email and must match to reset the password.',
  `reset_time` datetime DEFAULT NULL COMMENT 'Time for when a reset_secret is made.',
  `csfr` varchar(127) COLLATE utf8_unicode_ci NOT NULL COMMENT 'Cross site forgery request token. Changed on each login.',
  PRIMARY KEY (`user_id`),
  UNIQUE KEY `username` (`username`,`site_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10170 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='This table store all users on the Babbling Brook network that have a r';

-- Dumping data for table cobalt_cascade.user: ~28 rows (approximately)
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` (`user_id`, `username`, `site_id`, `password`, `salt`, `email`, `role`, `is_ring`, `test_user`, `meta_post_id`, `reset_secret`, `reset_time`, `csfr`) VALUES
	(1, 'test', 10000, '6f0afcac4db28b4868c6801b23edc15617830f6908b73c486238b98afee6b9ef', '4eb7dbb25e6740.57910008', 'test@saltstore.co.uk', 23, 0, 1, 98, NULL, NULL, ''),
	(2, 'test2', 10000, '916ab04a3baa89042824bfc51ec2934dc4a35cb300a9e0e1cabc53ff15a338b5', '4eb7dcd689a8b9.55862835', 'test@saltstore.co.uk', 23, 0, 1, 97, NULL, NULL, ''),
	(3, 'test ring', 10000, 'd7d6732041f167d49a5f3ec472b72a197e525d9f5616bb3d109524446140cdca', '4eb8fd41747e15.46954254', 'test@saltstore.co.uk', 22, 1, 1, 93, NULL, NULL, ''),
	(4, 'test3', 10000, '6f0afcac4db28b4868c6801b23edc15617830f6908b73c486238b98afee6b9ef', '4eb7dbb25e6740.57910008', 'test@saltstore.co.uk', 22, 0, 1, 96, NULL, NULL, ''),
	(5, 'test4', 10000, '6f0afcac4db28b4868c6801b23edc15617830f6908b73c486238b98afee6b9ef', '4eb7dbb25e6740.57910008', 'test@saltstore.co.uk', 22, 0, 1, 95, NULL, NULL, ''),
	(6, 'test suggested ring', 10000, 'd7d6732041f167d49a5f3ec472b72a197e525d9f5616bb3d109524446140cdca', '4eb8fd41747e15.46954254', 'test@saltstore.co.uk', 22, 1, 1, 92, NULL, NULL, ''),
	(7, 'test5', 10000, '6f0afcac4db28b4868c6801b23edc15617830f6908b73c486238b98afee6b9ef', '4eb7dbb25e6740.57910008', 'test@saltstore.co.uk', 22, 0, 1, 94, NULL, NULL, ''),
	(10000, 'sky', 10000, '6f0afcac4db28b4868c6801b23edc15617830f6908b73c486238b98afee6b9ef', '4eb7dbb25e6740.57910008', 'sky@cobaltcascade.net', 23, 0, 0, 10201, NULL, NULL, '626CF843-71E7-4E8B-B7BB-BB67254AC55F'),
	(10019, 'user spam', 10000, 'e38a4a45dbca3351ad1a9ac7284e81d459474553c7b6a9bbdd0c6550b7bb5cf7', '51fa2199c80b76.25087045', '', 0, 1, 0, 10135, NULL, NULL, ''),
	(10095, 'sky', 10004, 'remote_user', '', NULL, 22, 0, 0, NULL, NULL, NULL, ''),
	(10097, 'river', 10004, 'remote_user', '', NULL, 22, 0, 0, NULL, NULL, NULL, ''),
	(10107, 'i made a ring', 10000, '47e0c018f8713acba1b0fd667f4c1b3429063b3f1e2f24fa2424fe12858103bf', '53bd4f007a2316.50669550', NULL, 0, 1, 0, 10700, NULL, NULL, ''),
	(10108, 'i made another ring', 10000, 'e6d1c3d99bef9e563d621245864df768343bb258a70fc7aa8f0cb71125229122', '53bd4f719365e6.83712715', NULL, 0, 1, 0, 10701, NULL, NULL, ''),
	(10109, 'i made another ring 2', 10000, 'b556e505264c613f83eda39a23cbf6adfacba4e2dca4a2d72a603754d8ee5470', '53bd4fa1c94b45.16470444', NULL, 0, 1, 0, 10702, NULL, NULL, ''),
	(10110, 'i made another ring 3', 10000, '17e68e57e3ca249a97cb17fa003e29a6b021109e92f65abf5a2a0af5c397caa4', '53bd5098c79dc6.15610383', NULL, 0, 1, 0, 10703, NULL, NULL, ''),
	(10111, 'i created another new ring 4', 10000, 'da7207f905e02c7eeb83fb9633f6fe29ede6ea3293bfa083fb27ce6b6b290a75', '53bd51c8728049.79228377', NULL, 0, 1, 0, 10704, NULL, NULL, ''),
	(10112, 'i created another new ring 5', 10000, '395af573258b5c7a419ecafdae505f966add1f5ef1a2834244ab0225e834350a', '53bd51edc607b2.28610991', NULL, 0, 1, 0, 10705, NULL, NULL, ''),
	(10113, 'i created another new ring 6', 10000, '06d1014462cb3462fe7b69c809b474022852f058981a8d52d8a8aad878d130db', '53bd5210c6c350.69938828', NULL, 0, 1, 0, 10706, NULL, NULL, ''),
	(10114, 'i created another new ring 7', 10000, '2c416449a0b516fcb6ead6e6cc98401faf23ae5bec9a037afe59e60114b7d427', '53bd522f518377.59342009', NULL, 0, 1, 0, 10707, NULL, NULL, ''),
	(10115, 'i created another new ring 8', 10000, '3045b461e12fed0f2008f5a245c7808f99aa366637c1a2fdd3940d957fd90098', '53bd52643dbea8.17563443', NULL, 0, 1, 0, 10708, NULL, NULL, ''),
	(10116, 'i created another new ring 9', 10000, '06a184fd39d6a3796e7d5306dd186402d5d7103f3a90844d37272743043f1247', '53bd528f890e71.15446795', NULL, 0, 1, 0, 10709, NULL, NULL, ''),
	(10117, 'i created another new ring 10', 10000, '0c7d708cf6af84e2a331c0c64f06cef6f9f5a1e8548098ae4c371ecc0d1f236c', '53bd534d681036.32366624', NULL, 0, 1, 0, 10710, NULL, NULL, ''),
	(10118, 'aa another', 10000, 'c44d686d715fb3593a8c10a7b14e25072c6795e00362e491086f941764bbab55', '53bd5976a6dc14.46025563', NULL, 0, 1, 0, 10711, NULL, NULL, ''),
	(10119, 'tutorial spam', 10000, 'd9edbc121a8e6e3b7c742804eac63623c07b120daaf38a6da2cd14e2ed84f13f', '53c15fe79bbab2.24568284', NULL, 0, 1, 0, 10741, NULL, NULL, ''),
	(10120, 'dadad', 10000, '781681f2dd3daf3ac0bc8dabe95479c92231e82da9544539fc14616aa4fe9f89', '53c16d209cdae0.01947528', NULL, 0, 1, 0, 10742, NULL, NULL, ''),
	(10121, 'dadda2', 10000, '1b5f625a842ceb098dd4972e83d64245c6b231faf972bde5c58f7d6fbdcbb108', '53c16d41d019a6.09400474', NULL, 0, 1, 0, 10743, NULL, NULL, ''),
	(10141, 'another test ring', 10000, '12a2203b2228586c8b49c926ac8b6423913a9144b5dbc6afceed489a9bc4c113', '540887c67b4377.09843522', NULL, 0, 1, 0, 10876, NULL, NULL, 'CF3A85DC-F80A-4457-8D58-D9544C74C1C6'),
	(10169, 'test20', 10000, '076ebfe6fa48301753207524e380c444b575bba0285c1994a107a7f5337145f6', '541180fc8243c5.49010849', '', 0, 0, 0, 10973, NULL, NULL, 'B1F5162E-2E08-46E6-9D40-FA9CDC9EB126');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_client_data
CREATE TABLE IF NOT EXISTS `user_client_data` (
  `user_id` int(10) NOT NULL COMMENT 'The id of the user data is being stored for.',
  `site_id` int(10) NOT NULL COMMENT 'The id of the client site that data is being stored for.',
  `client_key` varchar(63) COLLATE utf8_unicode_ci NOT NULL COMMENT 'A key given to the data by the client website',
  `depth_key` varchar(255) COLLATE utf8_unicode_ci NOT NULL COMMENT 'The key for this item in the tree.',
  `data_type` varchar(63) COLLATE utf8_unicode_ci NOT NULL COMMENT 'The type of data that is stored on this row.',
  `data` text COLLATE utf8_unicode_ci COMMENT 'The string of stored data. Null if this is a container.',
  `lft` int(11) NOT NULL COMMENT 'The left hand boundary of this sub group (Nested Set tree).',
  `rgt` int(11) NOT NULL COMMENT 'The right hand boundary of this sub group (Nested Set tree).',
  PRIMARY KEY (`user_id`,`site_id`,`client_key`,`depth_key`),
  KEY `lft` (`lft`),
  KEY `rgt` (`rgt`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Data stored by a client website in the users account.';

-- Dumping data for table cobalt_cascade.user_client_data: ~1,093 rows (approximately)
/*!40000 ALTER TABLE `user_client_data` DISABLE KEYS */;
INSERT INTO `user_client_data` (`user_id`, `site_id`, `client_key`, `depth_key`, `data_type`, `data`, `lft`, `rgt`) VALUES
	(1, 10000, 'user_config', 'user_config', 'object', NULL, 0, 164),
	(1, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 94, 95),
	(1, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 96, 97),
	(1, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 122, 123),
	(1, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 107, 108),
	(1, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 161, 162),
	(1, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 113, 114),
	(1, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 117, 118),
	(1, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 158, 159),
	(1, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 109, 110),
	(1, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 111, 112),
	(1, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 104, 105),
	(1, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 90, 91),
	(1, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 70, 71),
	(1, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 88, 89),
	(1, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 82, 83),
	(1, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 84, 85),
	(1, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 100, 101),
	(1, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 80, 81),
	(1, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '100', 144, 145),
	(1, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 120, 121),
	(1, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 72, 73),
	(1, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 92, 93),
	(1, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 98, 99),
	(1, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 86, 87),
	(1, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/test/rhythm/test+filter+suggestion/0/0/0/json', 155, 156),
	(1, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/test/rhythm/test+stream+suggestion/0/0/0/json', 128, 129),
	(1, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/test/rhythm/test+moderation+suggestion/0/0/0/json', 134, 135),
	(1, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '10', 149, 150),
	(1, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 78, 79),
	(1, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/test/rhythm/test+user+tag+suggestion/0/0/0/json', 147, 148),
	(2, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(2, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(2, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(2, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(2, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(2, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(2, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(2, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(2, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(2, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(2, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(2, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(2, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(2, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(2, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(2, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(2, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(2, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(2, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(2, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(2, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(2, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(2, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(2, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(2, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(2, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(2, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(2, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(2, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(2, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(2, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(4, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(4, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(4, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(4, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(4, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(4, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(4, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(4, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(4, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(4, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(4, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(4, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(4, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(4, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(4, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(4, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(4, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(4, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(4, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(4, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(4, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(4, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(4, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(4, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(4, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(4, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(4, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(4, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(4, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(4, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(4, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10000, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10000, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10000, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10000, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10000, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10000, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10000, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10000, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10000, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10000, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10000, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10000, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10000, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10000, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10000, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10000, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10000, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10000, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10000, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10000, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10000, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10000, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10000, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10000, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10000, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10000, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10000, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10000, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10000, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10000, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10000, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10135, 10000, 'user_config', 'user_config', 'string', '{"stream_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json","stream_filter_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json","home_page_stream":"cobaltcascade.localhost/sky/stream/news/latest/latest/latest","user_stream_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json","stream_ring_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json","ring_rhythm_suggestion_url":"@todo","user_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json","meta_rhythm_suggestion_url":"@todo","kindred_rhythm_suggestion_url":"@todo","kindred_rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json","default_sort_filter_1":"cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest","default_sort_filter_priority_1":"10","default_sort_filter_2":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest","default_sort_filter_priority_2":"11","default_sort_filter_3":"cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest","default_sort_filter_priority_3":"12","stream_expiry":"600","iframe_timeout":"30000","filter_timeout":"60000","settimeout_timeout":"60000","action_timeout":"60000","ajax_timeout":"30000","snippets_to_store":"30","message_box_lines":"2","suggestion_message_rate":"600","private_message_stream":"cobaltcascade.localhost/sky/stream/private/0/0/0/json","domus_timeout":"55000","default_private_filter":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest","default_private_filter_priority":"10"}', 0, 1),
	(10136, 10000, 'user_config', 'user_config', 'string', '{"stream_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json","stream_filter_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json","home_page_stream":"cobaltcascade.localhost/sky/stream/news/latest/latest/latest","user_stream_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json","stream_ring_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json","ring_rhythm_suggestion_url":"@todo","user_rhythm_suggestion_url":"cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json","meta_rhythm_suggestion_url":"@todo","kindred_rhythm_suggestion_url":"@todo","kindred_rhythm_url":"cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json","default_sort_filter_1":"cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest","default_sort_filter_priority_1":"10","default_sort_filter_2":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest","default_sort_filter_priority_2":"11","default_sort_filter_3":"cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest","default_sort_filter_priority_3":"12","stream_expiry":"600","iframe_timeout":"30000","filter_timeout":"60000","settimeout_timeout":"60000","action_timeout":"60000","ajax_timeout":"30000","snippets_to_store":"30","message_box_lines":"2","suggestion_message_rate":"600","private_message_stream":"cobaltcascade.localhost/sky/stream/private/0/0/0/json","domus_timeout":"55000","default_private_filter":"cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest","default_private_filter_priority":"10"}', 0, 1),
	(10138, 10000, 'user_config', 'user_config', 'object', NULL, 0, 60),
	(10138, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10138, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10138, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10138, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10138, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10138, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10138, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10138, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10138, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10138, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10138, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10138, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10138, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10138, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10138, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10138, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10138, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10138, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10138, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10138, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10138, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10138, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10138, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10138, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10138, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10138, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10138, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10138, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10138, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10139, 10000, 'user_config', 'user_config', 'object', NULL, 0, 60),
	(10139, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10139, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10139, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10139, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10139, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10139, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10139, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10139, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10139, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10139, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10139, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10139, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10139, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10139, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10139, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10139, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10139, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10139, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10139, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10139, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10139, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10139, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10139, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10139, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10139, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10139, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10139, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10139, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10139, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10141, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10141, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10141, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10141, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10141, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10141, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10141, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10141, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10141, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10141, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10141, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10141, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10141, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10141, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10141, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10141, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10141, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10141, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10141, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10141, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '"0"', 59, 60),
	(10141, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10141, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10141, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10141, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10141, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10141, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10141, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10141, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10141, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10141, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10141, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10142, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10142, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10142, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10142, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10142, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10142, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10142, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10142, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10142, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10142, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10142, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10142, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10142, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10142, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10142, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10142, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10142, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10142, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10142, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10142, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '"0"', 59, 60),
	(10142, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10142, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10142, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10142, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10142, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10142, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10142, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10142, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10142, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10142, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10142, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10143, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10143, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10143, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10143, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10143, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10143, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10143, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10143, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10143, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10143, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10143, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10143, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10143, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10143, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10143, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10143, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10143, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10143, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10143, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10143, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '"0"', 59, 60),
	(10143, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10143, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10143, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10143, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10143, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10143, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10143, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10143, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10143, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10143, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10143, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10144, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10144, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10144, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10144, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10144, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10144, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10144, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10144, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10144, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10144, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10144, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10144, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10144, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10144, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10144, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10144, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10144, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10144, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10144, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10144, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '"0"', 59, 60),
	(10144, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10144, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10144, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10144, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10144, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10144, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10144, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10144, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10144, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10144, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10144, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10145, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10145, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10145, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10145, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10145, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10145, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10145, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10145, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10145, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10145, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10145, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10145, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10145, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10145, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10145, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10145, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10145, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10145, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10145, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10145, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '"0"', 59, 60),
	(10145, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10145, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10145, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10145, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10145, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10145, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10145, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10145, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10145, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10145, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10145, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10146, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10146, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10146, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10146, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10146, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10146, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10146, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10146, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10146, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10146, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10146, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10146, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10146, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10146, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10146, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10146, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10146, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10146, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10146, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10146, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '"0"', 59, 60),
	(10146, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10146, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10146, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10146, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10146, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10146, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10146, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10146, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10146, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10146, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10146, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10147, 10000, 'user_config', 'user_config', 'object', NULL, 0, 60),
	(10147, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10147, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10147, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10147, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10147, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10147, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10147, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10147, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10147, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10147, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10147, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10147, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10147, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10147, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10147, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10147, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10147, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10147, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10147, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10147, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10147, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10147, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10147, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10147, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10147, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10147, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10147, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10147, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10147, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10148, 10000, 'user_config', 'user_config', 'object', NULL, 0, 66),
	(10148, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 42, 43),
	(10148, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 44, 45),
	(10148, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 56, 57),
	(10148, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 58, 59),
	(10148, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10148, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10148, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10148, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10148, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10148, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10148, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 54, 55),
	(10148, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 38, 39),
	(10148, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10148, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 36, 37),
	(10148, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10148, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10148, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 48, 49),
	(10148, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10148, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '10', 63, 64),
	(10148, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 52, 53),
	(10148, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10148, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 40, 41),
	(10148, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 46, 47),
	(10148, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 34, 35),
	(10148, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10148, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10148, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10148, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 50, 51),
	(10148, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10148, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10149, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10149, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10149, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10149, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10149, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10149, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10149, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10149, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10149, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10149, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10149, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10149, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10149, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10149, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10149, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10149, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10149, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10149, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10149, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10149, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10149, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10149, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10149, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10149, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10149, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10149, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10149, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10149, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10149, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10149, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10149, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10150, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10150, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10150, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10150, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10150, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10150, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10150, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10150, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10150, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10150, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10150, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10150, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10150, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10150, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10150, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10150, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10150, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10150, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10150, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10150, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10150, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10150, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10150, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10150, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10150, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10150, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10150, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10150, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10150, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10150, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10150, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10151, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10151, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10151, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10151, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10151, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10151, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10151, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10151, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10151, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10151, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10151, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10151, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10151, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10151, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10151, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10151, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10151, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10151, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10151, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10151, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10151, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10151, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10151, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10151, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10151, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10151, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10151, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10151, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10151, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10151, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10151, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10152, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10152, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10152, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10152, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10152, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10152, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10152, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10152, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10152, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10152, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10152, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10152, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10152, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10152, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10152, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10152, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10152, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10152, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10152, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10152, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10152, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10152, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10152, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10152, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10152, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10152, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10152, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10152, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10152, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10152, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10152, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10153, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10153, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10153, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10153, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10153, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10153, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10153, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10153, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10153, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10153, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10153, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10153, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10153, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10153, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10153, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10153, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10153, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10153, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10153, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10153, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10153, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10153, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10153, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10153, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10153, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10153, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10153, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10153, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10153, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10153, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10153, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10154, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10154, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10154, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10154, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10154, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10154, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10154, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10154, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10154, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10154, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10154, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10154, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10154, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10154, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10154, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10154, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10154, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10154, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10154, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10154, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10154, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10154, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10154, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10154, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10154, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10154, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10154, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10154, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10154, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10154, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10154, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10155, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10155, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10155, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10155, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10155, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10155, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10155, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10155, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10155, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10155, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10155, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10155, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10155, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10155, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10155, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10155, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10155, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10155, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10155, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10155, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10155, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10155, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10155, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10155, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10155, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10155, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10155, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10155, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10155, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10155, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10155, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10156, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10156, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10156, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10156, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10156, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10156, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10156, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10156, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10156, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10156, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10156, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10156, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10156, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10156, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10156, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10156, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10156, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10156, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10156, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10156, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10156, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10156, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10156, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10156, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10156, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10156, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10156, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10156, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10156, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10156, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10156, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10157, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10157, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10157, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10157, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10157, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10157, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10157, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10157, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10157, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10157, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10157, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10157, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10157, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10157, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10157, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10157, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10157, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10157, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10157, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10157, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10157, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10157, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10157, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10157, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10157, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10157, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10157, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10157, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10157, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10157, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10157, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10158, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10158, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10158, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10158, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10158, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10158, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10158, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10158, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10158, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10158, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10158, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10158, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10158, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10158, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10158, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10158, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10158, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10158, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10158, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10158, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10158, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10158, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10158, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10158, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10158, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10158, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10158, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10158, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10158, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10158, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10158, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10159, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10159, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10159, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10159, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10159, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10159, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10159, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10159, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10159, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10159, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10159, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10159, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10159, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10159, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10159, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10159, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10159, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10159, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10159, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10159, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10159, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10159, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10159, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10159, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10159, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10159, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10159, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10159, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10159, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10159, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10159, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10160, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10160, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10160, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10160, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10160, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10160, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10160, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10160, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10160, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10160, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10160, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10160, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10160, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10160, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10160, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10160, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10160, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10160, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10160, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10160, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10160, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10160, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10160, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10160, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10160, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10160, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10160, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10160, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10160, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10160, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10160, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10161, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10161, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10161, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10161, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10161, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10161, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10161, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10161, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10161, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10161, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10161, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10161, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10161, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10161, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10161, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10161, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10161, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10161, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10161, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10161, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10161, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10161, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10161, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10161, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10161, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10161, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10161, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10161, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10161, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10161, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10161, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10162, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10162, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10162, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10162, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10162, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10162, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10162, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10162, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10162, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10162, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10162, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10162, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10162, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10162, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10162, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10162, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10162, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10162, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10162, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10162, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10162, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10162, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10162, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10162, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10162, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10162, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10162, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10162, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10162, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10162, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10162, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10163, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10163, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10163, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10163, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10163, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10163, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10163, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10163, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10163, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10163, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10163, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10163, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10163, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10163, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10163, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10163, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10163, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10163, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10163, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10163, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10163, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10163, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10163, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10163, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10163, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10163, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10163, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10163, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10163, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10163, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10163, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10165, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10165, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10165, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10165, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10165, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10165, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10165, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10165, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10165, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10165, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10165, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10165, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10165, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10165, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10165, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10165, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10165, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10165, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10165, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10165, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10165, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10165, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10165, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10165, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10165, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10165, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10165, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10165, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10165, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10165, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10165, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10166, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10166, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10166, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10166, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10166, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10166, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10166, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10166, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10166, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10166, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10166, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10166, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10166, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10166, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10166, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10166, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10166, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10166, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10166, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10166, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10166, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10166, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10166, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10166, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10166, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10166, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10166, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10166, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10166, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10166, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10166, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10168, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10168, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10168, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10168, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10168, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10168, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10168, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10168, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10168, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10168, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10168, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10168, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10168, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10168, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10168, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10168, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10168, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10168, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10168, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10168, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10168, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10168, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10168, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10168, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10168, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10168, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10168, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10168, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10168, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10168, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10168, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9),
	(10169, 10000, 'user_config', 'user_config', 'object', NULL, 0, 62),
	(10169, 10000, 'user_config', 'user_config.action_timeout', 'string', '60000', 44, 45),
	(10169, 10000, 'user_config', 'user_config.ajax_timeout', 'string', '30000', 46, 47),
	(10169, 10000, 'user_config', 'user_config.default_private_filter', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 58, 59),
	(10169, 10000, 'user_config', 'user_config.default_private_filter_priority', 'string', '10', 60, 61),
	(10169, 10000, 'user_config', 'user_config.default_sort_filter_1', 'string', 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', 22, 23),
	(10169, 10000, 'user_config', 'user_config.default_sort_filter_2', 'string', 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', 26, 27),
	(10169, 10000, 'user_config', 'user_config.default_sort_filter_3', 'string', 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', 30, 31),
	(10169, 10000, 'user_config', 'user_config.default_sort_filter_priority_1', 'string', '10', 24, 25),
	(10169, 10000, 'user_config', 'user_config.default_sort_filter_priority_2', 'string', '11', 28, 29),
	(10169, 10000, 'user_config', 'user_config.default_sort_filter_priority_3', 'string', '12', 32, 33),
	(10169, 10000, 'user_config', 'user_config.domus_timeout', 'string', '55000', 56, 57),
	(10169, 10000, 'user_config', 'user_config.filter_timeout', 'string', '60000', 40, 41),
	(10169, 10000, 'user_config', 'user_config.home_page_stream', 'string', 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', 6, 7),
	(10169, 10000, 'user_config', 'user_config.iframe_timeout', 'string', '30000', 38, 39),
	(10169, 10000, 'user_config', 'user_config.kindred_rhythm_suggestion_url', 'string', '@todo', 18, 19),
	(10169, 10000, 'user_config', 'user_config.kindred_rhythm_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', 20, 21),
	(10169, 10000, 'user_config', 'user_config.message_box_lines', 'string', '2', 50, 51),
	(10169, 10000, 'user_config', 'user_config.meta_rhythm_suggestion_url', 'string', '@todo', 16, 17),
	(10169, 10000, 'user_config', 'user_config.override_stream_update_frequency', 'string', '0', 34, 35),
	(10169, 10000, 'user_config', 'user_config.private_message_stream', 'string', 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', 54, 55),
	(10169, 10000, 'user_config', 'user_config.ring_rhythm_suggestion_url', 'string', '@todo', 12, 13),
	(10169, 10000, 'user_config', 'user_config.settimeout_timeout', 'string', '60000', 42, 43),
	(10169, 10000, 'user_config', 'user_config.snippets_to_store', 'string', '30', 48, 49),
	(10169, 10000, 'user_config', 'user_config.stream_expiry', 'string', '600', 36, 37),
	(10169, 10000, 'user_config', 'user_config.stream_filter_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', 4, 5),
	(10169, 10000, 'user_config', 'user_config.stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', 2, 3),
	(10169, 10000, 'user_config', 'user_config.stream_ring_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', 10, 11),
	(10169, 10000, 'user_config', 'user_config.suggestion_message_rate', 'string', '600', 52, 53),
	(10169, 10000, 'user_config', 'user_config.user_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', 14, 15),
	(10169, 10000, 'user_config', 'user_config.user_stream_rhythm_suggestion_url', 'string', 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', 8, 9);
/*!40000 ALTER TABLE `user_client_data` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_config
CREATE TABLE IF NOT EXISTS `user_config` (
  `user_config_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL,
  `code` varchar(128) COLLATE utf8_unicode_ci NOT NULL,
  `value` text COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`user_config_id`),
  KEY `user_id` (`user_id`),
  KEY `code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=10041 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Stores config options for each user';

-- Dumping data for table cobalt_cascade.user_config: ~29 rows (approximately)
/*!40000 ALTER TABLE `user_config` DISABLE KEYS */;
INSERT INTO `user_config` (`user_config_id`, `user_id`, `code`, `value`) VALUES
	(1, 1, 'stream_rhythm_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/test+stream+suggestion/0/0/0'),
	(2, 1, 'stream_rhythm_filter_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0'),
	(3, 1, 'stream_rhythm_user_rate', 'cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0'),
	(4, 1, 'stream_rhythm_moderation_ring_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/test+moderation+suggestion/0/0/0'),
	(5, 2, 'stream_rhythm_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+suggestion+filter/0/0/0'),
	(6, 2, 'stream_rhythm_filter_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0'),
	(7, 2, 'stream_rhythm_user_rate', 'cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0'),
	(8, 2, 'stream_rhythm_moderation_ring_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/test+moderation+suggestion/0/0/0'),
	(9, 3, 'stream_rhythm_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+suggestion+filter/0/0/0'),
	(10, 3, 'stream_rhythm_filter_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0'),
	(11, 3, 'stream_rhythm_user_rate', 'cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0'),
	(12, 3, 'stream_rhythm_moderation_ring_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0'),
	(13, 4, 'stream_rhythm_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/test+stream+suggestion/0/0/0'),
	(14, 4, 'stream_rhythm_filter_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0'),
	(15, 4, 'stream_rhythm_user_rate', 'cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0'),
	(16, 4, 'stream_rhythm_moderation_ring_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0'),
	(17, 5, 'stream_rhythm_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/test+stream+suggestion/0/0/0'),
	(18, 5, 'stream_rhythm_filter_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0'),
	(19, 5, 'stream_rhythm_user_rate', 'cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0'),
	(20, 5, 'stream_rhythm_moderation_ring_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0'),
	(21, 6, 'stream_rhythm_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+suggestion+filter/0/0/0'),
	(22, 6, 'stream_rhythm_filter_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0'),
	(23, 6, 'stream_rhythm_user_rate', 'cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0'),
	(24, 6, 'stream_rhythm_moderation_ring_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0'),
	(25, 7, 'stream_rhythm_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/test+stream+suggestion/0/0/0'),
	(26, 7, 'stream_rhythm_filter_suggestion_url', 'cobaltcascade.localhost/test/rhythm/minijson/a+stream+filter+suggestion+rhythm/0/0/0'),
	(27, 7, 'stream_rhythm_user_rate', 'cobaltcascade.localhost/test/rhythm/json/suggest+user/0/0/0'),
	(28, 7, 'stream_rhythm_moderation_ring_suggestion_url', 'cobaltcascade.localhost/test/rhythm/json/a+stream+moderation+ring+suggestion+rhythm/0/0/0'),
	(10040, 10000, 'domus_timeout', '300000');
/*!40000 ALTER TABLE `user_config` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_config_default
CREATE TABLE IF NOT EXISTS `user_config_default` (
  `user_config_default_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `display_order` int(11) unsigned NOT NULL COMMENT 'The order this config item appears on the setup page.',
  `code` varchar(128) COLLATE utf8_unicode_ci NOT NULL COMMENT 'The code that is used to identify this config item in the codebase.',
  `name` text COLLATE utf8_unicode_ci NOT NULL COMMENT 'The name displayed on the config page.',
  `description` text COLLATE utf8_unicode_ci NOT NULL COMMENT 'The description, shown in the help popup on the config page.',
  `type_id` int(11) NOT NULL COMMENT 'The type of config option. Used to define which action is used to update it on the config page. See lookup table for options.',
  `default_value` text COLLATE utf8_unicode_ci NOT NULL COMMENT 'The value a user gets if they don''t have a value set in user_config.',
  `extra_data` text COLLATE utf8_unicode_ci COMMENT 'A blob of json data that is needed by the config page to edit this option.',
  PRIMARY KEY (`user_config_default_id`),
  UNIQUE KEY `display_order` (`display_order`),
  UNIQUE KEY `code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='The default config options that are used when a user signs up, or does not have an option set.';

-- Dumping data for table cobalt_cascade.user_config_default: ~30 rows (approximately)
/*!40000 ALTER TABLE `user_config_default` DISABLE KEYS */;
INSERT INTO `user_config_default` (`user_config_default_id`, `display_order`, `code`, `name`, `description`, `type_id`, `default_value`, `extra_data`) VALUES
	(1, 1, 'stream_rhythm_suggestion_url', 'A rhythm that suggests new streams that you may be interested in', 'This rhythm is used by both the suggestions box and on the edit streams page to display new streams that you may be interested in subscribing to.', 153, 'cobaltcascade.localhost/sky/rhythm/basic+stream+suggestion/0/0/0/json', '{"rhythm_cat" : "stream_suggestion"}'),
	(2, 2, 'stream_filter_rhythm_suggestion_url', 'A rhythm that suggests new filters for streams you are subscribed to', 'This rhythm is used by both the suggestions box and on the edit streams page to display new sort filters for streams that you may be interested in subscribing to.', 153, 'cobaltcascade.localhost/sky/rhythm/basic+filter+suggestion/0/0/0/json', '{"rhythm_cat" : "stream_filter_suggestion"}'),
	(5, 100, 'stream_expiry', 'How many seconds to wait before cached stream data is considered out of date.', 'Stream data is cached locally to speed up the process of displaying posts to you when you view a stream. After the number of seconds set here, the stream and post data will be refetched.', 155, '600', NULL),
	(6, 101, 'iframe_timeout', 'How many milliseconds to wait before the Babbling Brook frames have to have loaded and registered themselves.', 'When data is fetched from remote domains, this sets how long to wait before timing out and displaying an error.', 155, '30000', NULL),
	(7, 102, 'filter_timeout', 'How many milliseconds to wait for filter rhythms to report thair results.', 'When data is rhythms are started to filter rhythm results, this sets how long they have to perform before timing out and displaying an error.', 155, '60000', NULL),
	(8, 103, 'settimeout_timeout', 'How many milliseconds to wait before a javascript wait function times out.', 'There are many instances where the code has to pause and wait for data to be fetched. This is the default amount of time to wait before timing out.', 155, '60000', NULL),
	(9, 104, 'action_timeout', 'How long to wait for javascript actions to timeout.', 'The amount of time to wait when requesting data from remote domains before timing out.', 155, '60000', NULL),
	(10, 5, 'user_stream_rhythm_suggestion_url', 'A rhythm that suggests new streams for rating users', 'This rhythm is used by both the suggestions box and on the profile page to display new streams for rating users that you may be interested in subscribing to.', 153, 'cobaltcascade.localhost/sky/rhythm/basic+user+stream+suggestion/0/0/0/json', '{"rhythm_cat" : "user_stream_suggestion"}'),
	(11, 6, 'stream_ring_rhythm_suggestion_url', 'A rhythm that suggests rings that can be used to moderate streams', 'This rhythm is used by both the suggestions box and on the edit streams page to display new rings for moderating streams that you may be interested in subscribing to.', 153, 'cobaltcascade.localhost/sky/rhythm/basic+moderation+ring+suggestion/0/0/0/json', '{"rhythm_cat" : "stream_ring_suggestion"}'),
	(12, 8, 'user_rhythm_suggestion_url', 'A rhythm that suggests users you might be interested in', 'This rhythm is used by both the suggestions box and the profile page to display new users that you may be interested in.', 153, 'cobaltcascade.localhost/sky/rhythm/basic+user+suggestion/0/0/0/json', '{"rhythm_cat" : "user_suggestion"}'),
	(13, 9, 'meta_rhythm_suggestion_url', 'A rhythm that suggests new suggestion rhythms that you might be interested in', 'This rhythm is used the suggestions box to display new suggestion rhythms that you may be interested in.', 153, '@todo', '{"rhythm_cat" : "meta_suggestion"}'),
	(14, 10, 'kindred_rhythm_suggestion_url', 'A rhythm that suggests new kindred rhythms that you might be interested in', 'This rhythm is used the suggestions box to display kindred rhythms that you may be interested in.', 153, '@todo', '{"rhythm_cat" : "kindred_suggestion"}'),
	(15, 105, 'ajax_timeout', 'How long to wait before an ajax request times out.', 'How long to wait for the server to respond when an ajax request is made.', 155, '30000', NULL),
	(16, 106, 'snippets_to_store', 'How many snippets should be saved in local storage.', 'Snippets are stored in local storage so that they can be displayed quickly when the website is first loaded. This setting decides how many to save. A larger number means that user has more content to read whilst waiting for fresh data.', 155, '30', NULL),
	(17, 107, 'message_box_lines', 'How many lines should the message box show when minimized.', 'The message box can take up more or less space. The lowest possible setting is 2.', 155, '2', NULL),
	(18, 11, 'kindred_rhythm_url', 'A rhythm that decides your kindred relationships', 'This rhythm is used to caluculate your kindred relationships with other users.', 153, 'cobaltcascade.localhost/sky/rhythm/basic+kindred/0/0/0/json', '{"rhythm_cat" : "kindred"}'),
	(22, 7, 'ring_rhythm_suggestion_url', 'A rhythm that suggests rings that you might be interested in.', 'This rhythm is used by the suggestions box to display new rings that you may be interested in joining.', 153, '@todo', '{"rhythm_cat" : "ring_suggestion"}'),
	(23, 108, 'suggestion_message_rate', 'How many seconds to wait before showing suggestion messages', 'Far more suggestions can be generated than want to be seen by the user. This setting limits the frequency with which they will be displayed.', 155, '600', NULL),
	(24, 109, 'private_message_stream', 'The default stream to use for private messages.', 'When sending private messages via the private posts link, this is the stream that the messages are saved in.', 154, 'cobaltcascade.localhost/sky/stream/private/0/0/0/json', NULL),
	(25, 110, 'domus_timeout', 'How many milliseconds to wait for domus requests to return.', 'The time to wait for the domus domain to perform a request and return tot he client.', 155, '55000', NULL),
	(27, 3, 'home_page_stream', 'Home page stream', 'The stream that is used to display results on your home page', 154, 'cobaltcascade.localhost/sky/stream/news/latest/latest/latest', NULL),
	(30, 111, 'default_private_filter', 'The filter rhythm to use on private posts.', 'The default filter rhythm to use for private posts in the mail section.', 153, 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', '{"rhythm_cat" : "sort"}'),
	(31, 112, 'default_private_filter_priority', 'The sort priority of the private filter rhythm', 'Sort Requests with a higher priority are processed first.', 155, '10', NULL),
	(34, 12, 'default_sort_filter_1', 'The first default sort filter', 'This is the primary default sort rhythm used to sort streams when no rhythm is provided.', 153, 'cobaltcascade.localhost/sky/rhythm/skys+priority/latest/latest/latest', '{"rhythm_cat" : "sort"}'),
	(35, 13, 'default_sort_filter_priority_1', 'The sort priority for the first default sort filter', 'All sort requests have a sort priority that decides which sort request takes priority. Higher is faster.', 155, '10', NULL),
	(36, 14, 'default_sort_filter_2', 'The second default sort filter', 'This is the second default sort rhythm used to sort streams when no rhythm is provided.', 153, 'cobaltcascade.localhost/sky/rhythm/newest/latest/latest/latest', '{"rhythm_cat" : "sort"}'),
	(40, 15, 'default_sort_filter_priority_2', 'The sort priority for the second default sort filter', 'All sort requests have a sort priority that decides which sort request takes priority. Higher is faster.', 155, '11', NULL),
	(41, 17, 'default_sort_filter_priority_3', 'The sort priority for the third default sort filter', 'All sort requests have a sort priority that decides which sort request takes priority. Higher is faster.', 155, '12', NULL),
	(42, 16, 'default_sort_filter_3', 'The third default sort filter', 'This is the third default sort rhythm used to sort streams when no rhythm is provided.', 153, 'cobaltcascade.localhost/sky/rhythm/oldest/latest/latest/latest', '{"rhythm_cat" : "sort"}'),
	(44, 18, 'override_stream_update_frequency', 'Override the stream update frequency', 'Streams fetch updates on a frequency rate set by the stream. Changing this to any number greater than zero will result in all streams being updated by that frequency (in seconds)', 155, '0', NULL);
/*!40000 ALTER TABLE `user_config_default` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_feature_usage
CREATE TABLE IF NOT EXISTS `user_feature_usage` (
  `user_feature_usage_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `date_used` date NOT NULL COMMENT 'date only, no time',
  `user_id` int(11) unsigned NOT NULL COMMENT 'The user who owns this',
  `qty` int(11) unsigned NOT NULL COMMENT 'Qty of times used',
  `feature` int(11) unsigned NOT NULL COMMENT 'See lookup table',
  `extra_id` int(11) unsigned NOT NULL COMMENT 'eg rhythm_extra_id or stream_extra_id',
  PRIMARY KEY (`user_feature_usage_id`),
  KEY `user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10117 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Records the number of times  a feature is used by a user';

-- Dumping data for table cobalt_cascade.user_feature_usage: ~88 rows (approximately)
/*!40000 ALTER TABLE `user_feature_usage` DISABLE KEYS */;
INSERT INTO `user_feature_usage` (`user_feature_usage_id`, `date_used`, `user_id`, `qty`, `feature`, `extra_id`) VALUES
	(10000, '2013-06-13', 10000, 32, 47, 1),
	(10001, '2013-06-13', 10000, 48, 49, 1),
	(10002, '2013-06-14', 10000, 3, 47, 1),
	(10003, '2013-06-14', 10000, 2, 47, 10001),
	(10004, '2013-06-14', 10000, 1, 47, 10012),
	(10005, '2013-06-14', 10000, 4, 49, 1),
	(10006, '2013-06-14', 10000, 4, 49, 10000),
	(10007, '2013-06-14', 10000, 10, 49, 10002),
	(10011, '2013-06-11', 10000, 97, 47, 1),
	(10012, '2013-06-11', 10000, 1, 47, 2),
	(10013, '2013-06-11', 10000, 77, 49, 1),
	(10014, '2013-06-11', 10000, 28, 49, 2),
	(10015, '2013-06-18', 10000, 1, 47, 10012),
	(10016, '2013-06-18', 10000, 4, 47, 10017),
	(10017, '2013-06-18', 10000, 1, 49, 10002),
	(10018, '2013-06-18', 10000, 4, 49, 10008),
	(10019, '2013-06-11', 10000, 3, 47, 1),
	(10020, '2013-06-11', 10000, 3, 49, 1),
	(10021, '2013-06-20', 10000, 1, 47, 10012),
	(10022, '2013-06-20', 10000, 14, 47, 10001),
	(10023, '2013-06-20', 10000, 12, 49, 10002),
	(10024, '2013-06-20', 10000, 3, 49, 10009),
	(10025, '2013-06-20', 10000, 6, 47, 10001),
	(10026, '2013-06-20', 10000, 4, 49, 10002),
	(10027, '2013-06-20', 10000, 2, 49, 10009),
	(10028, '2013-06-21', 10000, 1, 47, 10012),
	(10029, '2013-06-21', 10000, 50, 47, 10001),
	(10030, '2013-06-21', 10000, 20, 47, 10017),
	(10031, '2013-06-21', 10000, 38, 49, 10002),
	(10032, '2013-06-21', 10000, 13, 49, 10009),
	(10033, '2013-06-21', 10000, 18, 49, 10008),
	(10034, '2013-06-21', 10000, 2, 49, 10010),
	(10035, '2013-06-24', 10000, 6, 47, 10012),
	(10036, '2013-06-24', 10000, 2, 47, 10017),
	(10037, '2013-06-24', 10000, 6, 49, 10002),
	(10038, '2013-06-24', 10000, 2, 49, 10008),
	(10065, '2013-07-02', 10000, 3, 47, 10012),
	(10066, '2013-07-02', 10000, 3, 49, 10002),
	(10067, '2013-06-27', 10000, 5, 47, 10012),
	(10068, '2013-06-27', 10000, 5, 47, 1),
	(10069, '2013-06-27', 10000, 5, 49, 10002),
	(10070, '2013-06-27', 10000, 4, 49, 1),
	(10071, '2013-06-27', 10000, 1, 49, 2),
	(10072, '2013-07-03', 10000, 6, 47, 10012),
	(10073, '2013-07-03', 10000, 71, 47, 10017),
	(10074, '2013-07-03', 10000, 34, 47, 1),
	(10075, '2013-07-03', 10000, 4, 47, 10001),
	(10076, '2013-07-03', 10000, 5, 47, 10018),
	(10077, '2013-07-03', 10000, 15, 49, 10002),
	(10078, '2013-07-03', 10000, 30, 49, 10008),
	(10079, '2013-07-03', 10000, 6, 49, 10011),
	(10080, '2013-07-03', 10000, 1, 49, 10013),
	(10081, '2013-07-03', 10000, 30, 49, 1),
	(10082, '2013-07-03', 10000, 6, 49, 0),
	(10083, '2013-07-03', 10000, 1, 49, 2),
	(10084, '2013-07-03', 10000, 2, 49, 10009),
	(10085, '2013-07-03', 10000, 28, 49, 10014),
	(10086, '2013-07-03', 10000, 4, 49, 10015),
	(10087, '2013-07-03', 10000, 11, 47, 10012),
	(10088, '2013-07-03', 10000, 1, 47, 10017),
	(10089, '2013-07-03', 10000, 1, 47, 10018),
	(10090, '2013-07-03', 10000, 1, 47, 1),
	(10091, '2013-07-03', 10000, 12, 49, 10002),
	(10092, '2013-07-03', 10000, 1, 49, 10008),
	(10093, '2013-07-03', 10000, 1, 49, 1),
	(10094, '2013-07-04', 10000, 9, 47, 10012),
	(10095, '2013-07-04', 10000, 10, 47, 10017),
	(10096, '2013-07-04', 10000, 7, 47, 10001),
	(10097, '2013-07-04', 10000, 1, 47, 10018),
	(10098, '2013-07-04', 10000, 27, 49, 10002),
	(10099, '2013-07-04', 10000, 9, 49, 10014),
	(10100, '2013-07-04', 10000, 1, 49, 10012),
	(10101, '2013-07-04', 10000, 2, 49, 10009),
	(10102, '2013-07-04', 10000, 1, 49, 10010),
	(10103, '2013-07-04', 10000, 3, 47, 10012),
	(10104, '2013-07-04', 10000, 2, 47, 10017),
	(10105, '2013-07-04', 10000, 3, 49, 10002),
	(10106, '2013-07-04', 10000, 2, 49, 10014),
	(10107, '2013-07-05', 10000, 3, 47, 10012),
	(10108, '2013-07-05', 10000, 8, 47, 10017),
	(10109, '2013-07-05', 10000, 1, 47, 10018),
	(10110, '2013-07-05', 10000, 6, 49, 10002),
	(10111, '2013-07-05', 10000, 6, 49, 10014),
	(10112, '2013-07-08', 10000, 1, 47, 10012),
	(10113, '2013-07-05', 10000, 3, 47, 10012),
	(10114, '2013-07-05', 10000, 3, 47, 10017),
	(10115, '2013-07-05', 10000, 3, 49, 10002),
	(10116, '2013-07-05', 10000, 3, 49, 10014);
/*!40000 ALTER TABLE `user_feature_usage` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_level
CREATE TABLE IF NOT EXISTS `user_level` (
  `level_id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'The primary key.',
  `user_id` int(10) NOT NULL COMMENT 'The id of the user.',
  `tutorial_set` int(10) NOT NULL DEFAULT '166' COMMENT 'The name of the tutorial set being followed (See lookup table).',
  `level_name` int(10) NOT NULL DEFAULT '167' COMMENT 'The name of the level currently on (See lookup table).',
  `enabled` tinyint(4) NOT NULL DEFAULT '1' COMMENT 'Are tutorials enabled for this user.',
  PRIMARY KEY (`level_id`),
  UNIQUE KEY `user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10019 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Stores info relating to the level of the current user.';

-- Dumping data for table cobalt_cascade.user_level: ~24 rows (approximately)
/*!40000 ALTER TABLE `user_level` DISABLE KEYS */;
INSERT INTO `user_level` (`level_id`, `user_id`, `tutorial_set`, `level_name`, `enabled`) VALUES
	(1, 10000, 166, 167, 0),
	(5, 10098, 166, 176, 1),
	(6, 10102, 166, 168, 1),
	(7, 10103, 166, 168, 1),
	(8, 10104, 166, 167, 1),
	(9, 10105, 166, 170, 1),
	(10, 10106, 166, 196, 0),
	(11, 10107, 166, 167, 1),
	(12, 10108, 166, 167, 1),
	(13, 10109, 166, 167, 1),
	(14, 10110, 166, 167, 1),
	(15, 10111, 166, 167, 1),
	(16, 10112, 166, 167, 1),
	(17, 10113, 166, 167, 1),
	(18, 10114, 166, 167, 1),
	(19, 10115, 166, 167, 1),
	(20, 10116, 166, 167, 1),
	(21, 10117, 166, 167, 1),
	(22, 10118, 166, 167, 1),
	(23, 10119, 166, 167, 1),
	(24, 10120, 166, 167, 1),
	(25, 10121, 166, 167, 1),
	(10017, 1, 166, 167, 1),
	(10018, 10169, 166, 182, 0);
/*!40000 ALTER TABLE `user_level` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_profile
CREATE TABLE IF NOT EXISTS `user_profile` (
  `user_profile_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `real_name` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  `about` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`user_profile_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10162 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='@todo this is needs removing. use user_profile';

-- Dumping data for table cobalt_cascade.user_profile: ~50 rows (approximately)
/*!40000 ALTER TABLE `user_profile` DISABLE KEYS */;
INSERT INTO `user_profile` (`user_profile_id`, `user_id`, `real_name`, `about`) VALUES
	(1, 1, 'Someone Somewhere', 'Would rather not say.'),
	(2, 2, NULL, NULL),
	(3, 3, NULL, NULL),
	(4, 4, 'Test users 3 real name', 'All about test user 3'),
	(5, 5, NULL, NULL),
	(6, 6, NULL, NULL),
	(7, 7, NULL, NULL),
	(10000, 10000, 'Sky Wickenden', 'This user is used to manage default features.'),
	(10014, 10014, NULL, NULL),
	(10015, 10015, NULL, NULL),
	(10016, 10018, NULL, NULL),
	(10017, 10019, NULL, 'This ring can be subscribed to by any member to mark content as spam.\n\nIt is used as a base line for detecting spam and reporting it to to other spam rings such as \'super spam\' and \'admin spam\'.'),
	(10056, 10058, NULL, NULL),
	(10057, 10059, NULL, NULL),
	(10058, 10060, NULL, NULL),
	(10059, 10061, NULL, NULL),
	(10060, 10062, NULL, NULL),
	(10061, 10063, NULL, NULL),
	(10062, 10064, NULL, NULL),
	(10063, 10065, NULL, NULL),
	(10064, 10066, NULL, NULL),
	(10065, 10067, NULL, NULL),
	(10066, 10068, NULL, NULL),
	(10067, 10069, NULL, NULL),
	(10068, 10070, NULL, NULL),
	(10069, 10071, NULL, NULL),
	(10070, 10072, NULL, NULL),
	(10071, 10073, NULL, NULL),
	(10072, 10074, NULL, NULL),
	(10073, 10075, NULL, NULL),
	(10074, 10076, NULL, NULL),
	(10075, 10077, NULL, NULL),
	(10099, 10107, NULL, NULL),
	(10100, 10108, NULL, NULL),
	(10101, 10109, NULL, NULL),
	(10102, 10110, NULL, NULL),
	(10103, 10111, NULL, NULL),
	(10104, 10112, NULL, NULL),
	(10105, 10113, NULL, NULL),
	(10106, 10114, NULL, NULL),
	(10107, 10115, NULL, NULL),
	(10108, 10116, NULL, NULL),
	(10109, 10117, NULL, NULL),
	(10110, 10118, NULL, NULL),
	(10111, 10119, NULL, NULL),
	(10112, 10120, NULL, NULL),
	(10113, 10121, NULL, NULL),
	(10132, 10140, NULL, NULL),
	(10133, 10141, NULL, NULL),
	(10161, 10169, NULL, 'jk, g gh hg fg');
/*!40000 ALTER TABLE `user_profile` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_rhythm
CREATE TABLE IF NOT EXISTS `user_rhythm` (
  `user_rhythm_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL,
  `rhythm_extra_id` int(11) unsigned NOT NULL,
  `version_type` int(11) unsigned NOT NULL,
  `order` int(11) unsigned NOT NULL,
  PRIMARY KEY (`user_rhythm_id`),
  KEY `user_id` (`user_id`,`rhythm_extra_id`,`version_type`,`order`)
) ENGINE=InnoDB AUTO_INCREMENT=10144 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Default Rhythms being used by this user. See link to rhythm_extra.rhythm_type to see which kind of Rhythm.';

-- Dumping data for table cobalt_cascade.user_rhythm: ~63 rows (approximately)
/*!40000 ALTER TABLE `user_rhythm` DISABLE KEYS */;
INSERT INTO `user_rhythm` (`user_rhythm_id`, `user_id`, `rhythm_extra_id`, `version_type`, `order`) VALUES
	(1, 1, 5, 32, 1),
	(8, 1, 6, 32, 2),
	(2, 2, 5, 32, 1),
	(17, 2, 5, 32, 1),
	(14, 3, 2, 32, 2),
	(3, 3, 5, 32, 1),
	(18, 3, 5, 32, 1),
	(11, 4, 1, 32, 1),
	(12, 4, 2, 32, 2),
	(4, 4, 5, 32, 1),
	(19, 4, 5, 32, 1),
	(5, 5, 5, 32, 1),
	(20, 5, 5, 32, 1),
	(13, 6, 1, 32, 1),
	(6, 6, 5, 32, 1),
	(21, 6, 5, 32, 1),
	(15, 7, 1, 32, 1),
	(16, 7, 2, 32, 2),
	(7, 7, 5, 32, 1),
	(22, 7, 5, 32, 1),
	(10000, 10000, 10018, 35, 1),
	(10009, 10014, 10018, 35, 1),
	(10010, 10015, 10018, 35, 1),
	(10011, 10018, 10018, 35, 1),
	(10012, 10019, 10018, 35, 1),
	(10039, 10058, 10018, 35, 1),
	(10040, 10059, 10018, 35, 1),
	(10041, 10060, 10018, 35, 1),
	(10042, 10061, 10018, 35, 1),
	(10043, 10062, 10018, 35, 1),
	(10044, 10063, 10018, 35, 1),
	(10045, 10064, 10018, 35, 1),
	(10046, 10065, 10018, 35, 1),
	(10047, 10066, 10018, 35, 1),
	(10048, 10067, 10018, 35, 1),
	(10049, 10068, 10018, 35, 1),
	(10050, 10069, 10018, 35, 1),
	(10051, 10070, 10018, 35, 1),
	(10052, 10071, 10018, 35, 1),
	(10053, 10072, 10018, 35, 1),
	(10054, 10073, 10018, 35, 1),
	(10055, 10074, 10018, 35, 1),
	(10056, 10075, 10018, 35, 1),
	(10057, 10076, 10018, 35, 1),
	(10058, 10077, 10018, 35, 1),
	(10081, 10107, 10018, 35, 1),
	(10082, 10108, 10018, 35, 1),
	(10083, 10109, 10018, 35, 1),
	(10084, 10110, 10018, 35, 1),
	(10085, 10111, 10018, 35, 1),
	(10086, 10112, 10018, 35, 1),
	(10087, 10113, 10018, 35, 1),
	(10088, 10114, 10018, 35, 1),
	(10089, 10115, 10018, 35, 1),
	(10090, 10116, 10018, 35, 1),
	(10091, 10117, 10018, 35, 1),
	(10092, 10118, 10018, 35, 1),
	(10093, 10119, 10018, 35, 1),
	(10094, 10120, 10018, 35, 1),
	(10095, 10121, 10018, 35, 1),
	(10114, 10140, 10018, 35, 1),
	(10115, 10141, 10018, 35, 1),
	(10143, 10169, 10018, 35, 1);
/*!40000 ALTER TABLE `user_rhythm` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_ring
CREATE TABLE IF NOT EXISTS `user_ring` (
  `user_ring_id` int(11) NOT NULL AUTO_INCREMENT,
  `ring_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL COMMENT 'the id of the user that is a member of this group',
  `password` varchar(255) COLLATE utf8_unicode_ci NOT NULL COMMENT 'This users password to access this ring',
  `admin` tinyint(1) DEFAULT NULL COMMENT 'Does this user have admin rights to this ring',
  `member` tinyint(1) DEFAULT NULL COMMENT 'Is this user a member of this ring',
  `ban` tinyint(1) DEFAULT NULL COMMENT 'Is this user banned',
  PRIMARY KEY (`user_ring_id`),
  KEY `user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10040 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='members and admins of a local ring';

-- Dumping data for table cobalt_cascade.user_ring: ~10 rows (approximately)
/*!40000 ALTER TABLE `user_ring` DISABLE KEYS */;
INSERT INTO `user_ring` (`user_ring_id`, `ring_id`, `user_id`, `password`, `admin`, `member`, `ban`) VALUES
	(1, 1, 1, '6G2HTk]nrzx3pMtKzcQx', 1, 1, NULL),
	(2, 1, 2, 'ring-password', NULL, 1, NULL),
	(10000, 10000, 10000, 'Z28dfXzcw', 1, 1, NULL),
	(10015, 10012, 10000, 'zF]!yXRrmm6Z]pjYq6V[', NULL, 0, 1),
	(10017, 10005, 10000, '6mmCXrmTL*d', NULL, 1, NULL),
	(10022, 10014, 10000, 'cPWqF3qmW(Zx!ThvwDgz7r62hXzRG8', NULL, 1, NULL),
	(10023, 10015, 10000, 'X88qgNRDnNRfvZ6gh!3mYZpBcCdkrC', NULL, 1, NULL),
	(10024, 10006, 10000, '*C(bMLgxJWzF]4qMdMRGVTdN4HZw!Z', NULL, 1, NULL),
	(10031, 10016, 10141, 'MXG!Z4C8X8rd&q(rZxmCd(tCbG&F9J', 1, 1, NULL),
	(10039, 10013, 10169, 'p48PW(jwdLKZPv*Yxb3VGDYPr4mqY3', NULL, 1, NULL);
/*!40000 ALTER TABLE `user_ring` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_ring_password
CREATE TABLE IF NOT EXISTS `user_ring_password` (
  `user_ring_password_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL COMMENT 'A local user',
  `ring_user_id` int(11) unsigned NOT NULL COMMENT 'The user id of the ring',
  `password` varchar(255) COLLATE utf8_unicode_ci NOT NULL COMMENT 'password needed for this user to gain access to the ring',
  PRIMARY KEY (`user_ring_password_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10040 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='The passwords for users access to rings both local and remote';

-- Dumping data for table cobalt_cascade.user_ring_password: ~10 rows (approximately)
/*!40000 ALTER TABLE `user_ring_password` DISABLE KEYS */;
INSERT INTO `user_ring_password` (`user_ring_password_id`, `user_id`, `ring_user_id`, `password`) VALUES
	(2, 2, 3, 'ring-password'),
	(3, 1, 3, '6G2HTk]nrzx3pMtKzcQx'),
	(10000, 10000, 10019, 'Z28dfXzcw'),
	(10015, 10000, 10118, 'zF]!yXRrmm6Z]pjYq6V['),
	(10017, 10000, 10111, '6mmCXrmTL*d'),
	(10022, 10000, 10120, 'cPWqF3qmW(Zx!ThvwDgz7r62hXzRG8'),
	(10023, 10000, 10121, 'X88qgNRDnNRfvZ6gh!3mYZpBcCdkrC'),
	(10024, 10000, 10112, '*C(bMLgxJWzF]4qMdMRGVTdN4HZw!Z'),
	(10031, 10141, 10141, 'MXG!Z4C8X8rd&q(rZxmCd(tCbG&F9J'),
	(10039, 10169, 10119, 'p48PW(jwdLKZPv*Yxb3VGDYPr4mqY3');
/*!40000 ALTER TABLE `user_ring_password` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_secret
CREATE TABLE IF NOT EXISTS `user_secret` (
  `user_secret_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL COMMENT 'The id of the user that the secret is for.',
  `secret` tinytext COLLATE utf8_unicode_ci NOT NULL COMMENT 'The secret',
  `date_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Creation date.',
  PRIMARY KEY (`user_secret_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Stores secrets for users. Used by other stores to verify that a user generated a secret.';

-- Dumping data for table cobalt_cascade.user_secret: ~0 rows (approximately)
/*!40000 ALTER TABLE `user_secret` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_secret` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_stream_count
CREATE TABLE IF NOT EXISTS `user_stream_count` (
  `user_stream_count_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL,
  `stream_extra_id` int(11) unsigned NOT NULL,
  `total` int(11) unsigned NOT NULL,
  PRIMARY KEY (`user_stream_count_id`),
  KEY `total` (`total`),
  KEY `user_id` (`user_id`),
  KEY `stream_extra_id` (`stream_extra_id`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='The number of times a user has taken stream. kind=user';

-- Dumping data for table cobalt_cascade.user_stream_count: ~11 rows (approximately)
/*!40000 ALTER TABLE `user_stream_count` DISABLE KEYS */;
INSERT INTO `user_stream_count` (`user_stream_count_id`, `user_id`, `stream_extra_id`, `total`) VALUES
	(1, 1, 2, 1),
	(2, 1, 15, 1),
	(3, 1, 16, 2),
	(4, 1, 17, 1),
	(5, 1, 18, 1),
	(6, 1, 19, 1),
	(7, 5, 17, 1),
	(8, 5, 19, 1),
	(17, 10000, 10082, 11),
	(18, 10000, 10083, 1),
	(24, 10169, 10094, 1);
/*!40000 ALTER TABLE `user_stream_count` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_stream_subscription
CREATE TABLE IF NOT EXISTS `user_stream_subscription` (
  `user_stream_subscription_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned NOT NULL,
  `site_id` int(11) unsigned NOT NULL COMMENT 'The id of the client website that these subscriptions are for.',
  `stream_extra_id` int(11) unsigned NOT NULL,
  `version_type` int(11) unsigned NOT NULL COMMENT 'The version type of the stream or post_group',
  `display_order` int(11) unsigned NOT NULL COMMENT 'items with the same display order are displayed together',
  `locked` bit(1) NOT NULL DEFAULT b'0' COMMENT 'Can the user unsubscribe from this stream.',
  PRIMARY KEY (`user_stream_subscription_id`),
  UNIQUE KEY `user_id` (`user_id`,`display_order`,`site_id`),
  KEY `stream_extra_id` (`stream_extra_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11062 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='The streams that a user is subscribed to';

-- Dumping data for table cobalt_cascade.user_stream_subscription: ~328 rows (approximately)
/*!40000 ALTER TABLE `user_stream_subscription` DISABLE KEYS */;
INSERT INTO `user_stream_subscription` (`user_stream_subscription_id`, `user_id`, `site_id`, `stream_extra_id`, `version_type`, `display_order`, `locked`) VALUES
	(1, 1, 10000, 1, 35, 1, b'00000000'),
	(2, 2, 10000, 1, 35, 1, b'00000000'),
	(3, 1, 10000, 6, 35, 2, b'00000000'),
	(4, 1, 10000, 7, 35, 3, b'00000000'),
	(5, 1, 10000, 8, 35, 4, b'00000000'),
	(6, 1, 10000, 2, 35, 5, b'00000000'),
	(7, 1, 10000, 10, 35, 7, b'00000000'),
	(8, 1, 10000, 12, 35, 9, b'00000000'),
	(9, 1, 10000, 11, 35, 8, b'00000000'),
	(10, 1, 10000, 1, 35, 6, b'00000000'),
	(11, 1, 10000, 13, 35, 10, b'00000000'),
	(12, 1, 10000, 14, 35, 11, b'00000000'),
	(13, 1, 10000, 1, 35, 12, b'00000000'),
	(14, 1, 10000, 1, 35, 13, b'00000000'),
	(15, 1, 10000, 22, 35, 14, b'00000000'),
	(16, 1, 10000, 23, 35, 15, b'00000000'),
	(17, 1, 10000, 24, 35, 16, b'00000000'),
	(18, 1, 10000, 25, 35, 17, b'00000000'),
	(19, 1, 10000, 34, 35, 18, b'00000000'),
	(10000, 10000, 10000, 10001, 32, 4, b'10000000'),
	(10001, 10000, 10000, 10008, 32, 2, b'10000000'),
	(10010, 10000, 10000, 10012, 32, 1, b'10000000'),
	(10012, 10000, 10000, 10017, 32, 3, b'10000000'),
	(10014, 10000, 10000, 10018, 32, 5, b'10000000'),
	(10198, 10058, 10000, 10012, 32, 1, b'10000000'),
	(10199, 10058, 10000, 10008, 32, 2, b'00000000'),
	(10200, 10058, 10000, 10017, 32, 3, b'00000000'),
	(10201, 10058, 10000, 10001, 32, 4, b'00000000'),
	(10202, 10058, 10000, 10018, 32, 5, b'00000000'),
	(10204, 10000, 10000, 10022, 32, 7, b'00000000'),
	(10206, 10059, 10000, 10012, 32, 1, b'10000000'),
	(10207, 10059, 10000, 10008, 32, 2, b'00000000'),
	(10208, 10059, 10000, 10017, 32, 3, b'00000000'),
	(10209, 10059, 10000, 10001, 32, 4, b'00000000'),
	(10210, 10059, 10000, 10018, 32, 5, b'00000000'),
	(10211, 10059, 10000, 10021, 32, 6, b'00000000'),
	(10212, 10059, 10000, 10022, 32, 7, b'00000000'),
	(10213, 10060, 10000, 10012, 32, 1, b'10000000'),
	(10214, 10060, 10000, 10008, 32, 2, b'00000000'),
	(10215, 10060, 10000, 10017, 32, 3, b'00000000'),
	(10216, 10060, 10000, 10001, 32, 4, b'00000000'),
	(10217, 10060, 10000, 10018, 32, 5, b'00000000'),
	(10218, 10060, 10000, 10021, 32, 6, b'00000000'),
	(10219, 10060, 10000, 10022, 32, 7, b'00000000'),
	(10220, 10061, 10000, 10012, 32, 1, b'10000000'),
	(10221, 10061, 10000, 10008, 32, 2, b'00000000'),
	(10222, 10061, 10000, 10017, 32, 3, b'00000000'),
	(10223, 10061, 10000, 10001, 32, 4, b'00000000'),
	(10224, 10061, 10000, 10018, 32, 5, b'00000000'),
	(10225, 10061, 10000, 10021, 32, 6, b'00000000'),
	(10226, 10061, 10000, 10022, 32, 7, b'00000000'),
	(10227, 10062, 10000, 10012, 32, 1, b'10000000'),
	(10228, 10062, 10000, 10008, 32, 2, b'00000000'),
	(10229, 10062, 10000, 10017, 32, 3, b'00000000'),
	(10230, 10062, 10000, 10001, 32, 4, b'00000000'),
	(10231, 10062, 10000, 10018, 32, 5, b'00000000'),
	(10232, 10062, 10000, 10021, 32, 6, b'00000000'),
	(10233, 10062, 10000, 10022, 32, 7, b'00000000'),
	(10234, 10063, 10000, 10012, 32, 1, b'10000000'),
	(10235, 10063, 10000, 10008, 32, 2, b'00000000'),
	(10236, 10063, 10000, 10017, 32, 3, b'00000000'),
	(10237, 10063, 10000, 10001, 32, 4, b'00000000'),
	(10238, 10063, 10000, 10018, 32, 5, b'00000000'),
	(10239, 10063, 10000, 10021, 32, 6, b'00000000'),
	(10240, 10063, 10000, 10022, 32, 7, b'00000000'),
	(10241, 10064, 10000, 10012, 32, 1, b'10000000'),
	(10242, 10064, 10000, 10008, 32, 2, b'00000000'),
	(10243, 10064, 10000, 10017, 32, 3, b'00000000'),
	(10244, 10064, 10000, 10001, 32, 4, b'00000000'),
	(10245, 10064, 10000, 10018, 32, 5, b'00000000'),
	(10246, 10064, 10000, 10021, 32, 6, b'00000000'),
	(10247, 10064, 10000, 10022, 32, 7, b'00000000'),
	(10248, 10065, 10000, 10012, 32, 1, b'10000000'),
	(10249, 10065, 10000, 10008, 32, 2, b'00000000'),
	(10250, 10065, 10000, 10017, 32, 3, b'00000000'),
	(10251, 10065, 10000, 10001, 32, 4, b'00000000'),
	(10252, 10065, 10000, 10018, 32, 5, b'00000000'),
	(10253, 10065, 10000, 10021, 32, 6, b'00000000'),
	(10254, 10065, 10000, 10022, 32, 7, b'00000000'),
	(10255, 10066, 10000, 10012, 32, 1, b'10000000'),
	(10256, 10066, 10000, 10008, 32, 2, b'00000000'),
	(10257, 10066, 10000, 10017, 32, 3, b'00000000'),
	(10258, 10066, 10000, 10001, 32, 4, b'00000000'),
	(10259, 10066, 10000, 10018, 32, 5, b'00000000'),
	(10260, 10066, 10000, 10021, 32, 6, b'00000000'),
	(10261, 10066, 10000, 10022, 32, 7, b'00000000'),
	(10262, 10067, 10000, 10012, 32, 1, b'10000000'),
	(10263, 10067, 10000, 10008, 32, 2, b'00000000'),
	(10264, 10067, 10000, 10017, 32, 3, b'00000000'),
	(10265, 10067, 10000, 10001, 32, 4, b'00000000'),
	(10266, 10067, 10000, 10018, 32, 5, b'00000000'),
	(10267, 10067, 10000, 10021, 32, 6, b'00000000'),
	(10268, 10067, 10000, 10022, 32, 7, b'00000000'),
	(10269, 10068, 10000, 10012, 32, 1, b'10000000'),
	(10270, 10068, 10000, 10008, 32, 2, b'00000000'),
	(10271, 10068, 10000, 10017, 32, 3, b'00000000'),
	(10272, 10068, 10000, 10001, 32, 4, b'00000000'),
	(10273, 10068, 10000, 10018, 32, 5, b'00000000'),
	(10274, 10068, 10000, 10021, 32, 6, b'00000000'),
	(10275, 10068, 10000, 10022, 32, 7, b'00000000'),
	(10276, 10069, 10000, 10012, 32, 1, b'10000000'),
	(10277, 10069, 10000, 10008, 32, 2, b'00000000'),
	(10278, 10069, 10000, 10017, 32, 3, b'00000000'),
	(10279, 10069, 10000, 10001, 32, 4, b'00000000'),
	(10280, 10069, 10000, 10018, 32, 5, b'00000000'),
	(10281, 10069, 10000, 10021, 32, 6, b'00000000'),
	(10282, 10069, 10000, 10022, 32, 7, b'00000000'),
	(10283, 10070, 10000, 10012, 32, 1, b'10000000'),
	(10284, 10070, 10000, 10008, 32, 2, b'00000000'),
	(10285, 10070, 10000, 10017, 32, 3, b'00000000'),
	(10286, 10070, 10000, 10001, 32, 4, b'00000000'),
	(10287, 10070, 10000, 10018, 32, 5, b'00000000'),
	(10288, 10070, 10000, 10021, 32, 6, b'00000000'),
	(10289, 10070, 10000, 10022, 32, 7, b'00000000'),
	(10290, 10071, 10000, 10012, 32, 1, b'10000000'),
	(10291, 10071, 10000, 10008, 32, 2, b'00000000'),
	(10292, 10071, 10000, 10017, 32, 3, b'00000000'),
	(10293, 10071, 10000, 10001, 32, 4, b'00000000'),
	(10294, 10071, 10000, 10018, 32, 5, b'00000000'),
	(10295, 10071, 10000, 10021, 32, 6, b'00000000'),
	(10296, 10071, 10000, 10022, 32, 7, b'00000000'),
	(10297, 10072, 10000, 10012, 32, 1, b'10000000'),
	(10298, 10072, 10000, 10008, 32, 2, b'00000000'),
	(10299, 10072, 10000, 10017, 32, 3, b'00000000'),
	(10300, 10072, 10000, 10001, 32, 4, b'00000000'),
	(10301, 10072, 10000, 10018, 32, 5, b'00000000'),
	(10302, 10072, 10000, 10021, 32, 6, b'00000000'),
	(10303, 10072, 10000, 10022, 32, 7, b'00000000'),
	(10304, 10073, 10000, 10012, 32, 1, b'10000000'),
	(10305, 10073, 10000, 10008, 32, 2, b'00000000'),
	(10306, 10073, 10000, 10017, 32, 3, b'00000000'),
	(10307, 10073, 10000, 10001, 32, 4, b'00000000'),
	(10308, 10073, 10000, 10018, 32, 5, b'00000000'),
	(10309, 10073, 10000, 10021, 32, 6, b'00000000'),
	(10310, 10073, 10000, 10022, 32, 7, b'00000000'),
	(10311, 10000, 10000, 10028, 32, 8, b'00000000'),
	(10312, 10074, 10000, 10012, 32, 1, b'10000000'),
	(10313, 10074, 10000, 10018, 32, 2, b'00000000'),
	(10314, 10074, 10000, 10028, 32, 3, b'00000000'),
	(10315, 10075, 10000, 10012, 32, 1, b'10000000'),
	(10316, 10075, 10000, 10018, 32, 2, b'00000000'),
	(10317, 10075, 10000, 10028, 32, 3, b'00000000'),
	(10318, 10076, 10000, 10012, 32, 1, b'10000000'),
	(10319, 10076, 10000, 10018, 32, 2, b'00000000'),
	(10320, 10076, 10000, 10028, 32, 3, b'00000000'),
	(10321, 10077, 10000, 10012, 32, 1, b'10000000'),
	(10322, 10077, 10000, 10018, 32, 2, b'00000000'),
	(10323, 10077, 10000, 10028, 32, 3, b'00000000'),
	(10410, 10093, 10000, 10012, 32, 1, b'10000000'),
	(10411, 10093, 10000, 10028, 32, 2, b'00000000'),
	(10412, 10093, 10000, 10029, 32, 3, b'00000000'),
	(10413, 10093, 10000, 10008, 32, 4, b'00000000'),
	(10414, 10093, 10000, 10017, 32, 5, b'00000000'),
	(10415, 10093, 10000, 10001, 32, 6, b'00000000'),
	(10416, 10093, 10000, 10018, 32, 7, b'00000000'),
	(10417, 10093, 10000, 10021, 32, 8, b'00000000'),
	(10418, 10093, 10000, 10022, 32, 9, b'00000000'),
	(10446, 10097, 10000, 10012, 32, 1, b'10000000'),
	(10447, 10097, 10000, 10028, 32, 2, b'00000000'),
	(10448, 10097, 10000, 10029, 32, 3, b'00000000'),
	(10449, 10097, 10000, 10008, 32, 4, b'00000000'),
	(10450, 10097, 10000, 10017, 32, 5, b'00000000'),
	(10451, 10097, 10000, 10001, 32, 6, b'00000000'),
	(10452, 10097, 10000, 10018, 32, 7, b'00000000'),
	(10453, 10097, 10000, 10021, 32, 8, b'00000000'),
	(10454, 10097, 10000, 10022, 32, 9, b'00000000'),
	(10546, 10107, 10000, 10012, 32, 1, b'10000000'),
	(10547, 10107, 10000, 10028, 32, 2, b'00000000'),
	(10548, 10107, 10000, 10029, 32, 3, b'00000000'),
	(10549, 10107, 10000, 10008, 32, 4, b'00000000'),
	(10550, 10107, 10000, 10017, 32, 5, b'00000000'),
	(10551, 10107, 10000, 10001, 32, 6, b'00000000'),
	(10552, 10107, 10000, 10018, 32, 7, b'00000000'),
	(10553, 10107, 10000, 10021, 32, 8, b'00000000'),
	(10554, 10107, 10000, 10022, 32, 9, b'00000000'),
	(10555, 10108, 10000, 10012, 32, 1, b'10000000'),
	(10556, 10108, 10000, 10028, 32, 2, b'00000000'),
	(10557, 10108, 10000, 10029, 32, 3, b'00000000'),
	(10558, 10108, 10000, 10008, 32, 4, b'00000000'),
	(10559, 10108, 10000, 10017, 32, 5, b'00000000'),
	(10560, 10108, 10000, 10001, 32, 6, b'00000000'),
	(10561, 10108, 10000, 10018, 32, 7, b'00000000'),
	(10562, 10108, 10000, 10021, 32, 8, b'00000000'),
	(10563, 10108, 10000, 10022, 32, 9, b'00000000'),
	(10564, 10109, 10000, 10012, 32, 1, b'10000000'),
	(10565, 10109, 10000, 10028, 32, 2, b'00000000'),
	(10566, 10109, 10000, 10029, 32, 3, b'00000000'),
	(10567, 10109, 10000, 10008, 32, 4, b'00000000'),
	(10568, 10109, 10000, 10017, 32, 5, b'00000000'),
	(10569, 10109, 10000, 10001, 32, 6, b'00000000'),
	(10570, 10109, 10000, 10018, 32, 7, b'00000000'),
	(10571, 10109, 10000, 10021, 32, 8, b'00000000'),
	(10572, 10109, 10000, 10022, 32, 9, b'00000000'),
	(10573, 10110, 10000, 10012, 32, 1, b'10000000'),
	(10574, 10110, 10000, 10028, 32, 2, b'00000000'),
	(10575, 10110, 10000, 10029, 32, 3, b'00000000'),
	(10576, 10110, 10000, 10008, 32, 4, b'00000000'),
	(10577, 10110, 10000, 10017, 32, 5, b'00000000'),
	(10578, 10110, 10000, 10001, 32, 6, b'00000000'),
	(10579, 10110, 10000, 10018, 32, 7, b'00000000'),
	(10580, 10110, 10000, 10021, 32, 8, b'00000000'),
	(10581, 10110, 10000, 10022, 32, 9, b'00000000'),
	(10582, 10111, 10000, 10012, 32, 1, b'10000000'),
	(10583, 10111, 10000, 10028, 32, 2, b'00000000'),
	(10584, 10111, 10000, 10029, 32, 3, b'00000000'),
	(10585, 10111, 10000, 10008, 32, 4, b'00000000'),
	(10586, 10111, 10000, 10017, 32, 5, b'00000000'),
	(10587, 10111, 10000, 10001, 32, 6, b'00000000'),
	(10588, 10111, 10000, 10018, 32, 7, b'00000000'),
	(10589, 10111, 10000, 10021, 32, 8, b'00000000'),
	(10590, 10111, 10000, 10022, 32, 9, b'00000000'),
	(10591, 10112, 10000, 10012, 32, 1, b'10000000'),
	(10592, 10112, 10000, 10028, 32, 2, b'00000000'),
	(10593, 10112, 10000, 10029, 32, 3, b'00000000'),
	(10594, 10112, 10000, 10008, 32, 4, b'00000000'),
	(10595, 10112, 10000, 10017, 32, 5, b'00000000'),
	(10596, 10112, 10000, 10001, 32, 6, b'00000000'),
	(10597, 10112, 10000, 10018, 32, 7, b'00000000'),
	(10598, 10112, 10000, 10021, 32, 8, b'00000000'),
	(10599, 10112, 10000, 10022, 32, 9, b'00000000'),
	(10600, 10113, 10000, 10012, 32, 1, b'10000000'),
	(10601, 10113, 10000, 10028, 32, 2, b'00000000'),
	(10602, 10113, 10000, 10029, 32, 3, b'00000000'),
	(10603, 10113, 10000, 10008, 32, 4, b'00000000'),
	(10604, 10113, 10000, 10017, 32, 5, b'00000000'),
	(10605, 10113, 10000, 10001, 32, 6, b'00000000'),
	(10606, 10113, 10000, 10018, 32, 7, b'00000000'),
	(10607, 10113, 10000, 10021, 32, 8, b'00000000'),
	(10608, 10113, 10000, 10022, 32, 9, b'00000000'),
	(10609, 10114, 10000, 10012, 32, 1, b'10000000'),
	(10610, 10114, 10000, 10028, 32, 2, b'00000000'),
	(10611, 10114, 10000, 10029, 32, 3, b'00000000'),
	(10612, 10114, 10000, 10008, 32, 4, b'00000000'),
	(10613, 10114, 10000, 10017, 32, 5, b'00000000'),
	(10614, 10114, 10000, 10001, 32, 6, b'00000000'),
	(10615, 10114, 10000, 10018, 32, 7, b'00000000'),
	(10616, 10114, 10000, 10021, 32, 8, b'00000000'),
	(10617, 10114, 10000, 10022, 32, 9, b'00000000'),
	(10618, 10115, 10000, 10012, 32, 1, b'10000000'),
	(10619, 10115, 10000, 10028, 32, 2, b'00000000'),
	(10620, 10115, 10000, 10029, 32, 3, b'00000000'),
	(10621, 10115, 10000, 10008, 32, 4, b'00000000'),
	(10622, 10115, 10000, 10017, 32, 5, b'00000000'),
	(10623, 10115, 10000, 10001, 32, 6, b'00000000'),
	(10624, 10115, 10000, 10018, 32, 7, b'00000000'),
	(10625, 10115, 10000, 10021, 32, 8, b'00000000'),
	(10626, 10115, 10000, 10022, 32, 9, b'00000000'),
	(10627, 10116, 10000, 10012, 32, 1, b'10000000'),
	(10628, 10116, 10000, 10028, 32, 2, b'00000000'),
	(10629, 10116, 10000, 10029, 32, 3, b'00000000'),
	(10630, 10116, 10000, 10008, 32, 4, b'00000000'),
	(10631, 10116, 10000, 10017, 32, 5, b'00000000'),
	(10632, 10116, 10000, 10001, 32, 6, b'00000000'),
	(10633, 10116, 10000, 10018, 32, 7, b'00000000'),
	(10634, 10116, 10000, 10021, 32, 8, b'00000000'),
	(10635, 10116, 10000, 10022, 32, 9, b'00000000'),
	(10636, 10117, 10000, 10012, 32, 1, b'10000000'),
	(10637, 10117, 10000, 10028, 32, 2, b'00000000'),
	(10638, 10117, 10000, 10029, 32, 3, b'00000000'),
	(10639, 10117, 10000, 10008, 32, 4, b'00000000'),
	(10640, 10117, 10000, 10017, 32, 5, b'00000000'),
	(10641, 10117, 10000, 10001, 32, 6, b'00000000'),
	(10642, 10117, 10000, 10018, 32, 7, b'00000000'),
	(10643, 10117, 10000, 10021, 32, 8, b'00000000'),
	(10644, 10117, 10000, 10022, 32, 9, b'00000000'),
	(10645, 10118, 10000, 10012, 32, 1, b'10000000'),
	(10646, 10118, 10000, 10028, 32, 2, b'00000000'),
	(10647, 10118, 10000, 10029, 32, 3, b'00000000'),
	(10648, 10118, 10000, 10008, 32, 4, b'00000000'),
	(10649, 10118, 10000, 10017, 32, 5, b'00000000'),
	(10650, 10118, 10000, 10001, 32, 6, b'00000000'),
	(10651, 10118, 10000, 10018, 32, 7, b'00000000'),
	(10652, 10118, 10000, 10021, 32, 8, b'00000000'),
	(10653, 10118, 10000, 10022, 32, 9, b'00000000'),
	(10656, 10119, 10000, 10012, 32, 1, b'10000000'),
	(10657, 10119, 10000, 10028, 32, 2, b'00000000'),
	(10658, 10119, 10000, 10029, 32, 3, b'00000000'),
	(10659, 10119, 10000, 10008, 32, 4, b'00000000'),
	(10660, 10119, 10000, 10017, 32, 5, b'00000000'),
	(10661, 10119, 10000, 10001, 32, 6, b'00000000'),
	(10662, 10119, 10000, 10018, 32, 7, b'00000000'),
	(10663, 10119, 10000, 10021, 32, 8, b'00000000'),
	(10664, 10119, 10000, 10022, 32, 9, b'00000000'),
	(10665, 10120, 10000, 10012, 32, 1, b'10000000'),
	(10666, 10120, 10000, 10028, 32, 2, b'00000000'),
	(10667, 10120, 10000, 10029, 32, 3, b'00000000'),
	(10668, 10120, 10000, 10008, 32, 4, b'00000000'),
	(10669, 10120, 10000, 10017, 32, 5, b'00000000'),
	(10670, 10120, 10000, 10001, 32, 6, b'00000000'),
	(10671, 10120, 10000, 10018, 32, 7, b'00000000'),
	(10672, 10120, 10000, 10021, 32, 8, b'00000000'),
	(10673, 10120, 10000, 10022, 32, 9, b'00000000'),
	(10674, 10121, 10000, 10012, 32, 1, b'10000000'),
	(10675, 10121, 10000, 10028, 32, 2, b'00000000'),
	(10676, 10121, 10000, 10029, 32, 3, b'00000000'),
	(10677, 10121, 10000, 10008, 32, 4, b'00000000'),
	(10678, 10121, 10000, 10017, 32, 5, b'00000000'),
	(10679, 10121, 10000, 10001, 32, 6, b'00000000'),
	(10680, 10121, 10000, 10018, 32, 7, b'00000000'),
	(10681, 10121, 10000, 10021, 32, 8, b'00000000'),
	(10682, 10121, 10000, 10022, 32, 9, b'00000000'),
	(10695, 10000, 10000, 10021, 32, 9, b'00000000'),
	(10803, 10140, 10000, 10012, 32, 1, b'00000000'),
	(10804, 10140, 10000, 10028, 32, 2, b'00000000'),
	(10805, 10140, 10000, 10029, 32, 3, b'00000000'),
	(10806, 10140, 10000, 10017, 32, 4, b'00000000'),
	(10807, 10140, 10000, 10001, 32, 5, b'00000000'),
	(10808, 10140, 10000, 10018, 32, 6, b'00000000'),
	(10809, 10140, 10000, 10021, 32, 7, b'00000000'),
	(10810, 10140, 10000, 10022, 32, 8, b'00000000'),
	(10821, 10141, 10000, 10012, 32, 1, b'10000000'),
	(10822, 10141, 10000, 10028, 32, 2, b'00000000'),
	(10823, 10141, 10000, 10029, 32, 3, b'00000000'),
	(10824, 10141, 10000, 10017, 32, 4, b'00000000'),
	(10825, 10141, 10000, 10001, 32, 5, b'00000000'),
	(10826, 10141, 10000, 10018, 32, 6, b'00000000'),
	(10827, 10141, 10000, 10021, 32, 7, b'00000000'),
	(10828, 10141, 10000, 10022, 32, 8, b'00000000'),
	(11045, 10169, 10000, 10012, 32, 1, b'10000000'),
	(11046, 10169, 10000, 10028, 32, 2, b'00000000'),
	(11047, 10169, 10000, 10029, 32, 3, b'00000000'),
	(11048, 10169, 10000, 10017, 32, 4, b'00000000'),
	(11049, 10169, 10000, 10001, 32, 5, b'00000000'),
	(11050, 10169, 10000, 10018, 32, 6, b'00000000'),
	(11051, 10169, 10000, 10021, 32, 7, b'00000000'),
	(11052, 10169, 10000, 10022, 32, 8, b'00000000'),
	(11053, 10169, 10000, 10021, 32, 9, b'00000000'),
	(11054, 10169, 10000, 10021, 32, 10, b'00000000'),
	(11055, 10169, 10000, 10021, 32, 11, b'00000000'),
	(11056, 10169, 10000, 10021, 32, 12, b'00000000'),
	(11057, 10169, 10000, 10022, 32, 13, b'00000000'),
	(11058, 10169, 10000, 10093, 32, 14, b'00000000'),
	(11059, 10169, 10000, 10029, 32, 15, b'00000000'),
	(11060, 10169, 10000, 10003, 32, 16, b'00000000'),
	(11061, 10169, 10000, 10008, 32, 17, b'00000000');
/*!40000 ALTER TABLE `user_stream_subscription` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_stream_subscription_filter
CREATE TABLE IF NOT EXISTS `user_stream_subscription_filter` (
  `user_stream_subscription_filter_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_stream_subscription_id` int(11) unsigned NOT NULL,
  `rhythm_extra_id` int(11) unsigned NOT NULL,
  `version_type` int(11) unsigned NOT NULL COMMENT 'version type for the Rhythm (see lookup table)',
  `display_order` int(11) unsigned NOT NULL,
  `locked` bit(1) NOT NULL DEFAULT b'0' COMMENT 'Can the user unsubscribe from this filter.',
  PRIMARY KEY (`user_stream_subscription_filter_id`),
  UNIQUE KEY `user_post_stream_id` (`user_stream_subscription_id`,`display_order`)
) ENGINE=InnoDB AUTO_INCREMENT=13400 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Lists the filters that a user has subscribed to for a stream subscription.';

-- Dumping data for table cobalt_cascade.user_stream_subscription_filter: ~730 rows (approximately)
/*!40000 ALTER TABLE `user_stream_subscription_filter` DISABLE KEYS */;
INSERT INTO `user_stream_subscription_filter` (`user_stream_subscription_filter_id`, `user_stream_subscription_id`, `rhythm_extra_id`, `version_type`, `display_order`, `locked`) VALUES
	(1, 1, 1, 32, 1, b'00000000'),
	(2, 1, 2, 32, 2, b'00000000'),
	(3, 2, 1, 32, 1, b'00000000'),
	(4, 2, 2, 32, 2, b'00000000'),
	(5, 3, 1, 32, 1, b'00000000'),
	(6, 3, 2, 32, 2, b'00000000'),
	(7, 4, 1, 32, 1, b'00000000'),
	(8, 5, 1, 32, 1, b'00000000'),
	(9, 4, 2, 32, 2, b'00000000'),
	(10, 5, 2, 32, 2, b'00000000'),
	(11, 6, 2, 32, 2, b'00000000'),
	(12, 6, 1, 32, 1, b'00000000'),
	(13, 7, 2, 32, 2, b'00000000'),
	(14, 9, 1, 32, 1, b'00000000'),
	(15, 10, 1, 32, 1, b'00000000'),
	(16, 11, 1, 32, 1, b'00000000'),
	(17, 12, 1, 32, 1, b'00000000'),
	(18, 13, 1, 32, 1, b'00000000'),
	(19, 14, 1, 32, 1, b'00000000'),
	(20, 8, 1, 32, 1, b'00000000'),
	(21, 8, 16, 32, 2, b'00000000'),
	(22, 11, 17, 32, 2, b'00000000'),
	(23, 12, 18, 32, 2, b'00000000'),
	(24, 15, 1, 32, 1, b'00000000'),
	(25, 15, 19, 32, 2, b'00000000'),
	(26, 16, 1, 32, 1, b'00000000'),
	(27, 17, 1, 32, 1, b'00000000'),
	(28, 9, 15, 32, 2, b'00000000'),
	(29, 18, 1, 32, 1, b'00000000'),
	(30, 19, 21, 32, 1, b'00000000'),
	(31, 1, 24, 32, 3, b'00000000'),
	(10010, 10010, 10002, 32, 2, b'10000000'),
	(10016, 10000, 10002, 32, 1, b'00000000'),
	(10018, 10014, 10002, 32, 1, b'00000000'),
	(10019, 10014, 10000, 32, 2, b'00000000'),
	(10035, 10000, 10009, 32, 4, b'00000000'),
	(10036, 10000, 10010, 32, 5, b'00000000'),
	(10054, 10012, 10014, 32, 1, b'00000000'),
	(10055, 10012, 10002, 32, 2, b'00000000'),
	(10058, 10012, 10011, 32, 3, b'00000000'),
	(10059, 10012, 10012, 32, 4, b'00000000'),
	(10060, 10012, 10013, 32, 5, b'00000000'),
	(10061, 10012, 10015, 32, 6, b'00000000'),
	(10063, 10001, 10017, 32, 1, b'00000000'),
	(10064, 10001, 10002, 32, 2, b'00000000'),
	(10077, 10010, 10000, 32, 3, b'10000000'),
	(10592, 10198, 10002, 32, 1, b'00000000'),
	(10593, 10198, 10000, 32, 2, b'00000000'),
	(10594, 10199, 10017, 32, 1, b'00000000'),
	(10595, 10199, 10002, 32, 2, b'00000000'),
	(10596, 10200, 10014, 32, 1, b'00000000'),
	(10597, 10200, 10002, 32, 2, b'00000000'),
	(10598, 10200, 10011, 32, 3, b'00000000'),
	(10599, 10200, 10012, 32, 4, b'00000000'),
	(10600, 10200, 10013, 32, 5, b'00000000'),
	(10601, 10201, 10002, 32, 1, b'00000000'),
	(10602, 10201, 10009, 32, 2, b'00000000'),
	(10603, 10201, 10010, 32, 3, b'00000000'),
	(10604, 10202, 10002, 32, 1, b'00000000'),
	(10605, 10202, 10013, 32, 2, b'00000000'),
	(10606, 10012, 10024, 32, 7, b'00000000'),
	(10607, 10012, 10025, 32, 8, b'00000000'),
	(10608, 10012, 10033, 32, 9, b'00000000'),
	(10609, 10012, 10034, 32, 10, b'00000000'),
	(10610, 10012, 10035, 32, 11, b'00000000'),
	(10611, 10012, 10036, 32, 12, b'00000000'),
	(10612, 10012, 10037, 32, 13, b'00000000'),
	(10614, 10010, 10008, 32, 1, b'10000000'),
	(10617, 10204, 10002, 32, 1, b'00000000'),
	(10620, 10204, 10013, 32, 2, b'00000000'),
	(10624, 10206, 10008, 32, 1, b'00000000'),
	(10625, 10206, 10002, 32, 2, b'00000000'),
	(10626, 10206, 10000, 32, 3, b'00000000'),
	(10627, 10207, 10017, 32, 1, b'00000000'),
	(10628, 10207, 10002, 32, 2, b'00000000'),
	(10629, 10208, 10014, 32, 1, b'00000000'),
	(10630, 10208, 10002, 32, 2, b'00000000'),
	(10631, 10208, 10011, 32, 3, b'00000000'),
	(10632, 10208, 10012, 32, 4, b'00000000'),
	(10633, 10208, 10013, 32, 5, b'00000000'),
	(10634, 10209, 10002, 32, 1, b'00000000'),
	(10635, 10209, 10009, 32, 2, b'00000000'),
	(10636, 10209, 10010, 32, 3, b'00000000'),
	(10637, 10210, 10002, 32, 1, b'00000000'),
	(10638, 10210, 10013, 32, 2, b'00000000'),
	(10639, 10211, 10002, 32, 1, b'00000000'),
	(10640, 10211, 10013, 32, 2, b'00000000'),
	(10641, 10212, 10002, 32, 1, b'00000000'),
	(10642, 10212, 10013, 32, 2, b'00000000'),
	(10643, 10213, 10008, 32, 1, b'00000000'),
	(10644, 10213, 10002, 32, 2, b'00000000'),
	(10645, 10213, 10000, 32, 3, b'00000000'),
	(10646, 10214, 10017, 32, 1, b'00000000'),
	(10647, 10214, 10002, 32, 2, b'00000000'),
	(10648, 10215, 10014, 32, 1, b'00000000'),
	(10649, 10215, 10002, 32, 2, b'00000000'),
	(10650, 10215, 10011, 32, 3, b'00000000'),
	(10651, 10215, 10012, 32, 4, b'00000000'),
	(10652, 10215, 10013, 32, 5, b'00000000'),
	(10653, 10216, 10002, 32, 1, b'00000000'),
	(10654, 10216, 10009, 32, 2, b'00000000'),
	(10655, 10216, 10010, 32, 3, b'00000000'),
	(10656, 10217, 10002, 32, 1, b'00000000'),
	(10657, 10217, 10013, 32, 2, b'00000000'),
	(10658, 10218, 10002, 32, 1, b'00000000'),
	(10659, 10218, 10013, 32, 2, b'00000000'),
	(10660, 10219, 10002, 32, 1, b'00000000'),
	(10661, 10219, 10013, 32, 2, b'00000000'),
	(10662, 10220, 10008, 32, 1, b'00000000'),
	(10663, 10220, 10002, 32, 2, b'00000000'),
	(10664, 10220, 10000, 32, 3, b'00000000'),
	(10665, 10221, 10017, 32, 1, b'00000000'),
	(10666, 10221, 10002, 32, 2, b'00000000'),
	(10667, 10222, 10014, 32, 1, b'00000000'),
	(10668, 10222, 10002, 32, 2, b'00000000'),
	(10669, 10222, 10011, 32, 3, b'00000000'),
	(10670, 10222, 10012, 32, 4, b'00000000'),
	(10671, 10222, 10013, 32, 5, b'00000000'),
	(10672, 10223, 10002, 32, 1, b'00000000'),
	(10673, 10223, 10009, 32, 2, b'00000000'),
	(10674, 10223, 10010, 32, 3, b'00000000'),
	(10675, 10224, 10002, 32, 1, b'00000000'),
	(10676, 10224, 10013, 32, 2, b'00000000'),
	(10677, 10225, 10002, 32, 1, b'00000000'),
	(10678, 10225, 10013, 32, 2, b'00000000'),
	(10679, 10226, 10002, 32, 1, b'00000000'),
	(10680, 10226, 10013, 32, 2, b'00000000'),
	(10681, 10227, 10008, 32, 1, b'00000000'),
	(10682, 10227, 10002, 32, 2, b'00000000'),
	(10683, 10227, 10000, 32, 3, b'00000000'),
	(10684, 10228, 10017, 32, 1, b'00000000'),
	(10685, 10228, 10002, 32, 2, b'00000000'),
	(10686, 10229, 10014, 32, 1, b'00000000'),
	(10687, 10229, 10002, 32, 2, b'00000000'),
	(10688, 10229, 10011, 32, 3, b'00000000'),
	(10689, 10229, 10012, 32, 4, b'00000000'),
	(10690, 10229, 10013, 32, 5, b'00000000'),
	(10691, 10230, 10002, 32, 1, b'00000000'),
	(10692, 10230, 10009, 32, 2, b'00000000'),
	(10693, 10230, 10010, 32, 3, b'00000000'),
	(10694, 10231, 10002, 32, 1, b'00000000'),
	(10695, 10231, 10013, 32, 2, b'00000000'),
	(10696, 10232, 10002, 32, 1, b'00000000'),
	(10697, 10232, 10013, 32, 2, b'00000000'),
	(10698, 10233, 10002, 32, 1, b'00000000'),
	(10699, 10233, 10013, 32, 2, b'00000000'),
	(10700, 10234, 10008, 32, 1, b'00000000'),
	(10701, 10234, 10002, 32, 2, b'00000000'),
	(10702, 10234, 10000, 32, 3, b'00000000'),
	(10703, 10235, 10017, 32, 1, b'00000000'),
	(10704, 10235, 10002, 32, 2, b'00000000'),
	(10705, 10236, 10014, 32, 1, b'00000000'),
	(10706, 10236, 10002, 32, 2, b'00000000'),
	(10707, 10236, 10011, 32, 3, b'00000000'),
	(10708, 10236, 10012, 32, 4, b'00000000'),
	(10709, 10236, 10013, 32, 5, b'00000000'),
	(10710, 10237, 10002, 32, 1, b'00000000'),
	(10711, 10237, 10009, 32, 2, b'00000000'),
	(10712, 10237, 10010, 32, 3, b'00000000'),
	(10713, 10238, 10002, 32, 1, b'00000000'),
	(10714, 10238, 10013, 32, 2, b'00000000'),
	(10715, 10239, 10002, 32, 1, b'00000000'),
	(10716, 10239, 10013, 32, 2, b'00000000'),
	(10717, 10240, 10002, 32, 1, b'00000000'),
	(10718, 10240, 10013, 32, 2, b'00000000'),
	(10719, 10241, 10008, 32, 1, b'00000000'),
	(10720, 10241, 10002, 32, 2, b'00000000'),
	(10721, 10241, 10000, 32, 3, b'00000000'),
	(10722, 10242, 10017, 32, 1, b'00000000'),
	(10723, 10242, 10002, 32, 2, b'00000000'),
	(10724, 10243, 10014, 32, 1, b'00000000'),
	(10725, 10243, 10002, 32, 2, b'00000000'),
	(10726, 10243, 10011, 32, 3, b'00000000'),
	(10727, 10243, 10012, 32, 4, b'00000000'),
	(10728, 10243, 10013, 32, 5, b'00000000'),
	(10729, 10244, 10002, 32, 1, b'00000000'),
	(10730, 10244, 10009, 32, 2, b'00000000'),
	(10731, 10244, 10010, 32, 3, b'00000000'),
	(10732, 10245, 10002, 32, 1, b'00000000'),
	(10733, 10245, 10013, 32, 2, b'00000000'),
	(10734, 10246, 10002, 32, 1, b'00000000'),
	(10735, 10246, 10013, 32, 2, b'00000000'),
	(10736, 10247, 10002, 32, 1, b'00000000'),
	(10737, 10247, 10013, 32, 2, b'00000000'),
	(10738, 10248, 10008, 32, 1, b'00000000'),
	(10739, 10248, 10002, 32, 2, b'00000000'),
	(10740, 10248, 10000, 32, 3, b'00000000'),
	(10741, 10249, 10017, 32, 1, b'00000000'),
	(10742, 10249, 10002, 32, 2, b'00000000'),
	(10743, 10250, 10014, 32, 1, b'00000000'),
	(10744, 10250, 10002, 32, 2, b'00000000'),
	(10745, 10250, 10011, 32, 3, b'00000000'),
	(10746, 10250, 10012, 32, 4, b'00000000'),
	(10747, 10250, 10013, 32, 5, b'00000000'),
	(10748, 10251, 10002, 32, 1, b'00000000'),
	(10749, 10251, 10009, 32, 2, b'00000000'),
	(10750, 10251, 10010, 32, 3, b'00000000'),
	(10751, 10252, 10002, 32, 1, b'00000000'),
	(10752, 10252, 10013, 32, 2, b'00000000'),
	(10753, 10253, 10002, 32, 1, b'00000000'),
	(10754, 10253, 10013, 32, 2, b'00000000'),
	(10755, 10254, 10002, 32, 1, b'00000000'),
	(10756, 10254, 10013, 32, 2, b'00000000'),
	(10757, 10255, 10008, 32, 1, b'00000000'),
	(10758, 10255, 10002, 32, 2, b'00000000'),
	(10759, 10255, 10000, 32, 3, b'00000000'),
	(10760, 10256, 10017, 32, 1, b'00000000'),
	(10761, 10256, 10002, 32, 2, b'00000000'),
	(10762, 10257, 10014, 32, 1, b'00000000'),
	(10763, 10257, 10002, 32, 2, b'00000000'),
	(10764, 10257, 10011, 32, 3, b'00000000'),
	(10765, 10257, 10012, 32, 4, b'00000000'),
	(10766, 10257, 10013, 32, 5, b'00000000'),
	(10767, 10258, 10002, 32, 1, b'00000000'),
	(10768, 10258, 10009, 32, 2, b'00000000'),
	(10769, 10258, 10010, 32, 3, b'00000000'),
	(10770, 10259, 10002, 32, 1, b'00000000'),
	(10771, 10259, 10013, 32, 2, b'00000000'),
	(10772, 10260, 10002, 32, 1, b'00000000'),
	(10773, 10260, 10013, 32, 2, b'00000000'),
	(10774, 10261, 10002, 32, 1, b'00000000'),
	(10775, 10261, 10013, 32, 2, b'00000000'),
	(10776, 10262, 10008, 32, 1, b'00000000'),
	(10777, 10262, 10002, 32, 2, b'00000000'),
	(10778, 10262, 10000, 32, 3, b'00000000'),
	(10779, 10263, 10017, 32, 1, b'00000000'),
	(10780, 10263, 10002, 32, 2, b'00000000'),
	(10781, 10264, 10014, 32, 1, b'00000000'),
	(10782, 10264, 10002, 32, 2, b'00000000'),
	(10783, 10264, 10011, 32, 3, b'00000000'),
	(10784, 10264, 10012, 32, 4, b'00000000'),
	(10785, 10264, 10013, 32, 5, b'00000000'),
	(10786, 10265, 10002, 32, 1, b'00000000'),
	(10787, 10265, 10009, 32, 2, b'00000000'),
	(10788, 10265, 10010, 32, 3, b'00000000'),
	(10789, 10266, 10002, 32, 1, b'00000000'),
	(10790, 10266, 10013, 32, 2, b'00000000'),
	(10791, 10267, 10002, 32, 1, b'00000000'),
	(10792, 10267, 10013, 32, 2, b'00000000'),
	(10793, 10268, 10002, 32, 1, b'00000000'),
	(10794, 10268, 10013, 32, 2, b'00000000'),
	(10795, 10269, 10008, 32, 1, b'00000000'),
	(10796, 10269, 10002, 32, 2, b'00000000'),
	(10797, 10269, 10000, 32, 3, b'00000000'),
	(10798, 10270, 10017, 32, 1, b'00000000'),
	(10799, 10270, 10002, 32, 2, b'00000000'),
	(10800, 10271, 10014, 32, 1, b'00000000'),
	(10801, 10271, 10002, 32, 2, b'00000000'),
	(10802, 10271, 10011, 32, 3, b'00000000'),
	(10803, 10271, 10012, 32, 4, b'00000000'),
	(10804, 10271, 10013, 32, 5, b'00000000'),
	(10805, 10272, 10002, 32, 1, b'00000000'),
	(10806, 10272, 10009, 32, 2, b'00000000'),
	(10807, 10272, 10010, 32, 3, b'00000000'),
	(10808, 10273, 10002, 32, 1, b'00000000'),
	(10809, 10273, 10013, 32, 2, b'00000000'),
	(10810, 10274, 10002, 32, 1, b'00000000'),
	(10811, 10274, 10013, 32, 2, b'00000000'),
	(10812, 10275, 10002, 32, 1, b'00000000'),
	(10813, 10275, 10013, 32, 2, b'00000000'),
	(10814, 10276, 10008, 32, 1, b'00000000'),
	(10815, 10276, 10002, 32, 2, b'00000000'),
	(10816, 10276, 10000, 32, 3, b'00000000'),
	(10817, 10277, 10017, 32, 1, b'00000000'),
	(10818, 10277, 10002, 32, 2, b'00000000'),
	(10819, 10278, 10014, 32, 1, b'00000000'),
	(10820, 10278, 10002, 32, 2, b'00000000'),
	(10821, 10278, 10011, 32, 3, b'00000000'),
	(10822, 10278, 10012, 32, 4, b'00000000'),
	(10823, 10278, 10013, 32, 5, b'00000000'),
	(10824, 10279, 10002, 32, 1, b'00000000'),
	(10825, 10279, 10009, 32, 2, b'00000000'),
	(10826, 10279, 10010, 32, 3, b'00000000'),
	(10827, 10280, 10002, 32, 1, b'00000000'),
	(10828, 10280, 10013, 32, 2, b'00000000'),
	(10829, 10281, 10002, 32, 1, b'00000000'),
	(10830, 10281, 10013, 32, 2, b'00000000'),
	(10831, 10282, 10002, 32, 1, b'00000000'),
	(10832, 10282, 10013, 32, 2, b'00000000'),
	(10833, 10283, 10008, 32, 1, b'00000000'),
	(10834, 10283, 10002, 32, 2, b'00000000'),
	(10835, 10283, 10000, 32, 3, b'00000000'),
	(10836, 10284, 10017, 32, 1, b'00000000'),
	(10837, 10284, 10002, 32, 2, b'00000000'),
	(10838, 10285, 10014, 32, 1, b'00000000'),
	(10839, 10285, 10002, 32, 2, b'00000000'),
	(10840, 10285, 10011, 32, 3, b'00000000'),
	(10841, 10285, 10012, 32, 4, b'00000000'),
	(10842, 10285, 10013, 32, 5, b'00000000'),
	(10843, 10286, 10002, 32, 1, b'00000000'),
	(10844, 10286, 10009, 32, 2, b'00000000'),
	(10845, 10286, 10010, 32, 3, b'00000000'),
	(10846, 10287, 10002, 32, 1, b'00000000'),
	(10847, 10287, 10013, 32, 2, b'00000000'),
	(10848, 10288, 10002, 32, 1, b'00000000'),
	(10849, 10288, 10013, 32, 2, b'00000000'),
	(10850, 10289, 10002, 32, 1, b'00000000'),
	(10851, 10289, 10013, 32, 2, b'00000000'),
	(10852, 10290, 10008, 32, 1, b'00000000'),
	(10853, 10290, 10002, 32, 2, b'00000000'),
	(10854, 10290, 10000, 32, 3, b'00000000'),
	(10855, 10291, 10017, 32, 1, b'00000000'),
	(10856, 10291, 10002, 32, 2, b'00000000'),
	(10857, 10292, 10014, 32, 1, b'00000000'),
	(10858, 10292, 10002, 32, 2, b'00000000'),
	(10859, 10292, 10011, 32, 3, b'00000000'),
	(10860, 10292, 10012, 32, 4, b'00000000'),
	(10861, 10292, 10013, 32, 5, b'00000000'),
	(10862, 10293, 10002, 32, 1, b'00000000'),
	(10863, 10293, 10009, 32, 2, b'00000000'),
	(10864, 10293, 10010, 32, 3, b'00000000'),
	(10865, 10294, 10002, 32, 1, b'00000000'),
	(10866, 10294, 10013, 32, 2, b'00000000'),
	(10867, 10295, 10002, 32, 1, b'00000000'),
	(10868, 10295, 10013, 32, 2, b'00000000'),
	(10869, 10296, 10002, 32, 1, b'00000000'),
	(10870, 10296, 10013, 32, 2, b'00000000'),
	(10871, 10297, 10008, 32, 1, b'00000000'),
	(10872, 10297, 10002, 32, 2, b'00000000'),
	(10873, 10297, 10000, 32, 3, b'00000000'),
	(10874, 10298, 10017, 32, 1, b'00000000'),
	(10875, 10298, 10002, 32, 2, b'00000000'),
	(10876, 10299, 10014, 32, 1, b'00000000'),
	(10877, 10299, 10002, 32, 2, b'00000000'),
	(10878, 10299, 10011, 32, 3, b'00000000'),
	(10879, 10299, 10012, 32, 4, b'00000000'),
	(10880, 10299, 10013, 32, 5, b'00000000'),
	(10881, 10300, 10002, 32, 1, b'00000000'),
	(10882, 10300, 10009, 32, 2, b'00000000'),
	(10883, 10300, 10010, 32, 3, b'00000000'),
	(10884, 10301, 10002, 32, 1, b'00000000'),
	(10885, 10301, 10013, 32, 2, b'00000000'),
	(10886, 10302, 10002, 32, 1, b'00000000'),
	(10887, 10302, 10013, 32, 2, b'00000000'),
	(10888, 10303, 10002, 32, 1, b'00000000'),
	(10889, 10303, 10013, 32, 2, b'00000000'),
	(10890, 10304, 10008, 32, 1, b'00000000'),
	(10891, 10304, 10002, 32, 2, b'00000000'),
	(10892, 10304, 10000, 32, 3, b'00000000'),
	(10893, 10305, 10017, 32, 1, b'00000000'),
	(10894, 10305, 10002, 32, 2, b'00000000'),
	(10895, 10306, 10014, 32, 1, b'00000000'),
	(10896, 10306, 10002, 32, 2, b'00000000'),
	(10897, 10306, 10011, 32, 3, b'00000000'),
	(10898, 10306, 10012, 32, 4, b'00000000'),
	(10899, 10306, 10013, 32, 5, b'00000000'),
	(10900, 10307, 10002, 32, 1, b'00000000'),
	(10901, 10307, 10009, 32, 2, b'00000000'),
	(10902, 10307, 10010, 32, 3, b'00000000'),
	(10903, 10308, 10002, 32, 1, b'00000000'),
	(10904, 10308, 10013, 32, 2, b'00000000'),
	(10905, 10309, 10002, 32, 1, b'00000000'),
	(10906, 10309, 10013, 32, 2, b'00000000'),
	(10907, 10310, 10002, 32, 1, b'00000000'),
	(10908, 10310, 10013, 32, 2, b'00000000'),
	(10909, 10012, 10045, 32, 14, b'00000000'),
	(10910, 10311, 10002, 32, 1, b'00000000'),
	(10911, 10311, 10000, 32, 2, b'00000000'),
	(10912, 10312, 10008, 32, 1, b'00000000'),
	(10913, 10312, 10002, 32, 2, b'00000000'),
	(10914, 10312, 10000, 32, 3, b'00000000'),
	(10915, 10313, 10002, 32, 1, b'00000000'),
	(10916, 10313, 10013, 32, 2, b'00000000'),
	(10917, 10314, 10017, 32, 1, b'00000000'),
	(10918, 10314, 10002, 32, 2, b'00000000'),
	(10919, 10315, 10008, 32, 1, b'00000000'),
	(10920, 10315, 10002, 32, 2, b'00000000'),
	(10921, 10315, 10000, 32, 3, b'00000000'),
	(10922, 10316, 10002, 32, 1, b'00000000'),
	(10923, 10316, 10013, 32, 2, b'00000000'),
	(10924, 10317, 10017, 32, 1, b'00000000'),
	(10925, 10317, 10002, 32, 2, b'00000000'),
	(10926, 10318, 10008, 32, 1, b'00000000'),
	(10927, 10318, 10002, 32, 2, b'00000000'),
	(10928, 10318, 10000, 32, 3, b'00000000'),
	(10929, 10319, 10002, 32, 1, b'00000000'),
	(10930, 10319, 10013, 32, 2, b'00000000'),
	(10931, 10320, 10017, 32, 1, b'00000000'),
	(10932, 10320, 10002, 32, 2, b'00000000'),
	(10933, 10321, 10008, 32, 1, b'00000000'),
	(10934, 10321, 10002, 32, 2, b'00000000'),
	(10935, 10321, 10000, 32, 3, b'00000000'),
	(10936, 10322, 10002, 32, 1, b'00000000'),
	(10937, 10322, 10013, 32, 2, b'00000000'),
	(10938, 10323, 10017, 32, 1, b'00000000'),
	(10939, 10323, 10002, 32, 2, b'00000000'),
	(11157, 10410, 10008, 32, 1, b'00000000'),
	(11158, 10410, 10002, 32, 2, b'00000000'),
	(11159, 10410, 10000, 32, 3, b'00000000'),
	(11160, 10411, 10017, 32, 1, b'00000000'),
	(11161, 10411, 10002, 32, 2, b'00000000'),
	(11162, 10412, 10017, 32, 1, b'00000000'),
	(11163, 10412, 10002, 32, 2, b'00000000'),
	(11164, 10413, 10002, 32, 1, b'00000000'),
	(11165, 10413, 10013, 32, 2, b'00000000'),
	(11166, 10414, 10014, 32, 1, b'00000000'),
	(11167, 10414, 10002, 32, 2, b'00000000'),
	(11168, 10414, 10011, 32, 3, b'00000000'),
	(11169, 10414, 10012, 32, 4, b'00000000'),
	(11170, 10414, 10013, 32, 5, b'00000000'),
	(11171, 10415, 10002, 32, 1, b'00000000'),
	(11172, 10415, 10009, 32, 2, b'00000000'),
	(11173, 10415, 10010, 32, 3, b'00000000'),
	(11174, 10416, 10002, 32, 1, b'00000000'),
	(11175, 10416, 10013, 32, 2, b'00000000'),
	(11176, 10417, 10002, 32, 1, b'00000000'),
	(11177, 10417, 10013, 32, 2, b'00000000'),
	(11178, 10418, 10002, 32, 1, b'00000000'),
	(11179, 10418, 10013, 32, 2, b'00000000'),
	(11249, 10446, 10008, 32, 1, b'00000000'),
	(11250, 10446, 10002, 32, 2, b'00000000'),
	(11251, 10446, 10000, 32, 3, b'00000000'),
	(11252, 10447, 10017, 32, 1, b'00000000'),
	(11253, 10447, 10002, 32, 2, b'00000000'),
	(11254, 10448, 10017, 32, 1, b'00000000'),
	(11255, 10448, 10002, 32, 2, b'00000000'),
	(11256, 10449, 10002, 32, 1, b'00000000'),
	(11257, 10449, 10013, 32, 2, b'00000000'),
	(11258, 10450, 10014, 32, 1, b'00000000'),
	(11259, 10450, 10002, 32, 2, b'00000000'),
	(11260, 10450, 10011, 32, 3, b'00000000'),
	(11261, 10450, 10012, 32, 4, b'00000000'),
	(11262, 10450, 10013, 32, 5, b'00000000'),
	(11263, 10451, 10002, 32, 1, b'00000000'),
	(11264, 10451, 10009, 32, 2, b'00000000'),
	(11265, 10451, 10010, 32, 3, b'00000000'),
	(11266, 10452, 10002, 32, 1, b'00000000'),
	(11267, 10452, 10013, 32, 2, b'00000000'),
	(11268, 10453, 10002, 32, 1, b'00000000'),
	(11269, 10453, 10013, 32, 2, b'00000000'),
	(11270, 10454, 10002, 32, 1, b'00000000'),
	(11271, 10454, 10013, 32, 2, b'00000000'),
	(11617, 10546, 10008, 32, 3, b'00000000'),
	(11618, 10546, 10002, 32, 4, b'00000000'),
	(11619, 10546, 10000, 32, 5, b'00000000'),
	(11622, 10547, 10017, 32, 3, b'00000000'),
	(11623, 10547, 10002, 32, 4, b'00000000'),
	(11626, 10548, 10017, 32, 3, b'00000000'),
	(11627, 10548, 10002, 32, 4, b'00000000'),
	(11630, 10549, 10002, 32, 3, b'00000000'),
	(11631, 10549, 10013, 32, 4, b'00000000'),
	(11634, 10550, 10014, 32, 3, b'00000000'),
	(11635, 10550, 10002, 32, 4, b'00000000'),
	(11636, 10550, 10011, 32, 5, b'00000000'),
	(11637, 10550, 10012, 32, 6, b'00000000'),
	(11638, 10550, 10013, 32, 7, b'00000000'),
	(11641, 10551, 10002, 32, 3, b'00000000'),
	(11642, 10551, 10009, 32, 4, b'00000000'),
	(11643, 10551, 10010, 32, 5, b'00000000'),
	(11646, 10552, 10002, 32, 3, b'00000000'),
	(11647, 10552, 10013, 32, 4, b'00000000'),
	(11650, 10553, 10002, 32, 3, b'00000000'),
	(11651, 10553, 10013, 32, 4, b'00000000'),
	(11654, 10554, 10002, 32, 3, b'00000000'),
	(11655, 10554, 10013, 32, 4, b'00000000'),
	(11658, 10555, 10008, 32, 3, b'00000000'),
	(11659, 10555, 10002, 32, 4, b'00000000'),
	(11660, 10555, 10000, 32, 5, b'00000000'),
	(11663, 10556, 10017, 32, 3, b'00000000'),
	(11664, 10556, 10002, 32, 4, b'00000000'),
	(11667, 10557, 10017, 32, 3, b'00000000'),
	(11668, 10557, 10002, 32, 4, b'00000000'),
	(11671, 10558, 10002, 32, 3, b'00000000'),
	(11672, 10558, 10013, 32, 4, b'00000000'),
	(11675, 10559, 10014, 32, 3, b'00000000'),
	(11676, 10559, 10002, 32, 4, b'00000000'),
	(11677, 10559, 10011, 32, 5, b'00000000'),
	(11678, 10559, 10012, 32, 6, b'00000000'),
	(11679, 10559, 10013, 32, 7, b'00000000'),
	(11682, 10560, 10002, 32, 3, b'00000000'),
	(11683, 10560, 10009, 32, 4, b'00000000'),
	(11684, 10560, 10010, 32, 5, b'00000000'),
	(11687, 10561, 10002, 32, 3, b'00000000'),
	(11688, 10561, 10013, 32, 4, b'00000000'),
	(11691, 10562, 10002, 32, 3, b'00000000'),
	(11692, 10562, 10013, 32, 4, b'00000000'),
	(11695, 10563, 10002, 32, 3, b'00000000'),
	(11696, 10563, 10013, 32, 4, b'00000000'),
	(11699, 10564, 10008, 32, 3, b'00000000'),
	(11700, 10564, 10002, 32, 4, b'00000000'),
	(11701, 10564, 10000, 32, 5, b'00000000'),
	(11704, 10565, 10017, 32, 3, b'00000000'),
	(11705, 10565, 10002, 32, 4, b'00000000'),
	(11708, 10566, 10017, 32, 3, b'00000000'),
	(11709, 10566, 10002, 32, 4, b'00000000'),
	(11712, 10567, 10002, 32, 3, b'00000000'),
	(11713, 10567, 10013, 32, 4, b'00000000'),
	(11716, 10568, 10014, 32, 3, b'00000000'),
	(11717, 10568, 10002, 32, 4, b'00000000'),
	(11718, 10568, 10011, 32, 5, b'00000000'),
	(11719, 10568, 10012, 32, 6, b'00000000'),
	(11720, 10568, 10013, 32, 7, b'00000000'),
	(11723, 10569, 10002, 32, 3, b'00000000'),
	(11724, 10569, 10009, 32, 4, b'00000000'),
	(11725, 10569, 10010, 32, 5, b'00000000'),
	(11728, 10570, 10002, 32, 3, b'00000000'),
	(11729, 10570, 10013, 32, 4, b'00000000'),
	(11732, 10571, 10002, 32, 3, b'00000000'),
	(11733, 10571, 10013, 32, 4, b'00000000'),
	(11736, 10572, 10002, 32, 3, b'00000000'),
	(11737, 10572, 10013, 32, 4, b'00000000'),
	(11740, 10573, 10008, 32, 3, b'00000000'),
	(11741, 10573, 10002, 32, 4, b'00000000'),
	(11742, 10573, 10000, 32, 5, b'00000000'),
	(11745, 10574, 10017, 32, 3, b'00000000'),
	(11746, 10574, 10002, 32, 4, b'00000000'),
	(11749, 10575, 10017, 32, 3, b'00000000'),
	(11750, 10575, 10002, 32, 4, b'00000000'),
	(11753, 10576, 10002, 32, 3, b'00000000'),
	(11754, 10576, 10013, 32, 4, b'00000000'),
	(11757, 10577, 10014, 32, 3, b'00000000'),
	(11758, 10577, 10002, 32, 4, b'00000000'),
	(11759, 10577, 10011, 32, 5, b'00000000'),
	(11760, 10577, 10012, 32, 6, b'00000000'),
	(11761, 10577, 10013, 32, 7, b'00000000'),
	(11764, 10578, 10002, 32, 3, b'00000000'),
	(11765, 10578, 10009, 32, 4, b'00000000'),
	(11766, 10578, 10010, 32, 5, b'00000000'),
	(11769, 10579, 10002, 32, 3, b'00000000'),
	(11770, 10579, 10013, 32, 4, b'00000000'),
	(11773, 10580, 10002, 32, 3, b'00000000'),
	(11774, 10580, 10013, 32, 4, b'00000000'),
	(11777, 10581, 10002, 32, 3, b'00000000'),
	(11778, 10581, 10013, 32, 4, b'00000000'),
	(11781, 10582, 10008, 32, 3, b'00000000'),
	(11782, 10582, 10002, 32, 4, b'00000000'),
	(11783, 10582, 10000, 32, 5, b'00000000'),
	(11786, 10583, 10017, 32, 3, b'00000000'),
	(11787, 10583, 10002, 32, 4, b'00000000'),
	(11790, 10584, 10017, 32, 3, b'00000000'),
	(11791, 10584, 10002, 32, 4, b'00000000'),
	(11794, 10585, 10002, 32, 3, b'00000000'),
	(11795, 10585, 10013, 32, 4, b'00000000'),
	(11798, 10586, 10014, 32, 3, b'00000000'),
	(11799, 10586, 10002, 32, 4, b'00000000'),
	(11800, 10586, 10011, 32, 5, b'00000000'),
	(11801, 10586, 10012, 32, 6, b'00000000'),
	(11802, 10586, 10013, 32, 7, b'00000000'),
	(11805, 10587, 10002, 32, 3, b'00000000'),
	(11806, 10587, 10009, 32, 4, b'00000000'),
	(11807, 10587, 10010, 32, 5, b'00000000'),
	(11810, 10588, 10002, 32, 3, b'00000000'),
	(11811, 10588, 10013, 32, 4, b'00000000'),
	(11814, 10589, 10002, 32, 3, b'00000000'),
	(11815, 10589, 10013, 32, 4, b'00000000'),
	(11818, 10590, 10002, 32, 3, b'00000000'),
	(11819, 10590, 10013, 32, 4, b'00000000'),
	(11822, 10591, 10008, 32, 3, b'00000000'),
	(11823, 10591, 10002, 32, 4, b'00000000'),
	(11824, 10591, 10000, 32, 5, b'00000000'),
	(11827, 10592, 10017, 32, 3, b'00000000'),
	(11828, 10592, 10002, 32, 4, b'00000000'),
	(11831, 10593, 10017, 32, 3, b'00000000'),
	(11832, 10593, 10002, 32, 4, b'00000000'),
	(11835, 10594, 10002, 32, 3, b'00000000'),
	(11836, 10594, 10013, 32, 4, b'00000000'),
	(11839, 10595, 10014, 32, 3, b'00000000'),
	(11840, 10595, 10002, 32, 4, b'00000000'),
	(11841, 10595, 10011, 32, 5, b'00000000'),
	(11842, 10595, 10012, 32, 6, b'00000000'),
	(11843, 10595, 10013, 32, 7, b'00000000'),
	(11846, 10596, 10002, 32, 3, b'00000000'),
	(11847, 10596, 10009, 32, 4, b'00000000'),
	(11848, 10596, 10010, 32, 5, b'00000000'),
	(11851, 10597, 10002, 32, 3, b'00000000'),
	(11852, 10597, 10013, 32, 4, b'00000000'),
	(11855, 10598, 10002, 32, 3, b'00000000'),
	(11856, 10598, 10013, 32, 4, b'00000000'),
	(11859, 10599, 10002, 32, 3, b'00000000'),
	(11860, 10599, 10013, 32, 4, b'00000000'),
	(11863, 10600, 10008, 32, 3, b'00000000'),
	(11864, 10600, 10002, 32, 4, b'00000000'),
	(11865, 10600, 10000, 32, 5, b'00000000'),
	(11868, 10601, 10017, 32, 3, b'00000000'),
	(11869, 10601, 10002, 32, 4, b'00000000'),
	(11872, 10602, 10017, 32, 3, b'00000000'),
	(11873, 10602, 10002, 32, 4, b'00000000'),
	(11876, 10603, 10002, 32, 3, b'00000000'),
	(11877, 10603, 10013, 32, 4, b'00000000'),
	(11880, 10604, 10014, 32, 3, b'00000000'),
	(11881, 10604, 10002, 32, 4, b'00000000'),
	(11882, 10604, 10011, 32, 5, b'00000000'),
	(11883, 10604, 10012, 32, 6, b'00000000'),
	(11884, 10604, 10013, 32, 7, b'00000000'),
	(11887, 10605, 10002, 32, 3, b'00000000'),
	(11888, 10605, 10009, 32, 4, b'00000000'),
	(11889, 10605, 10010, 32, 5, b'00000000'),
	(11892, 10606, 10002, 32, 3, b'00000000'),
	(11893, 10606, 10013, 32, 4, b'00000000'),
	(11896, 10607, 10002, 32, 3, b'00000000'),
	(11897, 10607, 10013, 32, 4, b'00000000'),
	(11900, 10608, 10002, 32, 3, b'00000000'),
	(11901, 10608, 10013, 32, 4, b'00000000'),
	(11904, 10609, 10008, 32, 3, b'00000000'),
	(11905, 10609, 10002, 32, 4, b'00000000'),
	(11906, 10609, 10000, 32, 5, b'00000000'),
	(11909, 10610, 10017, 32, 3, b'00000000'),
	(11910, 10610, 10002, 32, 4, b'00000000'),
	(11913, 10611, 10017, 32, 3, b'00000000'),
	(11914, 10611, 10002, 32, 4, b'00000000'),
	(11917, 10612, 10002, 32, 3, b'00000000'),
	(11918, 10612, 10013, 32, 4, b'00000000'),
	(11921, 10613, 10014, 32, 3, b'00000000'),
	(11922, 10613, 10002, 32, 4, b'00000000'),
	(11923, 10613, 10011, 32, 5, b'00000000'),
	(11924, 10613, 10012, 32, 6, b'00000000'),
	(11925, 10613, 10013, 32, 7, b'00000000'),
	(11928, 10614, 10002, 32, 3, b'00000000'),
	(11929, 10614, 10009, 32, 4, b'00000000'),
	(11930, 10614, 10010, 32, 5, b'00000000'),
	(11933, 10615, 10002, 32, 3, b'00000000'),
	(11934, 10615, 10013, 32, 4, b'00000000'),
	(11937, 10616, 10002, 32, 3, b'00000000'),
	(11938, 10616, 10013, 32, 4, b'00000000'),
	(11941, 10617, 10002, 32, 3, b'00000000'),
	(11942, 10617, 10013, 32, 4, b'00000000'),
	(11945, 10618, 10008, 32, 3, b'00000000'),
	(11946, 10618, 10002, 32, 4, b'00000000'),
	(11947, 10618, 10000, 32, 5, b'00000000'),
	(11950, 10619, 10017, 32, 3, b'00000000'),
	(11951, 10619, 10002, 32, 4, b'00000000'),
	(11954, 10620, 10017, 32, 3, b'00000000'),
	(11955, 10620, 10002, 32, 4, b'00000000'),
	(11958, 10621, 10002, 32, 3, b'00000000'),
	(11959, 10621, 10013, 32, 4, b'00000000'),
	(11962, 10622, 10014, 32, 3, b'00000000'),
	(11963, 10622, 10002, 32, 4, b'00000000'),
	(11964, 10622, 10011, 32, 5, b'00000000'),
	(11965, 10622, 10012, 32, 6, b'00000000'),
	(11966, 10622, 10013, 32, 7, b'00000000'),
	(11969, 10623, 10002, 32, 3, b'00000000'),
	(11970, 10623, 10009, 32, 4, b'00000000'),
	(11971, 10623, 10010, 32, 5, b'00000000'),
	(11974, 10624, 10002, 32, 3, b'00000000'),
	(11975, 10624, 10013, 32, 4, b'00000000'),
	(11978, 10625, 10002, 32, 3, b'00000000'),
	(11979, 10625, 10013, 32, 4, b'00000000'),
	(11982, 10626, 10002, 32, 3, b'00000000'),
	(11983, 10626, 10013, 32, 4, b'00000000'),
	(11986, 10627, 10008, 32, 3, b'00000000'),
	(11987, 10627, 10002, 32, 4, b'00000000'),
	(11988, 10627, 10000, 32, 5, b'00000000'),
	(11991, 10628, 10017, 32, 3, b'00000000'),
	(11992, 10628, 10002, 32, 4, b'00000000'),
	(11995, 10629, 10017, 32, 3, b'00000000'),
	(11996, 10629, 10002, 32, 4, b'00000000'),
	(11999, 10630, 10002, 32, 3, b'00000000'),
	(12000, 10630, 10013, 32, 4, b'00000000'),
	(12003, 10631, 10014, 32, 3, b'00000000'),
	(12004, 10631, 10002, 32, 4, b'00000000'),
	(12005, 10631, 10011, 32, 5, b'00000000'),
	(12006, 10631, 10012, 32, 6, b'00000000'),
	(12007, 10631, 10013, 32, 7, b'00000000'),
	(12010, 10632, 10002, 32, 3, b'00000000'),
	(12011, 10632, 10009, 32, 4, b'00000000'),
	(12012, 10632, 10010, 32, 5, b'00000000'),
	(12015, 10633, 10002, 32, 3, b'00000000'),
	(12016, 10633, 10013, 32, 4, b'00000000'),
	(12019, 10634, 10002, 32, 3, b'00000000'),
	(12020, 10634, 10013, 32, 4, b'00000000'),
	(12023, 10635, 10002, 32, 3, b'00000000'),
	(12024, 10635, 10013, 32, 4, b'00000000'),
	(12027, 10636, 10008, 32, 3, b'00000000'),
	(12028, 10636, 10002, 32, 4, b'00000000'),
	(12029, 10636, 10000, 32, 5, b'00000000'),
	(12032, 10637, 10017, 32, 3, b'00000000'),
	(12033, 10637, 10002, 32, 4, b'00000000'),
	(12036, 10638, 10017, 32, 3, b'00000000'),
	(12037, 10638, 10002, 32, 4, b'00000000'),
	(12040, 10639, 10002, 32, 3, b'00000000'),
	(12041, 10639, 10013, 32, 4, b'00000000'),
	(12044, 10640, 10014, 32, 3, b'00000000'),
	(12045, 10640, 10002, 32, 4, b'00000000'),
	(12046, 10640, 10011, 32, 5, b'00000000'),
	(12047, 10640, 10012, 32, 6, b'00000000'),
	(12048, 10640, 10013, 32, 7, b'00000000'),
	(12051, 10641, 10002, 32, 3, b'00000000'),
	(12052, 10641, 10009, 32, 4, b'00000000'),
	(12053, 10641, 10010, 32, 5, b'00000000'),
	(12056, 10642, 10002, 32, 3, b'00000000'),
	(12057, 10642, 10013, 32, 4, b'00000000'),
	(12060, 10643, 10002, 32, 3, b'00000000'),
	(12061, 10643, 10013, 32, 4, b'00000000'),
	(12064, 10644, 10002, 32, 3, b'00000000'),
	(12065, 10644, 10013, 32, 4, b'00000000'),
	(12068, 10645, 10008, 32, 3, b'00000000'),
	(12069, 10645, 10002, 32, 4, b'00000000'),
	(12070, 10645, 10000, 32, 5, b'00000000'),
	(12073, 10646, 10017, 32, 3, b'00000000'),
	(12074, 10646, 10002, 32, 4, b'00000000'),
	(12077, 10647, 10017, 32, 3, b'00000000'),
	(12078, 10647, 10002, 32, 4, b'00000000'),
	(12081, 10648, 10002, 32, 3, b'00000000'),
	(12082, 10648, 10013, 32, 4, b'00000000'),
	(12085, 10649, 10014, 32, 3, b'00000000'),
	(12086, 10649, 10002, 32, 4, b'00000000'),
	(12087, 10649, 10011, 32, 5, b'00000000'),
	(12088, 10649, 10012, 32, 6, b'00000000'),
	(12089, 10649, 10013, 32, 7, b'00000000'),
	(12092, 10650, 10002, 32, 3, b'00000000'),
	(12093, 10650, 10009, 32, 4, b'00000000'),
	(12094, 10650, 10010, 32, 5, b'00000000'),
	(12097, 10651, 10002, 32, 3, b'00000000'),
	(12098, 10651, 10013, 32, 4, b'00000000'),
	(12101, 10652, 10002, 32, 3, b'00000000'),
	(12102, 10652, 10013, 32, 4, b'00000000'),
	(12105, 10653, 10002, 32, 3, b'00000000'),
	(12106, 10653, 10013, 32, 4, b'00000000'),
	(12116, 10656, 10008, 32, 3, b'00000000'),
	(12117, 10656, 10002, 32, 4, b'00000000'),
	(12118, 10656, 10000, 32, 5, b'00000000'),
	(12121, 10657, 10017, 32, 3, b'00000000'),
	(12122, 10657, 10002, 32, 4, b'00000000'),
	(12125, 10658, 10017, 32, 3, b'00000000'),
	(12126, 10658, 10002, 32, 4, b'00000000'),
	(12129, 10659, 10002, 32, 3, b'00000000'),
	(12130, 10659, 10013, 32, 4, b'00000000'),
	(12133, 10660, 10014, 32, 3, b'00000000'),
	(12134, 10660, 10002, 32, 4, b'00000000'),
	(12135, 10660, 10011, 32, 5, b'00000000'),
	(12136, 10660, 10012, 32, 6, b'00000000'),
	(12137, 10660, 10013, 32, 7, b'00000000'),
	(12140, 10661, 10002, 32, 3, b'00000000'),
	(12141, 10661, 10009, 32, 4, b'00000000'),
	(12142, 10661, 10010, 32, 5, b'00000000'),
	(12145, 10662, 10002, 32, 3, b'00000000'),
	(12146, 10662, 10013, 32, 4, b'00000000'),
	(12149, 10663, 10002, 32, 3, b'00000000'),
	(12150, 10663, 10013, 32, 4, b'00000000'),
	(12153, 10664, 10002, 32, 3, b'00000000'),
	(12154, 10664, 10013, 32, 4, b'00000000'),
	(12157, 10665, 10008, 32, 3, b'00000000'),
	(12158, 10665, 10002, 32, 4, b'00000000'),
	(12159, 10665, 10000, 32, 5, b'00000000'),
	(12162, 10666, 10017, 32, 3, b'00000000'),
	(12163, 10666, 10002, 32, 4, b'00000000'),
	(12166, 10667, 10017, 32, 3, b'00000000'),
	(12167, 10667, 10002, 32, 4, b'00000000'),
	(12170, 10668, 10002, 32, 3, b'00000000'),
	(12171, 10668, 10013, 32, 4, b'00000000'),
	(12174, 10669, 10014, 32, 3, b'00000000'),
	(12175, 10669, 10002, 32, 4, b'00000000'),
	(12176, 10669, 10011, 32, 5, b'00000000'),
	(12177, 10669, 10012, 32, 6, b'00000000'),
	(12178, 10669, 10013, 32, 7, b'00000000'),
	(12181, 10670, 10002, 32, 3, b'00000000'),
	(12182, 10670, 10009, 32, 4, b'00000000'),
	(12183, 10670, 10010, 32, 5, b'00000000'),
	(12186, 10671, 10002, 32, 3, b'00000000'),
	(12187, 10671, 10013, 32, 4, b'00000000'),
	(12190, 10672, 10002, 32, 3, b'00000000'),
	(12191, 10672, 10013, 32, 4, b'00000000'),
	(12194, 10673, 10002, 32, 3, b'00000000'),
	(12195, 10673, 10013, 32, 4, b'00000000'),
	(12198, 10674, 10008, 32, 3, b'00000000'),
	(12199, 10674, 10002, 32, 4, b'00000000'),
	(12200, 10674, 10000, 32, 5, b'00000000'),
	(12203, 10675, 10017, 32, 3, b'00000000'),
	(12204, 10675, 10002, 32, 4, b'00000000'),
	(12207, 10676, 10017, 32, 3, b'00000000'),
	(12208, 10676, 10002, 32, 4, b'00000000'),
	(12211, 10677, 10002, 32, 3, b'00000000'),
	(12212, 10677, 10013, 32, 4, b'00000000'),
	(12215, 10678, 10014, 32, 3, b'00000000'),
	(12216, 10678, 10002, 32, 4, b'00000000'),
	(12217, 10678, 10011, 32, 5, b'00000000'),
	(12218, 10678, 10012, 32, 6, b'00000000'),
	(12219, 10678, 10013, 32, 7, b'00000000'),
	(12222, 10679, 10002, 32, 3, b'00000000'),
	(12223, 10679, 10009, 32, 4, b'00000000'),
	(12224, 10679, 10010, 32, 5, b'00000000'),
	(12227, 10680, 10002, 32, 3, b'00000000'),
	(12228, 10680, 10013, 32, 4, b'00000000'),
	(12231, 10681, 10002, 32, 3, b'00000000'),
	(12232, 10681, 10013, 32, 4, b'00000000'),
	(12235, 10682, 10002, 32, 3, b'00000000'),
	(12236, 10682, 10013, 32, 4, b'00000000'),
	(12689, 10803, 10008, 32, 3, b'00000000'),
	(12690, 10803, 10002, 32, 4, b'00000000'),
	(12691, 10803, 10000, 32, 5, b'00000000'),
	(12694, 10804, 10017, 32, 3, b'00000000'),
	(12695, 10804, 10002, 32, 4, b'00000000'),
	(12698, 10805, 10017, 32, 3, b'00000000'),
	(12699, 10805, 10002, 32, 4, b'00000000'),
	(12702, 10806, 10014, 32, 3, b'00000000'),
	(12703, 10806, 10002, 32, 4, b'00000000'),
	(12704, 10806, 10011, 32, 5, b'00000000'),
	(12705, 10806, 10012, 32, 6, b'00000000'),
	(12706, 10806, 10013, 32, 7, b'00000000'),
	(12709, 10807, 10002, 32, 3, b'00000000'),
	(12710, 10807, 10009, 32, 4, b'00000000'),
	(12711, 10807, 10010, 32, 5, b'00000000'),
	(12714, 10808, 10002, 32, 3, b'00000000'),
	(12715, 10808, 10013, 32, 4, b'00000000'),
	(12718, 10809, 10002, 32, 3, b'00000000'),
	(12719, 10809, 10013, 32, 4, b'00000000'),
	(12722, 10810, 10002, 32, 3, b'00000000'),
	(12723, 10810, 10013, 32, 4, b'00000000'),
	(12753, 10821, 10008, 32, 1, b'10000000'),
	(12754, 10821, 10002, 32, 2, b'10000000'),
	(12755, 10821, 10000, 32, 3, b'00000000'),
	(12756, 10822, 10017, 32, 1, b'00000000'),
	(12757, 10822, 10002, 32, 2, b'00000000'),
	(12758, 10823, 10017, 32, 1, b'00000000'),
	(12759, 10823, 10002, 32, 2, b'00000000'),
	(12760, 10824, 10014, 32, 1, b'00000000'),
	(12761, 10824, 10002, 32, 2, b'00000000'),
	(12762, 10824, 10011, 32, 3, b'00000000'),
	(12763, 10824, 10012, 32, 4, b'00000000'),
	(12764, 10824, 10013, 32, 5, b'00000000'),
	(12765, 10825, 10002, 32, 1, b'00000000'),
	(12766, 10825, 10009, 32, 2, b'00000000'),
	(12767, 10825, 10010, 32, 3, b'00000000'),
	(12768, 10826, 10002, 32, 1, b'00000000'),
	(12769, 10826, 10013, 32, 2, b'00000000'),
	(12770, 10827, 10002, 32, 1, b'00000000'),
	(12771, 10827, 10013, 32, 2, b'00000000'),
	(12772, 10828, 10002, 32, 1, b'00000000'),
	(12773, 10828, 10013, 32, 2, b'00000000'),
	(13352, 11045, 10008, 32, 1, b'10000000'),
	(13353, 11045, 10002, 32, 2, b'10000000'),
	(13354, 11045, 10000, 32, 3, b'00000000'),
	(13355, 11046, 10017, 32, 1, b'00000000'),
	(13356, 11046, 10002, 32, 2, b'00000000'),
	(13357, 11047, 10017, 32, 1, b'00000000'),
	(13358, 11047, 10002, 32, 2, b'00000000'),
	(13359, 11048, 10014, 32, 1, b'00000000'),
	(13360, 11048, 10002, 32, 2, b'00000000'),
	(13361, 11048, 10011, 32, 3, b'00000000'),
	(13362, 11048, 10012, 32, 4, b'00000000'),
	(13363, 11048, 10013, 32, 5, b'00000000'),
	(13364, 11049, 10002, 32, 1, b'00000000'),
	(13365, 11049, 10009, 32, 2, b'00000000'),
	(13366, 11049, 10010, 32, 3, b'00000000'),
	(13367, 11050, 10002, 32, 1, b'00000000'),
	(13368, 11050, 10013, 32, 2, b'00000000'),
	(13369, 11051, 10002, 32, 1, b'00000000'),
	(13370, 11051, 10013, 32, 2, b'00000000'),
	(13371, 11052, 10002, 32, 1, b'00000000'),
	(13372, 11052, 10013, 32, 2, b'00000000'),
	(13373, 11053, 1, 32, 1, b'00000000'),
	(13374, 11053, 2, 32, 2, b'00000000'),
	(13375, 11051, 10036, 35, 3, b'00000000'),
	(13376, 11054, 1, 32, 1, b'00000000'),
	(13377, 11054, 2, 32, 2, b'00000000'),
	(13378, 11054, 10049, 35, 3, b'00000000'),
	(13379, 11055, 1, 32, 1, b'00000000'),
	(13380, 11055, 2, 32, 2, b'00000000'),
	(13381, 11056, 1, 32, 1, b'00000000'),
	(13382, 11056, 2, 32, 2, b'00000000'),
	(13383, 11056, 10033, 35, 3, b'00000000'),
	(13384, 11057, 1, 32, 1, b'00000000'),
	(13385, 11057, 2, 32, 2, b'00000000'),
	(13386, 11048, 10049, 35, 6, b'00000000'),
	(13387, 11048, 10025, 35, 7, b'00000000'),
	(13388, 11058, 10000, 32, 2, b'00000000'),
	(13389, 11058, 10002, 32, 3, b'00000000'),
	(13390, 11058, 10025, 35, 4, b'00000000'),
	(13391, 11059, 1, 32, 1, b'00000000'),
	(13392, 11059, 2, 32, 2, b'00000000'),
	(13393, 11059, 10025, 35, 3, b'00000000'),
	(13394, 11060, 1, 32, 1, b'00000000'),
	(13395, 11060, 2, 32, 2, b'00000000'),
	(13396, 11060, 10025, 35, 3, b'00000000'),
	(13397, 11061, 1, 32, 1, b'00000000'),
	(13398, 11061, 2, 32, 2, b'00000000'),
	(13399, 11061, 10002, 35, 3, b'00000000');
/*!40000 ALTER TABLE `user_stream_subscription_filter` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_stream_subscription_ring
CREATE TABLE IF NOT EXISTS `user_stream_subscription_ring` (
  `user_stream_subscription_ring_id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'The primary key of the table.',
  `user_stream_subscription_id` int(11) unsigned NOT NULL COMMENT 'The id of the ring that is being used.',
  `ring_id` int(11) unsigned NOT NULL COMMENT 'The id of the ring that is being used.',
  `locked` bit(1) NOT NULL DEFAULT b'0' COMMENT 'Is the subscription locked.',
  `display_order` int(10) NOT NULL COMMENT 'The display order of the rings.',
  PRIMARY KEY (`user_stream_subscription_ring_id`),
  KEY `user_post_stream_id` (`user_stream_subscription_id`),
  KEY `ring_id` (`ring_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11108 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Moderation rings for a users stream subscriptions.';

-- Dumping data for table cobalt_cascade.user_stream_subscription_ring: ~324 rows (approximately)
/*!40000 ALTER TABLE `user_stream_subscription_ring` DISABLE KEYS */;
INSERT INTO `user_stream_subscription_ring` (`user_stream_subscription_ring_id`, `user_stream_subscription_id`, `ring_id`, `locked`, `display_order`) VALUES
	(1, 1, 1, b'00000000', 0),
	(2, 17, 1, b'00000000', 0),
	(10000, 10000, 10000, b'00000000', 1),
	(10001, 10001, 10000, b'00000000', 1),
	(10002, 10002, 10000, b'00000000', 1),
	(10003, 10003, 10000, b'00000000', 1),
	(10008, 10010, 10000, b'00000000', 1),
	(10009, 10011, 10000, b'00000000', 1),
	(10010, 10012, 10000, b'00000000', 1),
	(10011, 10013, 10000, b'00000000', 1),
	(10012, 10014, 10000, b'00000000', 1),
	(10184, 10182, 10000, b'00000000', 1),
	(10185, 10183, 10000, b'00000000', 1),
	(10186, 10184, 10000, b'00000000', 1),
	(10187, 10185, 10000, b'00000000', 1),
	(10188, 10186, 10000, b'00000000', 1),
	(10200, 10198, 10000, b'00000000', 1),
	(10201, 10199, 10000, b'00000000', 1),
	(10202, 10200, 10000, b'00000000', 1),
	(10203, 10201, 10000, b'00000000', 1),
	(10204, 10202, 10000, b'00000000', 1),
	(10206, 10204, 10000, b'00000000', 1),
	(10209, 10206, 10000, b'00000000', 1),
	(10210, 10207, 10000, b'00000000', 1),
	(10211, 10208, 10000, b'00000000', 1),
	(10212, 10209, 10000, b'00000000', 1),
	(10213, 10210, 10000, b'00000000', 1),
	(10214, 10211, 10000, b'00000000', 1),
	(10215, 10212, 10000, b'00000000', 1),
	(10216, 10213, 10000, b'00000000', 1),
	(10217, 10214, 10000, b'00000000', 1),
	(10218, 10215, 10000, b'00000000', 1),
	(10219, 10216, 10000, b'00000000', 1),
	(10220, 10217, 10000, b'00000000', 1),
	(10221, 10218, 10000, b'00000000', 1),
	(10222, 10219, 10000, b'00000000', 1),
	(10223, 10220, 10000, b'00000000', 1),
	(10224, 10221, 10000, b'00000000', 1),
	(10225, 10222, 10000, b'00000000', 1),
	(10226, 10223, 10000, b'00000000', 1),
	(10227, 10224, 10000, b'00000000', 1),
	(10228, 10225, 10000, b'00000000', 1),
	(10229, 10226, 10000, b'00000000', 1),
	(10230, 10227, 10000, b'00000000', 1),
	(10231, 10228, 10000, b'00000000', 1),
	(10232, 10229, 10000, b'00000000', 1),
	(10233, 10230, 10000, b'00000000', 1),
	(10234, 10231, 10000, b'00000000', 1),
	(10235, 10232, 10000, b'00000000', 1),
	(10236, 10233, 10000, b'00000000', 1),
	(10237, 10234, 10000, b'00000000', 1),
	(10238, 10235, 10000, b'00000000', 1),
	(10239, 10236, 10000, b'00000000', 1),
	(10240, 10237, 10000, b'00000000', 1),
	(10241, 10238, 10000, b'00000000', 1),
	(10242, 10239, 10000, b'00000000', 1),
	(10243, 10240, 10000, b'00000000', 1),
	(10244, 10241, 10000, b'00000000', 1),
	(10245, 10242, 10000, b'00000000', 1),
	(10246, 10243, 10000, b'00000000', 1),
	(10247, 10244, 10000, b'00000000', 1),
	(10248, 10245, 10000, b'00000000', 1),
	(10249, 10246, 10000, b'00000000', 1),
	(10250, 10247, 10000, b'00000000', 1),
	(10251, 10248, 10000, b'00000000', 1),
	(10252, 10249, 10000, b'00000000', 1),
	(10253, 10250, 10000, b'00000000', 1),
	(10254, 10251, 10000, b'00000000', 1),
	(10255, 10252, 10000, b'00000000', 1),
	(10256, 10253, 10000, b'00000000', 1),
	(10257, 10254, 10000, b'00000000', 1),
	(10258, 10255, 10000, b'00000000', 1),
	(10259, 10256, 10000, b'00000000', 1),
	(10260, 10257, 10000, b'00000000', 1),
	(10261, 10258, 10000, b'00000000', 1),
	(10262, 10259, 10000, b'00000000', 1),
	(10263, 10260, 10000, b'00000000', 1),
	(10264, 10261, 10000, b'00000000', 1),
	(10265, 10262, 10000, b'00000000', 1),
	(10266, 10263, 10000, b'00000000', 1),
	(10267, 10264, 10000, b'00000000', 1),
	(10268, 10265, 10000, b'00000000', 1),
	(10269, 10266, 10000, b'00000000', 1),
	(10270, 10267, 10000, b'00000000', 1),
	(10271, 10268, 10000, b'00000000', 1),
	(10272, 10269, 10000, b'00000000', 1),
	(10273, 10270, 10000, b'00000000', 1),
	(10274, 10271, 10000, b'00000000', 1),
	(10275, 10272, 10000, b'00000000', 1),
	(10276, 10273, 10000, b'00000000', 1),
	(10277, 10274, 10000, b'00000000', 1),
	(10278, 10275, 10000, b'00000000', 1),
	(10279, 10276, 10000, b'00000000', 1),
	(10280, 10277, 10000, b'00000000', 1),
	(10281, 10278, 10000, b'00000000', 1),
	(10282, 10279, 10000, b'00000000', 1),
	(10283, 10280, 10000, b'00000000', 1),
	(10284, 10281, 10000, b'00000000', 1),
	(10285, 10282, 10000, b'00000000', 1),
	(10286, 10283, 10000, b'00000000', 1),
	(10287, 10284, 10000, b'00000000', 1),
	(10288, 10285, 10000, b'00000000', 1),
	(10289, 10286, 10000, b'00000000', 1),
	(10290, 10287, 10000, b'00000000', 1),
	(10291, 10288, 10000, b'00000000', 1),
	(10292, 10289, 10000, b'00000000', 1),
	(10293, 10290, 10000, b'00000000', 1),
	(10294, 10291, 10000, b'00000000', 1),
	(10295, 10292, 10000, b'00000000', 1),
	(10296, 10293, 10000, b'00000000', 1),
	(10297, 10294, 10000, b'00000000', 1),
	(10298, 10295, 10000, b'00000000', 1),
	(10299, 10296, 10000, b'00000000', 1),
	(10300, 10297, 10000, b'00000000', 1),
	(10301, 10298, 10000, b'00000000', 1),
	(10302, 10299, 10000, b'00000000', 1),
	(10303, 10300, 10000, b'00000000', 1),
	(10304, 10301, 10000, b'00000000', 1),
	(10305, 10302, 10000, b'00000000', 1),
	(10306, 10303, 10000, b'00000000', 1),
	(10307, 10304, 10000, b'00000000', 1),
	(10308, 10305, 10000, b'00000000', 1),
	(10309, 10306, 10000, b'00000000', 1),
	(10310, 10307, 10000, b'00000000', 1),
	(10311, 10308, 10000, b'00000000', 1),
	(10312, 10309, 10000, b'00000000', 1),
	(10313, 10310, 10000, b'00000000', 1),
	(10314, 10311, 10000, b'00000000', 1),
	(10315, 10312, 10000, b'00000000', 1),
	(10316, 10313, 10000, b'00000000', 1),
	(10317, 10314, 10000, b'00000000', 1),
	(10318, 10315, 10000, b'00000000', 1),
	(10319, 10316, 10000, b'00000000', 1),
	(10320, 10317, 10000, b'00000000', 1),
	(10321, 10318, 10000, b'00000000', 1),
	(10322, 10319, 10000, b'00000000', 1),
	(10323, 10320, 10000, b'00000000', 1),
	(10324, 10321, 10000, b'00000000', 1),
	(10325, 10322, 10000, b'00000000', 1),
	(10326, 10323, 10000, b'00000000', 1),
	(10411, 10410, 10000, b'00000000', 1),
	(10412, 10411, 10000, b'00000000', 1),
	(10413, 10412, 10000, b'00000000', 1),
	(10414, 10413, 10000, b'00000000', 1),
	(10415, 10414, 10000, b'00000000', 1),
	(10416, 10415, 10000, b'00000000', 1),
	(10417, 10416, 10000, b'00000000', 1),
	(10418, 10417, 10000, b'00000000', 1),
	(10419, 10418, 10000, b'00000000', 1),
	(10447, 10446, 10000, b'00000000', 1),
	(10448, 10447, 10000, b'00000000', 1),
	(10449, 10448, 10000, b'00000000', 1),
	(10450, 10449, 10000, b'00000000', 1),
	(10451, 10450, 10000, b'00000000', 1),
	(10452, 10451, 10000, b'00000000', 1),
	(10453, 10452, 10000, b'00000000', 1),
	(10454, 10453, 10000, b'00000000', 1),
	(10455, 10454, 10000, b'00000000', 1),
	(10466, 10465, 10000, b'00000000', 1),
	(10469, 10468, 10000, b'00000000', 1),
	(10547, 10546, 10000, b'00000000', 1),
	(10548, 10547, 10000, b'00000000', 1),
	(10549, 10548, 10000, b'00000000', 1),
	(10550, 10549, 10000, b'00000000', 1),
	(10551, 10550, 10000, b'00000000', 1),
	(10552, 10551, 10000, b'00000000', 1),
	(10553, 10552, 10000, b'00000000', 1),
	(10554, 10553, 10000, b'00000000', 1),
	(10555, 10554, 10000, b'00000000', 1),
	(10556, 10555, 10000, b'00000000', 1),
	(10557, 10556, 10000, b'00000000', 1),
	(10558, 10557, 10000, b'00000000', 1),
	(10559, 10558, 10000, b'00000000', 1),
	(10560, 10559, 10000, b'00000000', 1),
	(10561, 10560, 10000, b'00000000', 1),
	(10562, 10561, 10000, b'00000000', 1),
	(10563, 10562, 10000, b'00000000', 1),
	(10564, 10563, 10000, b'00000000', 1),
	(10565, 10564, 10000, b'00000000', 1),
	(10566, 10565, 10000, b'00000000', 1),
	(10567, 10566, 10000, b'00000000', 1),
	(10568, 10567, 10000, b'00000000', 1),
	(10569, 10568, 10000, b'00000000', 1),
	(10570, 10569, 10000, b'00000000', 1),
	(10571, 10570, 10000, b'00000000', 1),
	(10572, 10571, 10000, b'00000000', 1),
	(10573, 10572, 10000, b'00000000', 1),
	(10574, 10573, 10000, b'00000000', 1),
	(10575, 10574, 10000, b'00000000', 1),
	(10576, 10575, 10000, b'00000000', 1),
	(10577, 10576, 10000, b'00000000', 1),
	(10578, 10577, 10000, b'00000000', 1),
	(10579, 10578, 10000, b'00000000', 1),
	(10580, 10579, 10000, b'00000000', 1),
	(10581, 10580, 10000, b'00000000', 1),
	(10582, 10581, 10000, b'00000000', 1),
	(10583, 10582, 10000, b'00000000', 1),
	(10584, 10583, 10000, b'00000000', 1),
	(10585, 10584, 10000, b'00000000', 1),
	(10586, 10585, 10000, b'00000000', 1),
	(10587, 10586, 10000, b'00000000', 1),
	(10588, 10587, 10000, b'00000000', 1),
	(10589, 10588, 10000, b'00000000', 1),
	(10590, 10589, 10000, b'00000000', 1),
	(10591, 10590, 10000, b'00000000', 1),
	(10592, 10591, 10000, b'00000000', 1),
	(10593, 10592, 10000, b'00000000', 1),
	(10594, 10593, 10000, b'00000000', 1),
	(10595, 10594, 10000, b'00000000', 1),
	(10596, 10595, 10000, b'00000000', 1),
	(10597, 10596, 10000, b'00000000', 1),
	(10598, 10597, 10000, b'00000000', 1),
	(10599, 10598, 10000, b'00000000', 1),
	(10600, 10599, 10000, b'00000000', 1),
	(10601, 10600, 10000, b'00000000', 1),
	(10602, 10601, 10000, b'00000000', 1),
	(10603, 10602, 10000, b'00000000', 1),
	(10604, 10603, 10000, b'00000000', 1),
	(10605, 10604, 10000, b'00000000', 1),
	(10606, 10605, 10000, b'00000000', 1),
	(10607, 10606, 10000, b'00000000', 1),
	(10608, 10607, 10000, b'00000000', 1),
	(10609, 10608, 10000, b'00000000', 1),
	(10610, 10609, 10000, b'00000000', 1),
	(10611, 10610, 10000, b'00000000', 1),
	(10612, 10611, 10000, b'00000000', 1),
	(10613, 10612, 10000, b'00000000', 1),
	(10614, 10613, 10000, b'00000000', 1),
	(10615, 10614, 10000, b'00000000', 1),
	(10616, 10615, 10000, b'00000000', 1),
	(10617, 10616, 10000, b'00000000', 1),
	(10618, 10617, 10000, b'00000000', 1),
	(10619, 10618, 10000, b'00000000', 1),
	(10620, 10619, 10000, b'00000000', 1),
	(10621, 10620, 10000, b'00000000', 1),
	(10622, 10621, 10000, b'00000000', 1),
	(10623, 10622, 10000, b'00000000', 1),
	(10624, 10623, 10000, b'00000000', 1),
	(10625, 10624, 10000, b'00000000', 1),
	(10626, 10625, 10000, b'00000000', 1),
	(10627, 10626, 10000, b'00000000', 1),
	(10628, 10627, 10000, b'00000000', 1),
	(10629, 10628, 10000, b'00000000', 1),
	(10630, 10629, 10000, b'00000000', 1),
	(10631, 10630, 10000, b'00000000', 1),
	(10632, 10631, 10000, b'00000000', 1),
	(10633, 10632, 10000, b'00000000', 1),
	(10634, 10633, 10000, b'00000000', 1),
	(10635, 10634, 10000, b'00000000', 1),
	(10636, 10635, 10000, b'00000000', 1),
	(10637, 10636, 10000, b'00000000', 1),
	(10638, 10637, 10000, b'00000000', 1),
	(10639, 10638, 10000, b'00000000', 1),
	(10640, 10639, 10000, b'00000000', 1),
	(10641, 10640, 10000, b'00000000', 1),
	(10642, 10641, 10000, b'00000000', 1),
	(10643, 10642, 10000, b'00000000', 1),
	(10644, 10643, 10000, b'00000000', 1),
	(10645, 10644, 10000, b'00000000', 1),
	(10646, 10645, 10000, b'00000000', 1),
	(10647, 10646, 10000, b'00000000', 1),
	(10648, 10647, 10000, b'00000000', 1),
	(10649, 10648, 10000, b'00000000', 1),
	(10650, 10649, 10000, b'00000000', 1),
	(10651, 10650, 10000, b'00000000', 1),
	(10652, 10651, 10000, b'00000000', 1),
	(10653, 10652, 10000, b'00000000', 1),
	(10654, 10653, 10000, b'00000000', 1),
	(10658, 10012, 10006, b'00000000', 1),
	(10667, 10656, 10000, b'00000000', 1),
	(10668, 10657, 10000, b'00000000', 1),
	(10669, 10658, 10000, b'00000000', 1),
	(10670, 10659, 10000, b'00000000', 1),
	(10671, 10660, 10000, b'00000000', 1),
	(10672, 10661, 10000, b'00000000', 1),
	(10673, 10662, 10000, b'00000000', 1),
	(10674, 10663, 10000, b'00000000', 1),
	(10675, 10664, 10000, b'00000000', 1),
	(10676, 10665, 10000, b'00000000', 1),
	(10677, 10666, 10000, b'00000000', 1),
	(10678, 10667, 10000, b'00000000', 1),
	(10679, 10668, 10000, b'00000000', 1),
	(10680, 10669, 10000, b'00000000', 1),
	(10681, 10670, 10000, b'00000000', 1),
	(10682, 10671, 10000, b'00000000', 1),
	(10683, 10672, 10000, b'00000000', 1),
	(10684, 10673, 10000, b'00000000', 1),
	(10685, 10674, 10000, b'00000000', 1),
	(10686, 10675, 10000, b'00000000', 1),
	(10687, 10676, 10000, b'00000000', 1),
	(10688, 10677, 10000, b'00000000', 1),
	(10689, 10678, 10000, b'00000000', 1),
	(10690, 10679, 10000, b'00000000', 1),
	(10691, 10680, 10000, b'00000000', 1),
	(10692, 10681, 10000, b'00000000', 1),
	(10693, 10682, 10000, b'00000000', 1),
	(10710, 10695, 10000, b'00000000', 1),
	(10838, 10803, 10000, b'00000000', 1),
	(10839, 10804, 10000, b'00000000', 1),
	(10840, 10805, 10000, b'00000000', 1),
	(10841, 10806, 10000, b'00000000', 1),
	(10842, 10807, 10000, b'00000000', 1),
	(10843, 10808, 10000, b'00000000', 1),
	(10844, 10809, 10000, b'00000000', 1),
	(10845, 10810, 10000, b'00000000', 1),
	(10858, 10821, 10000, b'00000000', 1),
	(10859, 10822, 10000, b'00000000', 1),
	(10860, 10823, 10000, b'00000000', 1),
	(10861, 10824, 10000, b'00000000', 1),
	(10862, 10825, 10000, b'00000000', 1),
	(10863, 10826, 10000, b'00000000', 1),
	(10864, 10827, 10000, b'00000000', 1),
	(10865, 10828, 10000, b'00000000', 1),
	(11088, 11045, 10000, b'00000000', 1),
	(11089, 11046, 10000, b'00000000', 1),
	(11090, 11047, 10000, b'00000000', 1),
	(11091, 11048, 10000, b'00000000', 1),
	(11092, 11049, 10000, b'00000000', 1),
	(11093, 11050, 10000, b'00000000', 1),
	(11094, 11051, 10000, b'00000000', 1),
	(11095, 11052, 10000, b'00000000', 1),
	(11096, 11053, 10000, b'00000000', 1),
	(11097, 11051, 10012, b'00000000', 2),
	(11098, 11054, 10000, b'00000000', 1),
	(11099, 11055, 10000, b'00000000', 1),
	(11100, 11056, 10000, b'00000000', 1),
	(11101, 11057, 10000, b'00000000', 1),
	(11102, 11058, 10000, b'00000000', 1),
	(11103, 11059, 10000, b'00000000', 1),
	(11104, 11060, 10000, b'00000000', 1),
	(11105, 11060, 10016, b'00000000', 2),
	(11106, 11061, 10000, b'00000000', 1),
	(11107, 11061, 10012, b'00000000', 2);
/*!40000 ALTER TABLE `user_stream_subscription_ring` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.user_take
CREATE TABLE IF NOT EXISTS `user_take` (
  `user_take_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL COMMENT 'The user who has been taken',
  `stream_extra_id` int(11) NOT NULL COMMENT 'The stream used to take the user',
  `take_id` int(11) NOT NULL COMMENT 'The id of the take. This will not be local if the stream is not local.',
  `post_id` int(11) NOT NULL COMMENT 'The id of the post. This will not be local if the stream is not local.',
  `take_user_id` int(11) NOT NULL COMMENT 'The id of the user who has taken this post',
  PRIMARY KEY (`user_take_id`),
  KEY `user_id` (`user_id`),
  KEY `post_id` (`post_id`),
  KEY `take_user_id` (`take_user_id`),
  KEY `take_id` (`take_id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Records all posts takes, where stream.kind = user';

-- Dumping data for table cobalt_cascade.user_take: ~10 rows (approximately)
/*!40000 ALTER TABLE `user_take` DISABLE KEYS */;
INSERT INTO `user_take` (`user_take_id`, `user_id`, `stream_extra_id`, `take_id`, `post_id`, `take_user_id`) VALUES
	(1, 5, 2, 9, 50, 1),
	(2, 4, 15, 10, 51, 1),
	(3, 4, 16, 11, 52, 1),
	(4, 4, 17, 12, 53, 1),
	(5, 4, 18, 13, 54, 1),
	(6, 4, 19, 14, 55, 1),
	(7, 4, 17, 15, 53, 5),
	(8, 4, 19, 16, 55, 5),
	(9, 5, 16, 18, 57, 1),
	(15, 10000, 10094, 10387, 10976, 10169);
/*!40000 ALTER TABLE `user_take` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.version
CREATE TABLE IF NOT EXISTS `version` (
  `version_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `family_id` int(11) unsigned NOT NULL COMMENT 'The table holds versions for multiple things.  This associaiates all versions of the same thing together',
  `type` int(11) unsigned NOT NULL COMMENT 'The thing that is versioned. See lookup table for valid values',
  `major` int(11) unsigned NOT NULL,
  `minor` int(11) unsigned NOT NULL,
  `patch` int(11) unsigned NOT NULL,
  PRIMARY KEY (`version_id`),
  KEY `version_master` (`family_id`,`major`,`minor`,`patch`),
  KEY `type` (`type`)
) ENGINE=InnoDB AUTO_INCREMENT=10216 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Version information for any other table that requires versio';

-- Dumping data for table cobalt_cascade.version: ~147 rows (approximately)
/*!40000 ALTER TABLE `version` DISABLE KEYS */;
INSERT INTO `version` (`version_id`, `family_id`, `type`, `major`, `minor`, `patch`) VALUES
	(1, 1, 29, 0, 0, 0),
	(2, 1, 30, 0, 0, 0),
	(3, 2, 30, 0, 0, 0),
	(4, 2, 29, 0, 0, 0),
	(5, 3, 29, 0, 0, 0),
	(7, 3, 30, 0, 0, 0),
	(8, 4, 29, 0, 0, 0),
	(9, 4, 30, 0, 0, 0),
	(10, 5, 30, 0, 0, 0),
	(11, 6, 30, 0, 0, 0),
	(12, 7, 30, 0, 0, 0),
	(13, 5, 29, 0, 0, 0),
	(14, 6, 29, 0, 0, 0),
	(15, 7, 29, 0, 0, 0),
	(16, 8, 29, 0, 0, 0),
	(17, 20, 29, 0, 0, 0),
	(18, 8, 30, 0, 0, 0),
	(19, 9, 30, 0, 0, 0),
	(20, 10, 30, 0, 0, 0),
	(21, 9, 29, 0, 0, 0),
	(22, 10, 29, 0, 0, 0),
	(23, 11, 29, 0, 0, 0),
	(24, 12, 29, 0, 0, 0),
	(25, 13, 29, 0, 0, 0),
	(26, 14, 29, 0, 0, 0),
	(27, 12, 30, 0, 0, 0),
	(28, 11, 30, 0, 0, 0),
	(29, 15, 29, 0, 0, 0),
	(30, 16, 29, 0, 0, 0),
	(31, 17, 29, 0, 0, 0),
	(32, 18, 29, 0, 0, 0),
	(33, 19, 29, 0, 0, 0),
	(34, 13, 30, 0, 0, 0),
	(35, 1, 29, 0, 0, 1),
	(36, 13, 30, 0, 0, 1),
	(38, 14, 30, 0, 0, 0),
	(39, 15, 30, 0, 0, 0),
	(40, 15, 30, 0, 0, 1),
	(41, 15, 30, 0, 0, 2),
	(42, 15, 30, 0, 0, 3),
	(43, 21, 29, 0, 0, 0),
	(44, 22, 29, 0, 0, 0),
	(45, 23, 29, 0, 0, 0),
	(47, 24, 29, 0, 0, 0),
	(48, 25, 29, 0, 0, 0),
	(50, 7, 30, 0, 0, 1),
	(53, 30, 29, 0, 0, 0),
	(54, 31, 29, 0, 0, 0),
	(55, 32, 29, 0, 0, 0),
	(56, 16, 30, 0, 0, 0),
	(57, 33, 29, 0, 0, 0),
	(58, 17, 30, 0, 0, 0),
	(59, 18, 30, 0, 0, 0),
	(60, 19, 30, 0, 0, 0),
	(10000, 10000, 29, 0, 0, 0),
	(10001, 10001, 29, 0, 0, 0),
	(10002, 10002, 29, 0, 0, 0),
	(10003, 10003, 29, 0, 0, 0),
	(10004, 10004, 29, 0, 0, 0),
	(10005, 10005, 29, 0, 0, 0),
	(10008, 10000, 30, 0, 0, 0),
	(10010, 10006, 29, 0, 0, 0),
	(10013, 10009, 29, 0, 0, 0),
	(10014, 10002, 30, 0, 0, 0),
	(10024, 10014, 29, 0, 0, 0),
	(10025, 10015, 29, 0, 0, 0),
	(10026, 10008, 30, 0, 0, 0),
	(10027, 10009, 30, 0, 0, 0),
	(10028, 10010, 30, 0, 0, 0),
	(10029, 10011, 30, 0, 0, 0),
	(10030, 10012, 30, 0, 0, 0),
	(10031, 10013, 30, 0, 0, 0),
	(10032, 10014, 30, 0, 0, 0),
	(10033, 10015, 30, 0, 0, 0),
	(10034, 10016, 30, 0, 0, 0),
	(10035, 10017, 30, 0, 0, 0),
	(10036, 10018, 30, 0, 0, 0),
	(10037, 10019, 30, 0, 0, 0),
	(10038, 10020, 30, 0, 0, 0),
	(10039, 10021, 30, 0, 0, 0),
	(10040, 10022, 30, 0, 0, 0),
	(10041, 10023, 30, 0, 0, 0),
	(10042, 10016, 29, 0, 0, 0),
	(10044, 10024, 30, 0, 0, 0),
	(10045, 10025, 30, 0, 0, 0),
	(10053, 10026, 30, 0, 0, 0),
	(10054, 10027, 30, 0, 0, 0),
	(10055, 10028, 30, 0, 0, 0),
	(10056, 10029, 30, 0, 0, 0),
	(10057, 10030, 30, 0, 0, 0),
	(10058, 10018, 29, 0, 0, 0),
	(10059, 10019, 29, 0, 0, 0),
	(10072, 10037, 30, 0, 0, 0),
	(10073, 10023, 29, 0, 0, 0),
	(10074, 10024, 29, 0, 0, 0),
	(10080, 10040, 30, 0, 0, 0),
	(10121, 10047, 30, 0, 0, 0),
	(10122, 10048, 30, 0, 0, 0),
	(10123, 10049, 30, 0, 0, 0),
	(10124, 10050, 30, 0, 0, 0),
	(10125, 10051, 30, 0, 0, 0),
	(10126, 10052, 30, 0, 0, 0),
	(10127, 10053, 30, 0, 0, 0),
	(10128, 10054, 30, 0, 0, 0),
	(10131, 10083, 29, 0, 0, 0),
	(10132, 10056, 30, 0, 0, 0),
	(10134, 10085, 29, 0, 0, 0),
	(10135, 10086, 29, 0, 0, 0),
	(10148, 10099, 29, 0, 0, 0),
	(10149, 10100, 29, 0, 0, 0),
	(10150, 10101, 29, 0, 0, 0),
	(10151, 10102, 29, 0, 0, 0),
	(10152, 10057, 30, 0, 0, 0),
	(10153, 10058, 30, 0, 0, 0),
	(10154, 10088, 29, 0, 0, 0),
	(10155, 10089, 29, 0, 0, 0),
	(10158, 10092, 29, 0, 0, 0),
	(10159, 10093, 29, 0, 0, 0),
	(10161, 10095, 29, 0, 0, 0),
	(10162, 10096, 29, 0, 0, 0),
	(10163, 10097, 29, 0, 0, 0),
	(10164, 10098, 29, 0, 0, 0),
	(10166, 10100, 29, 0, 0, 0),
	(10167, 10101, 29, 0, 0, 0),
	(10169, 10103, 29, 0, 0, 0),
	(10170, 10104, 29, 0, 0, 0),
	(10171, 10105, 29, 0, 0, 0),
	(10172, 10106, 29, 0, 0, 0),
	(10173, 10107, 29, 0, 0, 0),
	(10174, 10108, 29, 0, 0, 0),
	(10175, 10109, 29, 0, 0, 0),
	(10176, 10110, 29, 0, 0, 0),
	(10177, 10111, 29, 0, 0, 0),
	(10179, 10086, 29, 0, 0, 1),
	(10187, 10080, 29, 0, 0, 1),
	(10188, 10080, 29, 0, 0, 2),
	(10189, 10080, 29, 0, 0, 3),
	(10190, 10113, 29, 0, 0, 0),
	(10193, 10106, 29, 0, 0, 0),
	(10194, 10107, 29, 0, 0, 0),
	(10197, 10109, 29, 0, 0, 1),
	(10202, 10114, 29, 0, 0, 0),
	(10203, 10115, 29, 0, 0, 0),
	(10204, 10115, 29, 0, 0, 1),
	(10205, 10115, 29, 0, 0, 2),
	(10210, 10060, 30, 0, 0, 1),
	(10215, 10120, 29, 0, 0, 0);
/*!40000 ALTER TABLE `version` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade.waiting_post_time
CREATE TABLE IF NOT EXISTS `waiting_post_time` (
  `waiting_post_time_id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'The primary key of this table.',
  `user_id` int(10) unsigned NOT NULL COMMENT 'The id of the user whos message count is recorded.',
  `site_id` int(10) DEFAULT NULL COMMENT 'The site id of the local inbox. If null then this is the global inbox.',
  `time_updated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Timestamp for the last time this user accessed this inbox.',
  `type_id` int(10) unsigned NOT NULL DEFAULT '164' COMMENT 'The type of time wait. See Lookup table for valid values.',
  PRIMARY KEY (`waiting_post_time_id`),
  UNIQUE KEY `user_id` (`user_id`,`site_id`,`type_id`)
) ENGINE=InnoDB AUTO_INCREMENT=10025 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Povides the last time a user accessed their inbox.';

-- Dumping data for table cobalt_cascade.waiting_post_time: ~7 rows (approximately)
/*!40000 ALTER TABLE `waiting_post_time` DISABLE KEYS */;
INSERT INTO `waiting_post_time` (`waiting_post_time_id`, `user_id`, `site_id`, `time_updated`, `type_id`) VALUES
	(10000, 10000, 1, '2010-10-24 13:17:44', 164),
	(10001, 10000, 10000, '2014-07-10 16:32:00', 164),
	(10002, 10000, NULL, '2014-07-10 16:32:17', 164),
	(10011, 10000, 10000, '2014-07-10 16:32:00', 165),
	(10012, 10000, NULL, '2014-07-10 16:32:17', 165),
	(10023, 10169, 10000, '2014-09-11 11:06:58', 165),
	(10024, 10169, 10000, '2014-09-11 11:06:58', 164);
/*!40000 ALTER TABLE `waiting_post_time` ENABLE KEYS */;


-- Dumping structure for table cobalt_cascade._subtree
CREATE TABLE IF NOT EXISTS `_subtree` (
  `child_id` int(11) unsigned NOT NULL COMMENT 'child stream_extra_id',
  `parent_id` int(11) unsigned NOT NULL COMMENT 'parent stream_extra_id',
  `level` int(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`child_id`,`parent_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- Dumping data for table cobalt_cascade._subtree: 2 rows
/*!40000 ALTER TABLE `_subtree` DISABLE KEYS */;
INSERT INTO `_subtree` (`child_id`, `parent_id`, `level`) VALUES
	(10003, 10012, 0),
	(10003, 10003, 1);
/*!40000 ALTER TABLE `_subtree` ENABLE KEYS */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
